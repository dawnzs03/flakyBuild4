subprojects {
	apply plugin: "java-library"

	group = "com.example.sample"

	repositories {
		maven {
			url "https://repository-cdn.liferay.com/nexus/content/groups/public"
		}
	}
}

task runGradleTest

project(":sample-api") {
	dependencies {
		api group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "3.1.0"
		api group: "com.liferay", name: "com.liferay.osgi.util", version: "3.0.0"
		api group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "2.6.0"
		api group: "org.osgi", name: "osgi.core", version: "6.0.0"
	}
}

project(":sample-service") {
	apply plugin: "com.liferay.portal.tools.service.builder"

	buildService {
		apiDir = "../sample-api/src/main/java"
		osgiModule = true
	}

	dependencies {
		api group: "com.liferay", name: "com.liferay.portal.spring.extender", version: "2.0.0"
		api project(":sample-api")
	}
}

runGradleTest {
	Project serviceProject = project(":sample-service")

	dependsOn serviceProject.tasks.buildService

	doLast {
		Project apiProject = project(":sample-api")

		String[] fileNames = [
			"src/main/java/com/example/sample/exception/NoSuchFooException.java",
			"src/main/java/com/example/sample/model/Foo.java",
			"src/main/java/com/example/sample/service/FooLocalService.java"
		]

		for (String fileName in fileNames) {
			File generatedFile = apiProject.file(fileName)

			assert generatedFile.exists()
		}

		fileNames = [
			"src/main/java/com/example/sample/model/impl/FooImpl.java",
			"src/main/java/com/example/sample/service/impl/FooLocalServiceImpl.java",
			"src/main/java/com/example/sample/service/util/ServiceProps.java",
			"src/main/resources/META-INF/sql/tables.sql",
			"src/main/resources/service.properties"
		]

		for (String fileName in fileNames) {
			File generatedFile = serviceProject.file(fileName)

			assert generatedFile.exists()
		}
	}
}