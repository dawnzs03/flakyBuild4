/**
 * SPDX-FileCopyrightText: (c) 2000 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.liferay.source.formatter.dependencies;

import com.liferay.document.library.kernel.exception.FileNameException;

/**
 * @author Hugo Huijser
 */
public class ElseStatement1 {

	public String getFileExtension(String fileName) throws FileNameException {
		int x = fileName.indexOf(".");

		if (x == -1) {
			throw new FileNameException();
		}
		else if (x > 10) {
			return "";
		}

		return fileName.substring(x + 1);
	}

	public int getInteger(String s) throws Exception {
		try {
			return Integer.valueOf(s);
		}
		catch (Exception exception) {
			if (exception instanceof NumberFormatException) {
				return -1;
			}

			throw new Exception(exception);
		}
	}

	public boolean hasValue(List<String> list, String value) {
		for (String s : list) {
			if (!s.equals(value)) {
				continue;
			}

			return true;
		}

		return false;
	}

	public boolean isNull(String s) {
		if (s == null) {
			return true;
		}

		return false;
	}

	protected int manyStatements(int a, int b) {
		int c = 0;

		if (a == 1) {
			return a - 1;
		}
		else if (b == 1) {
			if (a > 3) {
				c = b - 2;
			}
			else {
				return b - 3;
			}
		}
		else {
			if (a > 2) {
				return a - b;
			}

			c = 5;
		}

		return c + a + b;
	}

}