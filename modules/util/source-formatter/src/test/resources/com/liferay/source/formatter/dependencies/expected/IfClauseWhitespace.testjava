/**
 * SPDX-FileCopyrightText: (c) 2000 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.liferay.source.formatter.dependencies;

import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.StringUtil;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portlet.softwarecatalog.UnavailableProductVersionDirectDownloadURLException;

/**
 * @author Hugo Huijser
 */
public class IfClauseWhitespace {

	public void method() {
		String s = "test";
		String testString = "test";
		long testLong = 12345678901234;

		if ((s != null) &&
			(StringUtil.isLowerCase(s) || StringUtil.isUpperCase(s))) {

			return;
		}
		else if (Validator.isNotNull(testString) &&
				 (testLong == 12345678901234)) {

			return;
		}
		else if (Validator.isNotNull(testString) &&
				 (testLong == 12345678901234)) {

			return;
		}
		else if (StringUtil.contains(
					testString, "make this too long for single line") ||
				 StringUtil.contains(
					 testString, "make this too long also for single line")) {

			return;
		}

		if ((testString == null) ||
			StringUtil.contains(testString, "testString")) {

			return;
		}

		if (StringUtil.equalsIgnoreCase(
				testString,
				"this is a very long string that needs its own line")) {

			return;
		}

		while ((testString != null) &&
			   StringUtil.contains(testString, "hello world")) {

			testString = "test";
		}

		while ((testString != null) &&
			   (StringUtil.count("hello", "world") != StringUtil.count(
				   "hello", "w"))) {

			testString = testString + "test";
		}

		try {
			testString = "Hello";
		}
		catch (Exception exception) {
			if (exception instanceof PortalException) {
				testString = "World";
			}
			else if (exception instanceof SystemException ||
					 exception instanceof
						 UnavailableProductVersionDirectDownloadURLException) {

				return;
			}
		}

		if (testString.contains(
				"This string is so long that it will not be able to fit on " +
					"one single line")) {
		}
	}

}