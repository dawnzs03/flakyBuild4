@component-name = "portal-commerce"
definition {

	property custom.properties = "jsonws.web.service.paths.excludes=${line.separator}company.security.strangers.verify=false";
	property portal.release = "true";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Shopping Experience";

	setUp {
		CommerceConfiguration.commerceSetUp();
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@priority = 5
	test AssertGuestCartIsTransferredToAccount {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

		CommerceChannels.activatePaymentMethod(paymentMethod = "Money Order");

		Refresh();

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		AssertChecked.assertCheckedNotVisible(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Click(
			key_fixIssueButtonName = "Guest Checkout Authentication",
			locator1 = "CommerceEntry#FIX_ISSUE_BUTTON");

		Alert.viewSuccessMessage();

		Site.openSiteSettingsAdmin(siteURLKey = "speedwell");

		Site.manageMembershipOptions(allowManualMembershipManagement = "true");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "buyer@liferay.com",
			userFirstName = "Buyer",
			userLastName = "User",
			userScreenName = "buyer");

		Click(locator1 = "Icon#BACK");

		CommerceLogin.editPasswordCP(
			newPassword = "ttest",
			requirePasswordReset = "true",
			userScreenName = "buyer");

		Click(locator1 = "Icon#BACK");

		User.editUserSiteCP(
			siteName = "Speedwell",
			userScreenName = "buyer");

		User.logoutPG();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		FrontStore.viewMiniCart(
			cartItemNames = "U-Joint,",
			cartItemPriceValues = "24,",
			cartItemQuantities = "1,",
			cartItemSkUs = "SPEED55861,");

		Click(locator1 = "CommerceAccelerators#MINI_CART_CLOSE");

		CommerceNavigator.gotoSpeedwellAccountDropdownItem(dropdownItem = "Sign In");

		CommerceLogin.loginPG(
			newPassword = "test",
			password = "ttest",
			samlEnabled = "true",
			userEmailAddress = "buyer@liferay.com");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		CommerceNavigator.gotoMiniCart();

		FrontStore.viewMiniCart(
			cartItemNames = "U-Joint,",
			cartItemPriceValues = "24,",
			cartItemQuantities = "1,",
			cartItemSkUs = "SPEED55861,");

		Click(locator1 = "CommerceAccelerators#MINI_CART_CLOSE");
	}

	@priority = 5
	test AssertGuestCartItemIsNotTransferredIfSkuIsAlreadyPresent {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

		CommerceChannels.activatePaymentMethod(paymentMethod = "Money Order");

		Refresh();

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		AssertChecked.assertCheckedNotVisible(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Click(
			key_fixIssueButtonName = "Guest Checkout Authentication",
			locator1 = "CommerceEntry#FIX_ISSUE_BUTTON");

		Alert.viewSuccessMessage();

		Site.openSiteSettingsAdmin(siteURLKey = "speedwell");

		Site.manageMembershipOptions(allowManualMembershipManagement = "true");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "buyer@liferay.com",
			userFirstName = "Buyer",
			userLastName = "User",
			userScreenName = "buyer");

		Click(locator1 = "Icon#BACK");

		CommerceLogin.editPasswordCP(
			newPassword = "ttest",
			requirePasswordReset = "true",
			userScreenName = "buyer");

		Click(locator1 = "Icon#BACK");

		User.editUserSiteCP(
			siteName = "Speedwell",
			userScreenName = "buyer");

		User.logoutPG();

		CommerceLogin.speedwellLogin(
			newPassword = "test",
			password = "ttest",
			urlAppend = "web/speedwell",
			userEmailAddress = "buyer@liferay.com");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		FrontStore.viewMiniCart(
			cartItemNames = "U-Joint,",
			cartItemPriceValues = "24,",
			cartItemQuantities = "1,",
			cartItemSkUs = "SPEED55861,",
			cartSummaryQuantity = 1,
			cartSummarySubtotal = 24,
			cartSummaryTotal = ${cartSummarySubtotal});

		Click(locator1 = "CommerceAccelerators#MINI_CART_CLOSE");

		CommerceLogin.speedwellLogout();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 5);

		CommerceNavigator.gotoMiniCart();

		FrontStore.viewMiniCart(
			cartItemNames = "U-Joint,",
			cartItemPriceValues = "24,",
			cartItemQuantities = "5,",
			cartItemSkUs = "SPEED55861,",
			cartSummaryQuantity = 5,
			cartSummarySubtotal = 120,
			cartSummaryTotal = ${cartSummarySubtotal});

		Click(locator1 = "CommerceAccelerators#MINI_CART_CLOSE");

		CommerceLogin.speedwellLogin(
			password = "test",
			urlAppend = "web/speedwell",
			userEmailAddress = "buyer@liferay.com");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		CommerceNavigator.gotoMiniCart();

		FrontStore.viewMiniCart(
			cartItemNames = "U-Joint,",
			cartItemPriceValues = "24,",
			cartItemQuantities = "1,",
			cartItemSkUs = "SPEED55861,",
			cartSummaryQuantity = 1,
			cartSummarySubtotal = 24,
			cartSummaryTotal = ${cartSummarySubtotal});
	}

	@priority = 5
	test AssertGuestCartItemIsTransferredToExistingCart {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

		CommerceChannels.activatePaymentMethod(paymentMethod = "Money Order");

		Refresh();

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		AssertChecked.assertCheckedNotVisible(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Click(
			key_fixIssueButtonName = "Guest Checkout Authentication",
			locator1 = "CommerceEntry#FIX_ISSUE_BUTTON");

		Alert.viewSuccessMessage();

		Site.openSiteSettingsAdmin(siteURLKey = "speedwell");

		Site.manageMembershipOptions(allowManualMembershipManagement = "true");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "buyer@liferay.com",
			userFirstName = "Buyer",
			userLastName = "User",
			userScreenName = "buyer");

		Click(locator1 = "Icon#BACK");

		CommerceLogin.editPasswordCP(
			newPassword = "ttest",
			requirePasswordReset = "true",
			userScreenName = "buyer");

		Click(locator1 = "Icon#BACK");

		User.editUserSiteCP(
			siteName = "Speedwell",
			userScreenName = "buyer");

		User.logoutPG();

		CommerceLogin.speedwellLogin(
			newPassword = "test",
			password = "ttest",
			urlAppend = "web/speedwell",
			userEmailAddress = "buyer@liferay.com");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		FrontStore.viewMiniCart(
			cartItemNames = "U-Joint,",
			cartItemPriceValues = "24,",
			cartItemQuantities = "1,",
			cartItemSkUs = "SPEED55861,",
			cartSummaryQuantity = 1,
			cartSummarySubtotal = 24,
			cartSummaryTotal = ${cartSummarySubtotal});

		Click(locator1 = "CommerceAccelerators#MINI_CART_CLOSE");

		CommerceLogin.speedwellLogout();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "Transmission Cooler Line Assembly",
			productQuantity = 5);

		CommerceNavigator.gotoMiniCart();

		FrontStore.viewMiniCart(
			cartItemNames = "Transmission Cooler Line Assembly,",
			cartItemPriceValues = "15,",
			cartItemQuantities = "5,",
			cartItemSkUs = "SPEED55860,",
			cartSummaryQuantity = 5,
			cartSummarySubtotal = 75,
			cartSummaryTotal = ${cartSummarySubtotal});

		Click(locator1 = "CommerceAccelerators#MINI_CART_CLOSE");

		CommerceLogin.speedwellLogin(
			password = "test",
			urlAppend = "web/speedwell",
			userEmailAddress = "buyer@liferay.com");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		CommerceNavigator.gotoMiniCart();

		FrontStore.viewMiniCart(
			cartItemNames = "U-Joint,Transmission Cooler Line Assembly,",
			cartItemPriceValues = "24,15,",
			cartItemQuantities = "1,5,",
			cartItemSkUs = "SPEED55861,SPEED55860,",
			cartSummaryQuantity = 6,
			cartSummarySubtotal = 99,
			cartSummaryTotal = ${cartSummarySubtotal});
	}

	@priority = 5
	test AssertGuestCheckoutAuthenticationPage {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

		CommerceChannels.activatePaymentMethod(paymentMethod = "Money Order");

		Refresh();

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		AssertChecked.assertCheckedNotVisible(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Click(
			key_fixIssueButtonName = "Guest Checkout Authentication",
			locator1 = "CommerceEntry#FIX_ISSUE_BUTTON");

		Alert.viewSuccessMessage();

		User.logoutPG();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		GuestCheckout.assertGuestCheckoutAuthenticationPage();
	}

	@priority = 5
	test AssertGuestsWithSameEmailHaveDifferentAccounts {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

		CommerceChannels.activatePaymentMethod(paymentMethod = "Money Order");

		Refresh();

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		AssertChecked.assertCheckedNotVisible(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Click(
			key_fixIssueButtonName = "Guest Checkout Authentication",
			locator1 = "CommerceEntry#FIX_ISSUE_BUTTON");

		Alert.viewSuccessMessage();

		User.logoutPG();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		Button.click(button = "Continue as a Guest");

		CommerceCheckout.initializersCheckout(
			guestEmail = "buyer@liferay.com",
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Guest Account 1",
			newAddressZipCode = "Test Zip Code",
			paymentMethod = "Money Order",
			productName = "U-Joint",
			productQuantity = 1,
			productUnitPrice = 24,
			shippingMethod = "Standard");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		Button.click(button = "Continue as a Guest");

		CommerceCheckout.initializersCheckout(
			guestEmail = "buyer@liferay.com",
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Guest Account 2",
			newAddressZipCode = "Test Zip Code",
			paymentMethod = "Money Order",
			productName = "U-Joint",
			productQuantity = 1,
			productUnitPrice = 24,
			shippingMethod = "Standard");

		Navigator.openURL();

		User.loginPG();

		ApplicationsMenu.gotoPortlet(
			category = "Accounts",
			panel = "Control Panel",
			portlet = "Accounts");

		LexiconEntry.viewEntryStatus(
			rowEntry = "Guest Account 1",
			rowStatus = "Active");

		CommerceNavigator.gotoEntry(entryName = "Guest Account 1");

		CommerceEntry.viewAccountsEntry(
			accountEmail = "buyer@liferay.com",
			accountName = "Guest Account 1",
			accountType = "Guest");

		Click(locator1 = "Icon#BACK");

		LexiconEntry.viewEntryStatus(
			rowEntry = "Guest Account 2",
			rowStatus = "Active");

		CommerceNavigator.gotoEntry(entryName = "Guest Account 2");

		CommerceEntry.viewAccountsEntry(
			accountEmail = "buyer@liferay.com",
			accountName = "Guest Account 2",
			accountType = "Guest");
	}

	@priority = 5
	test AssertNewAccountIsCreatedAfterGuestCheckout {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

		CommerceChannels.activatePaymentMethod(paymentMethod = "Money Order");

		Refresh();

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		Click(
			key_fixIssueButtonName = "Guest Checkout Authentication",
			locator1 = "CommerceEntry#FIX_ISSUE_BUTTON");

		Button.clickSave();

		User.logoutPG();

		Navigator.openSiteURL(siteName = "Speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		Button.click(button = "Continue as a Guest");

		CommerceCheckout.initializersCheckout(
			guestEmail = "buyer@liferay.com",
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			paymentMethod = "Money Order",
			productName = "U-Joint",
			productQuantity = 1,
			productUnitPrice = 24,
			shippingMethod = "Standard");

		Navigator.openURL();

		User.logoutPG();

		User.firstLoginPG();

		ApplicationsMenu.gotoPortlet(
			category = "Accounts",
			panel = "Control Panel",
			portlet = "Accounts");

		CommerceNavigator.gotoEntry(entryName = "Address Name");

		var guestAccountEmail = CommerceJSONAccountsAPI._getCommerceAccountEmail(
			accountName = "Address Name",
			accountType = "Guest");

		TestUtils.assertEquals(
			actual = ${guestAccountEmail},
			expected = "buyer@liferay.com");
	}

	@description = "COMMERCE-11277. As a Guest User, I can create a Quote Request in the Cart Summary by entering a personal message."
	@priority = 5
	test CanGuestUserCreateQuoteRequestOnSpeedwell {
		property custom.properties = "feature.flag.COMMERCE-11028=true";
		property portal.acceptance = "true";

		task ("Given a Speedwell site is created") {
			CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");
		}

		task ("And 'Allow Request a Quote on a Fully Priced Cart' and 'Guest Checkout' are enabled for the site") {
			CommerceChannels.openChannelsAdmin();

			CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Guest Checkout",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Request a Quote",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

			Button.clickSave();
		}

		task ("And the Guest User clicks the 'Request a Quote' button in the Mini Cart") {
			User.logoutPG();

			Navigator.openSiteURL(siteName = "Speedwell");

			CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

			FrontStore.addInitializerProductToCart(
				productName = "U-Joint",
				productQuantity = 1);

			CommerceNavigator.gotoMiniCart();

			Button.click(button = "Request a Quote");
		}

		task ("When the Guest clicks again the 'Request a Quote' button in the Cart Summary") {
			Click(
				buttonId = "requestQuote",
				locator1 = "Button#BUTTON_ID");
		}

		task ("Then the a modal named Request a Quote is shown") {
			AssertElementPresent(
				key_title = "Request a Quote",
				locator1 = "CommerceFrontStore#MODAL_TITLE");
		}

		task ("When the Guest submits the request after writing a message in the note area") {
			CommerceOrders.createQuoteRequest(quoteRequestValue = "I kindly request a quote for this product.");
		}

		task ("Then the quote request is placed with the status 'Quote Requested' in the Orders Page") {
			User.loginPG(
				password = "test",
				userEmailAddress = "test@liferay.com");

			CommerceOrders.openOrdersAdmin();

			AssertElementPresent(
				key_orderStatus = "Quote Requested",
				locator1 = "CommerceOrders#ORDER_ELLIPSIS_BY_STATUS");
		}
	}

	@priority = 5
	test GuestAccountIsNotCombinedWithExistingUserAccount {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

		CommerceChannels.activatePaymentMethod(paymentMethod = "Money Order");

		Refresh();

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		AssertChecked.assertCheckedNotVisible(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Click(
			key_fixIssueButtonName = "Guest Checkout Authentication",
			locator1 = "CommerceEntry#FIX_ISSUE_BUTTON");

		Alert.viewSuccessMessage();

		Site.openSiteSettingsAdmin(siteURLKey = "speedwell");

		Site.manageMembershipOptions(allowManualMembershipManagement = "true");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "buyer@liferay.com",
			userFirstName = "Buyer",
			userLastName = "User",
			userScreenName = "buyer");

		Click(locator1 = "Icon#BACK");

		CommerceLogin.editPasswordCP(
			newPassword = "ttest",
			requirePasswordReset = "true",
			userScreenName = "buyer");

		Click(locator1 = "Icon#BACK");

		User.editUserSiteCP(
			siteName = "Speedwell",
			userScreenName = "buyer");

		User.logoutPG();

		CommerceLogin.speedwellLogin(
			newPassword = "test",
			password = "ttest",
			urlAppend = "web/speedwell",
			userEmailAddress = "buyer@liferay.com");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		CommerceCheckout.initializersCheckout(
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			paymentMethod = "Money Order",
			productName = "U-Joint",
			productQuantity = 1,
			productUnitPrice = 24,
			shippingMethod = "Standard");

		User.logoutPG();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		Button.click(button = "Continue as a Guest");

		CommerceCheckout.initializersCheckout(
			guestEmail = "buyer@liferay.com",
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Guest Account",
			newAddressZipCode = "Test Zip Code",
			paymentMethod = "Money Order",
			productName = "U-Joint",
			productQuantity = 1,
			productUnitPrice = 24,
			shippingMethod = "Standard");

		CommerceLogin.speedwellLogin(
			password = "test",
			urlAppend = "web/speedwell",
			userEmailAddress = "buyer@liferay.com");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "My Account");

		CommerceNavigator.gotoSpeedwellDashboardItem(dashboardItem = "My Orders");

		AssertElementPresent(
			key_accountName = "Buyer User",
			locator1 = "CommerceAccelerators#SPEEDWELL_MY_ORDERS_ORDER_ACCOUNT");

		AssertElementNotPresent(
			key_accountName = "Guest Account",
			locator1 = "CommerceAccelerators#SPEEDWELL_MY_ORDERS_ORDER_ACCOUNT");

		User.logoutPG();

		User.loginPG();

		ApplicationsMenu.gotoPortlet(
			category = "Accounts",
			panel = "Control Panel",
			portlet = "Accounts");

		LexiconEntry.viewEntryStatus(
			rowEntry = "Buyer User",
			rowStatus = "Active");

		CommerceNavigator.gotoEntry(entryName = "Buyer User");

		CommerceEntry.viewAccountsEntry(
			accountEmail = "buyer@liferay.com",
			accountName = "Buyer User",
			accountType = "Person");

		Click(locator1 = "Icon#BACK");

		LexiconEntry.viewEntryStatus(
			rowEntry = "Guest Account",
			rowStatus = "Active");

		CommerceNavigator.gotoEntry(entryName = "Guest Account");

		CommerceEntry.viewAccountsEntry(
			accountEmail = "buyer@liferay.com",
			accountName = "Guest Account",
			accountType = "Guest");
	}

	@priority = 5
	test GuestCheckoutDisabled {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

		AssertNotChecked.assertNotCheckedNotVisible(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		User.logoutPG();

		Navigator.openSiteURL(siteName = "Speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		AssertElementPresent(locator1 = "CommerceAccelerators#GENERAL_QUANTITY_SELECTOR_INPUT_FIELD_ENABLED");

		CommerceAcceleratorsInitializer.viewEnabledAddToCartButton(productName = "U-Joint");
	}

	@priority = 5
	test GuestCheckoutEnabled {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

		CommerceChannels.activatePaymentMethod(paymentMethod = "Money Order");

		Refresh();

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		AssertChecked.assertCheckedNotVisible(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Click(
			key_fixIssueButtonName = "Guest Checkout Authentication",
			locator1 = "CommerceEntry#FIX_ISSUE_BUTTON");

		Button.clickSave();

		User.logoutPG();

		Navigator.openSiteURL(siteName = "Speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		Button.click(button = "Continue as a Guest");

		CommerceCheckout.initializersCheckout(
			guestEmail = "buyer@liferay.com",
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			paymentMethod = "Money Order",
			productName = "U-Joint",
			productQuantity = 1,
			productUnitPrice = 24,
			shippingMethod = "Standard");

		AssertTextEquals(
			locator1 = "CommerceAccelerators#CHECKOUT_SUCCESS_MESSAGE",
			value1 = "Your order has been processed but not completed yet.");
	}

	@priority = 5
	test GuestCheckoutEnabledWithoutAuthenticationPage {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		AssertChecked.assertCheckedNotVisible(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		User.logoutPG();

		Navigator.openSiteURL(siteName = "Speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		CommerceCheckout.initializersCheckout(
			guestEmail = "buyer@liferay.com",
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			productName = "U-Joint",
			productQuantity = 1,
			productUnitPrice = 24,
			shippingMethod = "Standard");
	}

	@priority = 5
	test GuestCheckoutWithNoShippableProduct {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

		CommerceChannels.activatePaymentMethod(paymentMethod = "Money Order");

		Refresh();

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		Click(
			key_fixIssueButtonName = "Guest Checkout Authentication",
			locator1 = "CommerceEntry#FIX_ISSUE_BUTTON");

		Button.clickSave();

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceProducts.searchProduct(search = "U-Joint");

		CommerceNavigator.gotoEntry(entryName = "U-Joint");

		CommerceEntry.gotoMenuTab(menuTab = "Configuration");

		Uncheck.uncheckToggleSwitch(
			key_toggleSwitchLabel = "Shippable",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickPublish();

		User.logoutPG();

		Navigator.openSiteURL(siteName = "Speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		Button.click(button = "Continue as a Guest");

		AssertElementNotPresent(
			key_label = "Shipping Address",
			locator1 = "CommerceAccelerators#CHECKOUT_MULTI_STEP_INDICATOR_LABEL");

		CommerceCheckout.initializersCheckout(
			guestEmail = "buyer@liferay.com",
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			paymentMethod = "Money Order",
			productName = "U-Joint",
			productQuantity = 1,
			productUnitPrice = 24);
	}

	@priority = 5
	test GuestCheckoutWithShippableProduct {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

		CommerceChannels.activatePaymentMethod(paymentMethod = "Money Order");

		Refresh();

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		Click(
			key_fixIssueButtonName = "Guest Checkout Authentication",
			locator1 = "CommerceEntry#FIX_ISSUE_BUTTON");

		Button.clickSave();

		User.logoutPG();

		Navigator.openSiteURL(siteName = "Speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		Button.click(button = "Continue as a Guest");

		AssertElementPresent(locator1 = "CommerceAccelerators#GUEST_CHECKOUT_CHECK_EMAIL_LABEL");

		CommerceCheckout.initializersCheckout(
			guestEmail = "buyer@liferay.com",
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			paymentMethod = "Money Order",
			productName = "U-Joint",
			productQuantity = 1,
			productUnitPrice = 24,
			shippingMethod = "Standard");
	}

	@priority = 5
	test UserAccountIsNotCombinedWithExistingGuestAccount {
		property portal.acceptance = "true";
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Security Tools",
			configurationName = "CAPTCHA",
			configurationScope = "System Scope");

		SystemSettings.configureSystemSetting(
			enableSetting = "false",
			settingFieldName = "Create Account CAPTCHA Enabled");

		Refresh();

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Speedwell");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Speedwell Portal");

		CommerceChannels.activatePaymentMethod(paymentMethod = "Money Order");

		Refresh();

		Check.checkToggleSwitch(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Button.clickSave();

		AssertChecked.assertCheckedNotVisible(
			key_toggleSwitchLabel = "Guest Checkout",
			locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");

		Click(
			key_fixIssueButtonName = "Guest Checkout Authentication",
			locator1 = "CommerceEntry#FIX_ISSUE_BUTTON");

		Alert.viewSuccessMessage();

		User.logoutPG();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		Button.click(button = "Continue as a Guest");

		CommerceCheckout.initializersCheckout(
			guestEmail = "buyer@liferay.com",
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Guest Account",
			newAddressZipCode = "Test Zip Code",
			paymentMethod = "Money Order",
			productName = "U-Joint",
			productQuantity = 1,
			productUnitPrice = 24,
			shippingMethod = "Standard");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/speedwell");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = 1);

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		Click(locator1 = "Link#CREATE_ACCOUNT");

		CommerceLogin.createAccount(
			newPassword = "ttest",
			userEmailAddress = "buyer@liferay.com",
			userFirstName = "Buyer",
			userLastName = "User",
			userScreenName = "buyeruser");

		CommerceLogin.speedwellLogin(
			newPassword = "test",
			password = "ttest",
			urlAppend = "web/speedwell",
			userEmailAddress = "buyer@liferay.com");

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		CommerceCheckout.initializersCheckout(
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			paymentMethod = "Money Order",
			productName = "U-Joint",
			productQuantity = 1,
			productUnitPrice = 24,
			shippingMethod = "Standard");

		CommerceNavigator.gotoSpeedwellTopbarItem(menuItem = "My Account");

		CommerceNavigator.gotoSpeedwellDashboardItem(dashboardItem = "My Orders");

		AssertElementPresent(
			key_accountName = "Buyer User",
			locator1 = "CommerceAccelerators#SPEEDWELL_MY_ORDERS_ORDER_ACCOUNT");

		AssertElementNotPresent(
			key_accountName = "Guest Account",
			locator1 = "CommerceAccelerators#SPEEDWELL_MY_ORDERS_ORDER_ACCOUNT");

		User.logoutPG();

		User.loginPG();

		ApplicationsMenu.gotoPortlet(
			category = "Accounts",
			panel = "Control Panel",
			portlet = "Accounts");

		LexiconEntry.viewEntryStatus(
			rowEntry = "Guest Account",
			rowStatus = "Active");

		CommerceNavigator.gotoEntry(entryName = "Guest Account");

		CommerceEntry.viewAccountsEntry(
			accountEmail = "buyer@liferay.com",
			accountName = "Guest Account",
			accountType = "Guest");

		Click(locator1 = "Icon#BACK");

		LexiconEntry.viewEntryStatus(
			rowEntry = "Buyer User",
			rowStatus = "Active");

		CommerceNavigator.gotoEntry(entryName = "Buyer User");

		CommerceEntry.viewAccountsEntry(
			accountEmail = "buyer@liferay.com",
			accountName = "Buyer User",
			accountType = "Person");
	}

}