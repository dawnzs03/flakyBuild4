definition {

	macro _addChannel {
		Variables.assertDefined(parameterList = "${channelName},${channelType},${currencyCode}");

		var baseURL = ${baseURL};

		if (!(isSet(accountId))) {
			var accountId = 0;
		}

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		if (!(isSet(accountId))) {
			var accountId = "";
		}

		if (!(isSet(externalReferenceCode))) {
			var externalReferenceCode = "";
		}

		if (!(isSet(siteGroupId))) {
			var siteGroupId = 0;
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-channel/v1.0/channels \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"accountId": "${accountId}",
					"externalReferenceCode": "${externalReferenceCode}",
					"siteGroupId": ${siteGroupId},
					"name": "${channelName}",
					"type": "${channelType}",
					"currencyCode": "${currencyCode}"
				}'
		''';

		var addChannelResponse = JSONCurlUtil.post(${curl});

		return ${addChannelResponse};
	}

	macro _deleteAllCommerceChannels {
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		var channelsCount = CommerceJSONChannelsAPI._getCommerceChannelsCount();

		if (${channelsCount} != 0) {
			var channelIds = CommerceJSONChannelsAPI._getCommerceChannelIds(channelCount = ${channelsCount});

			for (var channelId : list ${channelIds}) {
				echo("Deleting Commerce channel with id: ${channelId}");

				var userLoginInfo = JSONUtil2.formatJSONUser();

				var curl = '''
					${baseURL}/o/headless-commerce-admin-channel/v1.0/channels/${channelId} \
						-u ${userLoginInfo} \
						-H 'accept: application/json' \
				''';

				JSONCurlUtil.delete(${curl});
			}
		}
		else {
			echo("No Commerce Channels to be deleted");
		}
	}

	macro _getCommerceAccountIdByChannelId {
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		var channelId = CommerceJSONChannelsAPI._getCommerceChannelIdByName(channelName = ${channelName});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-channel/v1.0/channels/${channelId} \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
		''';

		var accountId = JSONCurlUtil.get(${curl}, "$..['accountId']");

		return ${accountId};
	}

	macro _getCommerceChannelIdByName {
		Variables.assertDefined(parameterList = ${channelName});

		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		if (isSet(channelCount)) {
			var channelsCount = ${channelCount};
		}
		else {
			var channelsCount = 100;
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-channel/v1.0/channels?pageSize=${channelsCount} \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
		''';

		var channelId = JSONCurlUtil.get(${curl}, "$.items[?(@['name'] == '${channelName}')].['id']");

		return ${channelId};
	}

	macro _getCommerceChannelIds {
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		if (isSet(channelCount)) {
			var channelsCount = ${channelCount};
		}
		else {
			var channelsCount = 100;
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-channel/v1.0/channels?pageSize=${channelsCount} \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
		''';

		var channelIds = JSONCurlUtil.get(${curl}, "$..['id']");

		return ${channelIds};
	}

	macro _getCommerceChannelsCount {
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-channel/v1.0/channels \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
		''';

		var channelsCount = JSONCurlUtil.get(${curl}, "$['totalCount']");

		echo("The Commerce channels count is: ${channelsCount}");

		return ${channelsCount};
	}

	macro _patchCommerceChannel {
		Variables.assertDefined(parameterList = ${channelName});

		var baseURL = ${baseURL};
		var fieldsList = ListUtil.newList();
		var commerceChannelId = CommerceJSONChannelsAPI._getCommerceChannelIdByName(channelName = ${channelName});

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		if (isSet(accountId)) {
			var accountId = '''"accountId": ${accountId}''';

			ListUtil.add(${fieldsList}, ${accountId});
		}
		else {
			if (isSet(accountIdByName)) {
				var accountId = JSONAccountEntryAPI._getAccountEntryId(accountEntryName = ${accountIdByName});

				var accountId = '''"accountId": ${accountId}''';

				ListUtil.add(${fieldsList}, ${accountId});
			}
		}

		var fieldsList = ListUtil.toString(${fieldsList});

		var payload = CommerceUtilities.getPayloadFromFieldsList(fieldsList = ${fieldsList});
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-channel/v1.0/channels/${commerceChannelId} \
				-u ${userLoginInfo} \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{${payload}}'
		''';

		JSONCurlUtil.patch(${curl});
	}

}