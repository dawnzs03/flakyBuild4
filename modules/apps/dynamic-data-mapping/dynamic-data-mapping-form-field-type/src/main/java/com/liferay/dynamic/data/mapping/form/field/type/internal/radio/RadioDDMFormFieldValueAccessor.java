/**
 * SPDX-FileCopyrightText: (c) 2000 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.liferay.dynamic.data.mapping.form.field.type.internal.radio;

import com.liferay.dynamic.data.mapping.form.field.type.DDMFormFieldValueAccessor;
import com.liferay.dynamic.data.mapping.form.field.type.constants.DDMFormFieldTypeConstants;
import com.liferay.dynamic.data.mapping.form.field.type.internal.util.DDMFormFieldValueUtil;
import com.liferay.dynamic.data.mapping.storage.DDMFormFieldValue;

import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.osgi.service.component.annotations.Component;

/**
 * @author Renato Rego
 */
@Component(
	property = "ddm.form.field.type.name=" + DDMFormFieldTypeConstants.RADIO,
	service = DDMFormFieldValueAccessor.class
)
public class RadioDDMFormFieldValueAccessor
	implements DDMFormFieldValueAccessor<String> {

	@Override
	public String[] getArrayGenericType() {
		return new String[0];
	}

	@Override
	public String getValue(DDMFormFieldValue ddmFormFieldValue, Locale locale) {
		return DDMFormFieldValueUtil.getOptionValue(ddmFormFieldValue, locale);
	}

	@Override
	public String getValueForEvaluation(
		DDMFormFieldValue ddmFormFieldValue, Locale locale) {

		String optionValue = DDMFormFieldValueUtil.getOptionValue(
			ddmFormFieldValue, locale);

		Matcher matcher = _autoGeneratedIDPattern.matcher(optionValue);

		if (!matcher.matches() ||
			(ddmFormFieldValue.getDDMFormValues() == null)) {

			return optionValue;
		}

		return DDMFormFieldValueUtil.getOptionLabel(ddmFormFieldValue, locale);
	}

	private static final Pattern _autoGeneratedIDPattern = Pattern.compile(
		"^[\\D]+[\\d]{8}$");

}