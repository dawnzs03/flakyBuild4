definition {

	static var clientExtension = "";
	static var companyWebId = "";

	macro commerceTearDown {
		JSONUser.tearDownNonAdminUsers();

		CommerceJSONAccountsAPI._deleteAllCommerceAccounts();

		CommerceJSONCatalogsAPI._deleteAllNoSystemCommerceCatalogs();

		CommerceJSONChannelsAPI._deleteAllCommerceChannels();

		CommerceJSONOptionsAPI._deleteAllCommerceOptions();

		CommerceJSONProductsAPI._deleteAllCommerceProducts();

		CommerceJSONSpecificationGroupsAPI._deleteAllCommerceSpecificationGroups();

		CommerceJSONSpecificationsAPI._deleteAllCommerceSpecifications();

		CommerceConfiguration.commerceInitializersTearDown();
	}

	macro marketplaceInitializersTearDown {
		var companyWebId = JSONCompany.getWebId();

		if (isSet(clientExtension)) {
			var clientExtension = "liferay-marketplace-custom-element";

			AntCommands.runCommand("build-test-workspace.xml", "undeploy-workspace-client-extension -Dvirtual.instance.id=${companyWebId} -Dworkspace.client.extension.name=${clientExtension}");
		}

		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");

			Site.openSitesAdmin();

			if (IsElementPresent(key_tableEntry = "Marketplace Site", locator1 = "LexiconTable#TABLE_ENTRY")) {
				Site.openSitesAdmin();

				PortletEntry.selectAll();

				Click(locator1 = "Icon#SITES_VERTICAL_ELLIPSIS");

				MenuItem.clickNoError(menuItem = "Delete");

				Click(locator1 = "Button#MODAL_DELETE");

				Alert.viewSuccessMessage();
			}

			Account.openAccountsAdmin();

			if (IsElementPresent(key_tableEntry = "QA", locator1 = "LexiconTable#TABLE_ENTRY")) {
				Account.tearDownCP();
			}

			MP2Configuration.commerceTearDown();

			if (isSet(doLogout)) {
				User.logoutPG();
			}
		}
	}

	macro marketplaceSetUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		var companyWebId = JSONCompany.getWebId();
		var clientExtension = "liferay-marketplace-custom-element";

		AntCommands.runCommand("build-test-workspace.xml", "deploy-workspace-client-extension -Dvirtual.instance.id=${companyWebId} -Dworkspace.client.extension.name=${clientExtension}");

		WaitForConsoleTextPresent(value1 = "STARTED liferaymarketplacecustomelement");

		HeadlessSite.addSite(
			siteName = "Marketplace Site",
			templateName = "Liferay Marketplace",
			templateType = "Site Initializer");

		ApplicationsMenu.gotoSite(site = "Marketplace Site");

		WaitForPageLoad();
	}

}