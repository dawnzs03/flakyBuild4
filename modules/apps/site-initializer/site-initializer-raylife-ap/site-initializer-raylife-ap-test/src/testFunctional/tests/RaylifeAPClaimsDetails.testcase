@component-name = "portal-solutions"
definition {

	property custom.properties = "feature.flag.LPS-165493=true";
	property osgi.modules.includes = "site-initializer-raylife-ap";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Raylife AP";

	var testSiteName = "Raylife AP";
	var testSiteURL = "raylife-ap";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Raylife AP Site") {
			Raylife.createRaylifeSite(siteName = "Raylife D2C");

			Raylife.createRaylifeSite(siteName = "Raylife AP");
		}

		task ("Login as Scott Producer because of roles and permissions") {
			User.logoutPG();

			RaylifeAP.userLoginInRaylife(email = "scott.producer");

			RaylifeAP.goToRaylifeUserProfileMenu(raylifeSite = "Raylife AP");
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		RaylifeAP.deleteAllCreatedEntries(searchTerm = "Testing");

		RaylifeAP.tearDownCP();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "Story ID: LPS-160816 | Test Summary: Verify if the user can access the policy details page through policy number link."
	@priority = 4
	test CanUserAccessPolicyDetails {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		task ("Given I go to the Applications page") {
			RaylifeAPNavigator.gotoSidebarItem(itemName = "Claims");
		}

		task ("When I click on the Claim Number") {
			RaylifeAP.clickOnClaimNumber();
		}

		task ("And go back to Policy Detail Page") {
			RaylifeAP.clickOnPolicyNumberOnClaimDetais();

			Navigator.selectSpecificWindow(windowTitle = "Policy Details - Raylife AP - Liferay DXP");
		}

		task ("Then validate if the user are on Policy Detail Page") {
			RaylifeAP.assertPolicyDetailPage();
		}
	}

	@description = "Story ID: LPS-160816 | Test Summary: Verify if the user can navigate back to the Claims dashboard in the upper left corner."
	@priority = 4
	test CanUserCanGoBackToClaimsPage {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		task ("Given I go to the Applications page") {
			RaylifeAPNavigator.gotoSidebarItem(itemName = "Claims");
		}

		task ("When I click on the Claim Number") {
			RaylifeAP.clickOnClaimNumber();
		}

		task ("And go back to Claims Page") {
			RaylifeAP.clickOnBackToClaimsPage();
		}

		task ("Then validate if the user are on Claims Page") {
			RaylifeAP.assertClaimNumberVisible();
		}
	}

	@description = "Story ID: LPS-160816 | Test Summary: Verify if a claim with the settled status, the status is displayed green and theres settled date and settled amount displayed."
	@priority = 4
	test VerifyDisplayedStatusGreen {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		task ("Given I go to the Applications page") {
			RaylifeAPNavigator.gotoSidebarItem(itemName = "Claims");
		}

		task ("When I click on the Claim Number") {
			RaylifeAP.clickOnClaimNumber();
		}

		task ("Validate the Settled green Status") {
			RaylifeAP.assertSettledStatus();
		}
	}

	@description = "Story ID: LPS-160816 | Test Summary: Verify if a claim with the Not Settled status, only the submitted date appears."
	@priority = 4
	test VerifyStatusNotSettled {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		task ("Given I go to the Applications page") {
			RaylifeAPNavigator.gotoSidebarItem(itemName = "Claims");
		}

		task ("When I click on the Claim Number") {
			RaylifeAP.clickOnClaimNumber();
		}

		task ("Validate the Settled Status") {
			RaylifeAP.assertSettledStatus();
		}
	}

}