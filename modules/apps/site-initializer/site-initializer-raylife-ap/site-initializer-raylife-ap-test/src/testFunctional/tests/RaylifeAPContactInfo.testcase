@component-name = "portal-solutions"
definition {

	property custom.properties = "feature.flag.LPS-165493=true";
	property osgi.modules.includes = "site-initializer-raylife-ap";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Raylife AP";

	var testSiteName = "Raylife AP";
	var testSiteURL = "raylife-ap";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Raylife AP Site") {
			Site.openSitesAdmin();

			Raylife.createRaylifeSite(siteName = "Raylife D2C");

			Raylife.createRaylifeSite(siteName = "Raylife AP");
		}

		task ("Login as Scott Producer because of roles and permissions") {
			User.logoutPG();

			RaylifeAP.userLoginInRaylife(email = "scott.producer");

			RaylifeAP.goToRaylifeUserProfileMenu(raylifeSite = "Raylife AP");
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		Raylife.tearDownCP();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "Story ID: LPS-146333 | Test Summary: Verify if after user clicks on 'Save' button the center status change to All Changes Saved"
	@ignore = "true"
	@priority = 3
	test AssertCenterStatusChangeAfterSaveButtonClicked {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		// Skip portal instance due to LRQA-79129. Uskip after it is resolved

		task ("Given that an user start a new application flow") {
			RaylifeApplicationModal.openNewApplicationFlow(
				insurance = "Personal",
				product = "Auto");
		}

		task ("When the user fullfil Contact Info forms") {
			RaylifeApplicationModal.typeAllNewApplicationContactInfoFields(
				apt = 0000,
				city = "New York",
				emailAddress = "test@liferay.com",
				firstName = "Testing",
				lastName = "Model",
				phoneNumber = 0123456789,
				state = "NY",
				streetAddress = "Address",
				zipCode = 12345);
		}

		task ("Then assert if after user clicks on 'Save' button the center status change to All Changes Saved") {
			AssertTextEquals(
				key_status = "All Changes Saved",
				locator1 = "RaylifeApplicationModal#CENTER_STATUS",
				value1 = "All Changes Saved");
		}
	}

	@description = "Story ID: LPS-146333 | Test Summary: Verify if the center status No Changes Made change to Unsaved Changes after any part of the form is modified"
	@ignore = "true"
	@priority = 3
	test AssertStatusChangeToUnsavedChanges {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Given that an user start a new application flow and Contact Info") {
			RaylifeApplicationModal.openNewApplicationFlow(
				insurance = "Personal",
				product = "Auto");
		}

		task ("Then assert if the center status No Changes Made change to Unsaved Changes after any part of the form is modified") {
			AssertTextEquals(
				key_status = "No Changes Made",
				locator1 = "RaylifeApplicationModal#CENTER_STATUS",
				value1 = "No Changes Made");

			RaylifeApplicationModal.typeNewApplicationInfoFields(
				label = "firstName",
				value = "Testing");

			AssertTextEquals(
				key_status = "Unsaved Changes",
				locator1 = "RaylifeApplicationModal#CENTER_STATUS",
				value1 = "Unsaved Changes");
		}
	}

	@description = "Story ID: LPS-146333 | Test Summary: Verify if Date picker works"
	@priority = 4
	test IfDatePickerWorks {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Given the Contact Info form is open") {
			RaylifeAPNavigator.gotoSidebarItem(itemName = "Dashboard");

			RaylifeApplicationModal.openNewApplicationFlow(
				insurance = "Personal",
				product = "Auto");
		}

		task ("Then I should be able to assert that the Date of Birth field works") {
			var nextDayDate = DateUtil.getFormattedDate("+1", "MM/dd/yyyy");

			RaylifeApplicationModal.birthDate(nextDayDate = ${nextDayDate});
		}
	}

	@description = "Story ID: LPS-146333 | Test Summary: Verify if message You must enter first name, last name, phone number, and email address to save this quote. is present when user passes the mouse over Save button"
	@ignore = "true"
	@priority = 3
	test IfMessageFromSaveButtonShowsUp {
	}

	@description = "Story ID: LPS-146333 | Test Summary: Verify after user fill out all required fields the NEXT button permits them to go to the next step"
	@priority = 4
	test NextButtonWorksWhenFieldsAreFilled {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Given that I go to the Contact Info form") {
			RaylifeAPNavigator.gotoSidebarItem(itemName = "Dashboard");

			RaylifeApplicationModal.openNewApplicationFlow(
				insurance = "Personal",
				product = "Auto");
		}

		task ("When I go to the Contact Info form") {
			var nextDayDate = DateUtil.getFormattedDate("+1", "MM/dd/yyyy");

			RaylifeApplicationModal.typeNewApplicationInfoFields(
				label = "firstName",
				value = "Testing");

			RaylifeApplicationModal.typeNewApplicationInfoFields(
				label = "lastName",
				value = "Model");

			RaylifeApplicationModal.birthDate(nextDayDate = ${nextDayDate});

			RaylifeApplicationModal.typeNewApplicationInfoFields(
				label = "phone",
				value = 0123456789);

			RaylifeApplicationModal.typeNewApplicationInfoFields(
				label = "email",
				value = "test@liferay.com");

			RaylifeApplicationModal.typeNewApplicationInfoFields(
				label = "streetAddress",
				value = "Address");

			RaylifeApplicationModal.typeNewApplicationInfoFields(
				label = "apt",
				value = 0000);

			RaylifeApplicationModal.typeNewApplicationInfoFields(
				label = "city",
				value = "New York");

			RaylifeApplicationModal.selectOptionInModalByID(
				label = "mySelectId",
				value = "NY");

			RaylifeApplicationModal.typeNewApplicationInfoFields(
				label = "zipCode",
				value = 12345);

			DoubleClick(
				key_option = "Own",
				locator1 = "RaylifeApplicationModal#CHOOSE_OPTION");
		}

		task ("Then I should be able to assert that after filling in all required fields, the Next button is enabled") {
			Button.viewPresent(button = "Next");

			Button.click(button = "Next");
		}
	}

}