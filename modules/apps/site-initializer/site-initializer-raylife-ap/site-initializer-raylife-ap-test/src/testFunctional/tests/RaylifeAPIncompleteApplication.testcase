@component-name = "portal-solutions"
definition {

	property custom.properties = "feature.flag.LPS-165493=true";
	property osgi.modules.includes = "site-initializer-raylife-ap";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Raylife AP";

	var testSiteName = "Raylife AP";
	var testSiteURL = "raylife-ap";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Raylife AP Site") {
			Raylife.createRaylifeSite(siteName = "Raylife D2C");

			Raylife.createRaylifeSite(siteName = "Raylife AP");
		}

		task ("Login as Scott Producer because of roles and permissions") {
			User.logoutPG();

			RaylifeAP.userLoginInRaylife(email = "scott.producer");

			RaylifeAP.goToRaylifeUserProfileMenu(raylifeSite = "Raylife AP");
		}
	}

	tearDown {
		User.firstLoginPG();

		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		Raylife.tearDownCP();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "Story ID: LPS-159542 | Test Summary: Verify if the Address, Name, Email and Phone are displayed under the Summary section on the left side"
	@priority = 3
	test AssertInformationInApplicationDetailSummary {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Given that an user starts a new flow") {
			RaylifeApplicationModal.openNewApplicationFlow(
				insurance = "Personal",
				product = "Auto");
		}

		task ("When the user create an incompleted new application") {
			RaylifeApplicationModal.typeAllNewApplicationContactInfoFields(
				apt = 0000,
				city = "New York",
				emailAddress = "test@liferay.com",
				firstName = "Testing",
				lastName = "Model",
				phoneNumber = 0123456789,
				state = "NY",
				streetAddress = "Address",
				zipCode = 12345);

			RaylifeApplicationModal.typeAllNewApplicationVehicleInfoFields(
				annualMileage = 50000,
				make = "Volvo",
				model = "v90 cross country",
				ownership = "Own",
				primaryUse = "Business",
				year = 2019);

			RaylifeApplicationModal.typeAllNewApplicationDriverInfoFields(
				ageFirstLicenced = 18,
				firstName = "Testing",
				gender = "Female",
				highestEducation = "Masters",
				lastName = "Model",
				maritalStatus = "Single",
				millitaryAffiliation = "None",
				occupation = "Engineer",
				relationToContact = "Spouse");

			RaylifeApplicationModal.typeAllNewApplicationCoverageInfoFields(
				bodilyInjury = "$30,000 / $60,000",
				collisionAmount = "$2,000",
				comprehensiveAmount = "$750",
				medicalAmount = "$1,000",
				propertyDamage = "$25,000",
				uninsuredOrUnderinsuredMBI = "$30,000 / $60,000",
				uninsuredOrUnderinsuredMPD = "$150,000");

			Button.click(button = "Exit");
		}

		task ("And the user open the new incomplete application detail") {
			RaylifeAPNavigator.gotoSidebarItem(itemName = "Applications");

			RaylifeAP.search(searchTerm = "AP");

			RaylifeAP.clickInApplicationNumber(
				product = "Auto",
				status = "Incomplete");
		}

		task ("Then assert if summary information are displayed") {
			var table = '''
				| Address | Address          |
				| Name    | Testing          |
				| Email   | test@liferay.com |
				| Phone   | 0123456789       |
			''';

			var rawTable = TableUtil.newTable(${table});

			for (var row : table ${rawTable}) {
				var label = "${row[0]}";
				var value = "${row[1]}";

				AssertElementPresent(
					key_text = ${label},
					key_value = ${value},
					locator1 = "RaylifeApplicationModal#DETAIL_INFO");
			}
		}
	}

	@description = "Story ID: LPS-159542 | Test Summary: Verify if inside the application details view when user click on EDIT APPLICATION, the page redirects you to the contact info page, to finish the flow."
	@priority = 3
	test AssertRedirectToContactInfoPage {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Given that an user started a new application flow") {
			RaylifeApplicationModal.openNewApplicationFlow(
				insurance = "Personal",
				product = "Auto");
		}

		task ("When the user completes the Contact Info forms and close the form") {
			RaylifeApplicationModal.typeAllNewApplicationContactInfoFields(
				apt = 0000,
				city = "New York",
				emailAddress = "test@liferay.com",
				firstName = "Testing",
				lastName = "Model",
				phoneNumber = 0123456789,
				state = "NY",
				streetAddress = "Address",
				zipCode = 12345);

			Button.click(button = "Exit");
		}

		task ("And go to the datails page of the new incomplete application") {
			RaylifeAPNavigator.gotoSidebarItem(itemName = "Applications");

			RaylifeAP.search(searchTerm = "AP");

			RaylifeAP.clickInApplicationNumber(
				product = "Auto",
				status = "Incomplete");
		}

		task ("Then assert if by clicking the button 'edit application' the user is redirected to the contact info form page to finsih the flow") {
			Button.click(button = "Edit Application");

			AssertElementPresent(locator1 = "RaylifeAP#CONTACT_HEADER");
		}
	}

	@description = "Story ID: LPS-159542 | Test Summary: Verify if, when user click on the Application Number of an incomplete application, opens Incomplete Application View."
	@priority = 3
	test CanViewIncompleteApplicationDetailPage {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Given that an user starts a new flow") {
			RaylifeApplicationModal.openNewApplicationFlow(
				insurance = "Personal",
				product = "Auto");
		}

		task ("When the user create an incompleted new application") {
			RaylifeApplicationModal.typeAllNewApplicationContactInfoFields(
				apt = 0000,
				city = "New York",
				emailAddress = "test@liferay.com",
				firstName = "Testing",
				lastName = "Model",
				phoneNumber = 0123456789,
				state = "NY",
				streetAddress = "Address",
				zipCode = 12345);

			RaylifeApplicationModal.typeAllNewApplicationVehicleInfoFields(
				annualMileage = 50000,
				make = "Volvo",
				model = "v90 cross country",
				ownership = "Own",
				primaryUse = "Business",
				year = 2019);

			RaylifeApplicationModal.typeAllNewApplicationDriverInfoFields(
				ageFirstLicenced = 18,
				firstName = "Testing",
				gender = "Female",
				highestEducation = "Masters",
				lastName = "Model",
				maritalStatus = "Single",
				millitaryAffiliation = "None",
				occupation = "Engineer",
				relationToContact = "Spouse");

			RaylifeApplicationModal.typeAllNewApplicationCoverageInfoFields(
				bodilyInjury = "$30,000 / $60,000",
				collisionAmount = "$2,000",
				comprehensiveAmount = "$750",
				medicalAmount = "$1,000",
				propertyDamage = "$25,000",
				uninsuredOrUnderinsuredMBI = "$30,000 / $60,000",
				uninsuredOrUnderinsuredMPD = "$150,000");

			Button.click(button = "Exit");
		}

		task ("Then assert if when the user click on the Application Number of the incomplete application, opens Incomplete Application View.") {
			RaylifeAPNavigator.gotoSidebarItem(itemName = "Applications");

			RaylifeAP.search(searchTerm = "AP");

			RaylifeAP.clickInApplicationNumber(
				product = "Auto",
				status = "Incomplete");

			AssertElementPresent(
				key_text = "Edit Application",
				locator1 = "Button#ANY");
		}
	}

}