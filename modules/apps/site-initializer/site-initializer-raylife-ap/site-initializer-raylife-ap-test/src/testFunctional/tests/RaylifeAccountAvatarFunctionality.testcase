@component-name = "portal-solutions"
definition {

	property custom.properties = "feature.flag.LPS-165493=true";
	property osgi.modules.includes = "site-initializer-raylife-ap";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Raylife AP";

	var testSiteName = "Raylife AP";
	var testSiteURL = "raylife-ap";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Raylife AP Site") {
			Site.openSitesAdmin();

			Raylife.createRaylifeSite(siteName = "Raylife D2C");

			Raylife.createRaylifeSite(siteName = "Raylife AP");
		}
	}

	tearDown {
		User.firstLoginPG();

		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		RaylifeAP.tearDownCP();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = " Story ID: LPS-174056 | Test Summary: Verify if the user can access the Dashboard from Agent Portal by the menu list"
	@priority = 4
	test AssertThatUserCanAccessTheDashboard {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Given the User go to RaylifeAp main page") {
			RaylifeAP.goToRaylifeAPSiteWithRefresh();
		}

		task ("When the user clicks on the avatar and choose 'Dashboard' Option") {
			RaylifeAP.userAvatarFunctionality(option = "Dashboard");
		}

		task ("Then Assert that the user is redirect to the Dashboard page") {
			AssertElementPresent(
				key_title = "Dashboard",
				locator1 = "Header#H2_TITLE");
		}
	}

	@description = " Story ID: LPS-174056 | Test Summary: Verify if the user can access the Account Settings page from Agent Portal by the avatar menu list."
	@priority = 4
	test AssertUserCanAccessAccountSettingsPage {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Given the User go to RaylifeAp main page") {
			RaylifeAP.goToRaylifeAPSiteWithRefresh();
		}

		task ("When the user clicks on the avatar and choose 'Account Settings' Option") {
			RaylifeAP.userAvatarFunctionality(option = "Account Settings");
		}

		task ("Then Assert that the user is redirect to the Account Settings page") {
			AssertElementPresent(
				key_title = "Account Settings",
				locator1 = "Header#H2_TITLE");
		}
	}

	@description = " Story ID: LPS-174056 | Test Summary: Verify if the user can access the Notification page from Agent Portal by the avatar menu list."
	@priority = 4
	test AssertUserCanAccessNotificationPage {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Given the User go to RaylifeAp main page") {
			RaylifeAP.goToRaylifeAPSiteWithRefresh();
		}

		task ("When the user clicks on the avatar and choose 'Notifications' Option") {
			RaylifeAP.userAvatarFunctionality(option = "Notifications");
		}

		task ("Then Assert that the user is redirect to the Notifications page") {
			AssertElementPresent(
				key_title = "Notifications",
				locator1 = "Header#H2_TITLE");
		}
	}

	@description = " Story ID: LPS-174056 - Verify if the user can  Sing Out from Agent Portal by the option in avatar menu list."
	@priority = 4
	test AssertUserCanSingOut {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Given the User go to RaylifeAp main page") {
			RaylifeAP.goToRaylifeAPSiteWithRefresh();
		}

		task ("When the user clicks on the avatar and choose 'Sign Out' Option") {
			RaylifeAP.userAvatarFunctionality(option = "Sign Out");
		}

		task ("Then Assert that the user is redirect to Liferay DXP login page") {
			AssertElementPresent(
				key_title = "Liferay DXP",
				locator1 = "Header#H1_TITLE");

			User.firstLoginPG();
		}
	}

}