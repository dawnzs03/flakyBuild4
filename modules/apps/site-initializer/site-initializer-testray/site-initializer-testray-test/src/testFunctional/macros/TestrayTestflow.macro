definition {

	macro addTask {
		LexiconEntry.gotoAdd();

		TestrayTestflow.editBreadcrumb(
			build = ${selectBuild},
			project = ${selectProject},
			routine = ${selectRoutine});

		Button.click(button = "Analyze");

		if (isSet(taskName)) {
			PortletEntry.inputName(name = ${taskName});
		}

		if (isSet(caseTypeList)) {
			for (var caseType : list ${caseTypeList}) {
				Click.clickAtNotVisible(
					key_checkboxOption = ${caseType},
					locator1 = "Checkbox#ENABLE_CHECKBOX_VIA_SPAN");
			}
		}

		if (${userGroups} == "true") {
			Testray.selectCheckboxOptions(
				buttonText = "Select User Groups",
				checkboxNameList = ${userList},
				linkText = "Assign User Groups");
		}

		if (${userGroups} == "false") {
			Testray.selectCheckboxOptions(
				buttonText = "Select Users",
				checkboxNameList = ${userList},
				linkText = "Assign Users");
		}

		if (isSet(fieldRequired)) {
			Button.click(button = "Save");
		}
		else {
			Testray.checkSuccessAlertAppearsAndDisappears();

			Button.click(button = "Save");

			WaitForElementPresent(
				key_text = "Refresh",
				locator1 = "Button#ANY");

			Click(
				key_text = "Refresh",
				locator1 = "Button#ANY");

			WaitForElementNotPresent(
				key_text = "Refresh",
				locator1 = "Button#ANY");
		}
	}

	macro assertStatus {
		AssertElementPresent(
			key_label = ${label},
			key_status = ${status},
			locator1 = "TestrayTestflow#TESTFLOW_STATUS");
	}

	macro assertTaskDetails {
		AssertElementPresent(
			key_build = ${build},
			key_project = ${project},
			key_routine = ${routine},
			key_status = ${status},
			key_taskName = ${taskName},
			locator1 = "TestrayTestflow#TASK_DETAILS");
	}

	macro assignUsers {
		if (isSet(assignButton)) {
			Button.click(button = ${assignButton});

			SelectFrame(locator1 = "Testray#MODAL_BODY");

			Testray.clickTableEntry(tableEntry = ${userName});

			Alert.viewSuccessMessage();
		}
		else {
			TestrayManage.selectTableRowOption(
				rowOption = ${rowOption},
				tableEntry = ${tableEntry});

			SelectFrame(locator1 = "Testray#MODAL_BODY");

			Testray.clickTableEntry(tableEntry = ${userName});

			Alert.viewSuccessMessage();
		}
	}

	macro editBreadcrumb {
		Click(locator1 = "TestrayTestflow#BREADCRUMB_INPUT_NAME");

		for (var text : list "${project},${routine},${build}") {
			Type(
				locator1 = "TestrayTestflow#BREADCRUMB_INPUT_NAME",
				value1 = ${text});

			Click(locator1 = "TestrayTestflow#BREADCRUMB_MENU_ITEM");
		}
	}

	macro editStatus {
		WaitForElementPresent(
			key_text = ${button},
			locator1 = "Button#ANY");

		Button.click(button = ${button});

		WaitForPageLoad();

		Select(
			locator1 = "Select#SELECT_ID",
			selectFieldId = "dueStatus",
			value1 = ${selectStatus});

		if (isSet(issues)) {
			PortletEntry.inputText(
				fieldLabel = "Issues",
				text = ${issues});
		}

		if (isSet(comment)) {
			Type(
				key_fieldId = "comment",
				locator1 = "TextArea#ANY_ID",
				value1 = ${comment});
		}

		Button.click(button = "Save");
	}

	macro editStatusByRightClick {
		TestrayManage.selectTableRowOption(
			rowOption = "Complete",
			tableEntry = ${tableEntry});

		WaitForPageLoad();

		Select(
			locator1 = "Select#SELECT_ID",
			selectFieldId = "dueStatus",
			value1 = ${selectStatus});

		if (isSet(issues)) {
			PortletEntry.inputText(
				fieldLabel = "Issues",
				text = ${issues});
		}

		if (isSet(comment)) {
			Type(
				key_fieldId = "comment",
				locator1 = "TextArea#ANY_ID",
				value1 = ${comment});
		}

		Button.click(button = "Save");
	}

	macro editTask {
		Button.click(button = "Edit Task");

		if (isSet(taskName)) {
			PortletEntry.inputName(name = ${taskName});
		}

		if (isSet(userNameList)) {
			Testray.selectCheckboxOptions(
				buttonText = "Select Users",
				checkboxNameList = ${userNameList},
				linkText = "Assign Users");
		}

		Button.click(button = "Save");
	}

	macro goToTaskByBuild {
		TestrayDropdown.goToResultSidebar();

		Testray.changePagination(quantity = 150);

		Testray.clickTableEntry(tableEntry = ${projectName});

		Testray.clickTableEntry(tableEntry = ${routineName});

		Testray.clickTableEntry(tableEntry = ${buildName});

		Button.click(button = "View Task");
	}

	macro goToTestflow {
		Click(
			key_button = "TestFlow",
			locator1 = "TestrayDropdown#SIDEBAR_CONTENT");

		WaitForPageLoad();
	}

	macro reanalyzeTask {
		Button.click(button = "Abandon");

		Button.click(button = "Reanalyze");
	}

	macro userAvatarNotPresent {
		AssertElementNotPresent(locator1 = "TestrayTestflow#USER_AVATAR_IMAGE");
	}

	macro userAvatarPresent {
		AssertElementPresent(locator1 = "TestrayTestflow#USER_AVATAR_IMAGE");
	}

}