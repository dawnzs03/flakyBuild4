definition {

	macro addTemplate {
		WaitForElementPresent(
			key_pageTabTitle = "Build History",
			locator1 = "Testray#PAGE_TAB_TITLE");

		Click(locator1 = "Button#PLUS");

		Click.javaScriptClick(
			key_menuItem = ${dropdownItem},
			locator1 = "MenuItem#ANY_MENU_ITEM");

		if (isSet(fieldName)) {
			Type(
				inputFieldId = "name",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${fieldName});
		}

		if (isSet(routineName)) {
			Select(
				locator1 = "Select#SELECT_ID",
				selectFieldId = "routineId",
				value1 = ${routineName});
		}

		if (isSet(gitHash)) {
			Type(
				inputFieldId = "gitHash",
				locator1 = "TextInput#INPUT_ID",
				value1 = ${gitHash});
		}

		if (isSet(description)) {
			Type(
				locator1 = "TextArea#DESCRIPTION",
				value1 = ${description});
		}

		if (isSet(caseList)) {
			Testray.selectCheckboxOptions(
				buttonText = "Select Cases",
				checkboxNameList = ${caseList},
				linkText = "Add Cases");
		}

		if (isSet(duplicate)) {
			Button.clickSave();
		}

		if (!(isSet(duplicate))) {
			Button.clickSave();

			Alert.viewSuccessMessage();
		}
	}

	macro goToBuildTemplate {
		Click(locator1 = "Button#PLUS");

		Click.javaScriptClick(
			key_templateName = ${templateName},
			locator1 = "TestrayDropdown#TEMPLATE_DROPDOWN");
	}

	macro searchTemplateName {
		Click(locator1 = "Button#PLUS");

		TestrayFilter.searchFilter(filterName = ${templateName});
	}

	macro viewTemplateName {
		for (var templateName : list ${templateList}) {
			AssertElementPresent(
				locator1 = "TestrayDropdown#SEARCH_TEMPLATE",
				templateName = ${templateName});
		}
	}

}