@component-name = "portal-solutions"
definition {

	property custom.properties = "feature.flag.LPS-163118=true";
	property osgi.modules.includes = "site-initializer-testray";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Testray";

	var testSiteName = "Testray 2";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Testray Site") {
			HeadlessSite.addSite(
				siteName = ${testSiteName},
				templateName = "Testray",
				templateType = "Site Initializer");
		}

		task ("Logs out and goes to the Testray login page") {
			User.logoutPG();

			Testray.openTestrayViaURL();
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		task ("Delete Testray Site and Client Extensions") {
			User.firstLoginPG();

			Testray.testrayApisTearDown();
		}

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Story ID: LPS-146930 | Test Summary: Verify when filling the field, the field label is green."
	@priority = 2
	test CanFieldLabelBeGreen {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		task ("When the user fills in all required fields correctly") {
			Type(
				locator1 = "TextInput#TEXT",
				value1 = "test@liferay.com");

			Type(
				locator1 = "TextInput#PASSWORD_TYPE",
				value1 = "test");
		}

		task ("Then can see the green label in the 'email address' field.") {
			TestraySignIn.assertTitleSucess(key_title = "Email Address");
		}
	}

	@description = "Story ID: LPS-146930 | Test Summary: Verify when deleting the field, the field label is red."
	@priority = 2
	test CanFieldLabelBeRed {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		task ("When the user does not fill in all required fields correctly") {
			Type(
				locator1 = "TextInput#TEXT",
				value1 = "");

			Type(
				locator1 = "TextInput#PASSWORD_TYPE",
				value1 = "test");
		}

		task ("Then can see the red label in the 'email address' field.") {
			TestraySignIn.assertTitleFailed(key_title = "Email Address");
		}
	}

	@description = "Story ID: LPS-146930 | Test Summary: Verify the user can enter with an valid email."
	@priority = 5
	test CanSignIn {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		task ("When the user logs in to Testray") {
			TestraySignIn.loginUserTestrayPG(
				emailAddress = "test@liferay.com",
				password = "test");
		}

		task ("Then the user sees the initial session on the Testray Site") {
			Testray.assertTabPageTitle(pageTabTitle = "Projects");
		}
	}

	@description = "Story ID: LPS-146930 | Test Summary: Verify the user can enter with an valid email after getting the password wrong."
	@priority = 4
	test CanSignInAfterPasswordWrong {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		task ("Given that the user does not fill in all required fields correctly") {
			TestraySignIn.loginUserTestrayPG(emailAddress = "test@liferay.com");
		}

		task ("And the user sees the required field message") {
			AssertElementPresent(
				key_alertMessage = "The Password field is required.",
				locator1 = "Message#ERROR_ENTER_A_VALID_VALUE");
		}

		task ("When the user logs in to Testray correctly") {
			TestraySignIn.loginUserTestrayPG(
				emailAddress = "test@liferay.com",
				password = "test");
		}

		task ("Then the user sees the initial session on the Testray Site") {
			Testray.assertTabPageTitle(pageTabTitle = "Projects");
		}
	}

}