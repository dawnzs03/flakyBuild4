@component-name = "portal-solutions"
definition {

	property custom.properties = "feature.flag.LPS-163118=true";
	property osgi.modules.includes = "site-initializer-testray";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Testray";

	var testSiteName = "Testray 2";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		task ("Delete Testray Site and Client Extensions") {
			Testray.testrayApisTearDown();
		}

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "This is a test for LPS-152637. Verify if Testray can be created"
	@priority = 5
	test AddTestraySite {
		task ("Create a new Testray Site") {
			HeadlessSite.addSite(
				siteName = ${testSiteName},
				templateName = "Testray",
				templateType = "Site Initializer");
		}

		task ("Go to Testray Site") {
			ApplicationsMenu.gotoSite(site = ${testSiteName});
		}

		task ("Assert the Testray Page is present") {
			AssertElementPresent(
				key_title = "Testray",
				locator1 = "Header#H1_TITLE");
		}

		task ("Assert the project is present") {
			AssertElementPresent(
				key_tableEntry = "Application Server",
				locator1 = "LexiconTable#TABLE_ENTRY");
		}
	}

	@description = "This is a test for LPS-152873. Verify if when Testray is created, Remote Apps will be created for it as well"
	@priority = 5
	test RemoteAppsAreCreatedForTestray {
		property solutions.acceptance = "true";

		task ("Create a new Testray Site") {
			HeadlessSite.addSite(
				siteName = ${testSiteName},
				templateName = "Testray",
				templateType = "Site Initializer");
		}

		task ("Go to Testray Site") {
			ApplicationsMenu.gotoSite(site = ${testSiteName});
		}

		task ("Go to Remote Apps Portlet") {
			ClientExtensionGeneral.goToRemoteAppsPortlet();
		}

		task ("Assert if Remote Apps is Present") {
			AssertElementPresent(
				key_value = "Testray",
				locator1 = "Testray#ELEMENT_REMOTE");
		}
	}

	@description = "This is a test for LPS-152970. Verify if when Testray is created, Style Books will be created for it as well"
	@priority = 5
	test StyleBooksAreCreatedForTestray {
		property solutions.acceptance = "true";

		task ("Create a new Testray Site") {
			HeadlessSite.addSite(
				siteName = ${testSiteName},
				templateName = "Testray",
				templateType = "Site Initializer");
		}

		task ("Go to Testray Site") {
			ApplicationsMenu.gotoSite(site = ${testSiteName});
		}

		task ("Go to Style Books") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Style Books");
		}

		task ("Assert if style books were created") {
			StyleBooksAdmin.viewStyleBooksPresent(styleBookName = "Testray");
		}
	}

}