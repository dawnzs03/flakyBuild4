@component-name = "portal-solutions"
definition {

	property custom.properties = "feature.flag.LPS-163118=true";
	property osgi.modules.includes = "site-initializer-testray";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Testray";

	var categoryName = "Category 1";
	var optionsName = "Option 1";
	var testSiteName = "Testray 2";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Testray Site") {
			HeadlessSite.addSite(
				siteName = ${testSiteName},
				templateName = "Testray",
				templateType = "Site Initializer");
		}

		task ("Create a category via API and option via UI") {
			JSONTestray.addFactorCategory(categoryName = ${categoryName});

			ApplicationsMenu.gotoSite(site = ${testSiteName});

			TestrayDropdown.selectOptionSidebar(
				buttonOption = "Manage",
				menuItem = "Options");

			TestrayManage.createNewOption(
				category = ${categoryName},
				option = ${optionsName});
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		task ("Logout And Login with test user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "test test");
		}

		task ("Delete factor category, Testray Site and Client Extensions") {
			JSONTestrayAPI.deleteObjectViaAPI(
				object = "factorcategories",
				objectName = "Category 1");

			Testray.testrayApisTearDown();
		}

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Story ID: LPS-178263 | Test Summary: Verify that the User with the 'Testray Analyst' role should not be able to create/edit/delete the Option"
	@priority = 2
	test AnalystRoleCanNotCreateEditAndDelete {
		task ("Given that the user login with the Testray Analyst role") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "analyst@testray.com",
				userLoginFullName = "Analyst User");

			Navigator.openSiteURL(siteName = "Testray 2");
		}

		task ("When go to the option page") {
			TestrayDropdown.selectOptionSidebar(
				buttonOption = "Manage",
				menuItem = "Options");

			Testray.changePagination(
				modal = "true",
				quantity = 150);

			Testray.pageNumberNavigationModal(pageNumber = 2);
		}

		task ("Then can see the option in the table") {
			Testray.viewTableEntryList(listEntry = ${optionsName});
		}

		task ("And can not see add button") {
			AssertElementNotPresent(locator1 = "Button#PLUS");
		}

		task ("When right click in option") {
			RightClick.rightClick(
				key_tableEntry = ${optionsName},
				locator1 = "Testray#TABLE_ENTRY");
		}

		task ("Then can not see the 'Edit, Delete' options in right click") {
			MenuItem.viewNotPresent(menuItem = "Edit");

			MenuItem.viewNotPresent(menuItem = "Delete");
		}
	}

	@description = "Story ID: LPS-178263 | Test Summary: Verify that the User with the 'Testray Lead' role should be able to create/edit/delete the Option"
	@priority = 4
	test LeadRoleCanCreateEditAndDelete {
		task ("Given that the user login with the Testray Lead role") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "lead@testray.com",
				userLoginFullName = "Lead User");

			Navigator.openSiteURL(siteName = "Testray 2");
		}

		task ("When the user created the option") {
			TestrayDropdown.selectOptionSidebar(
				buttonOption = "Manage",
				menuItem = "Options");

			TestrayManage.createNewOption(
				category = ${categoryName},
				option = "Option 2");
		}

		task ("Then can see the option in the table") {
			Testray.changePagination(
				modal = "true",
				quantity = 150);

			Testray.pageNumberNavigationModal(pageNumber = 2);

			Testray.viewTableEntryList(listEntry = "Option 2");
		}

		task ("When the user edited the option") {
			Testray.checkSuccessAlertAppearsAndDisappears();

			TestrayDropdown.selectOptionSidebar(
				buttonOption = "Manage",
				menuItem = "Options");

			Testray.changePagination(
				modal = "true",
				quantity = 150);

			Testray.pageNumberNavigationModal(pageNumber = 2);

			TestrayManage.editOption(
				category = ${categoryName},
				newName = "Option Edited",
				tableEntry = "Option 2");
		}

		task ("Then can see the option edited in the table") {
			Testray.viewTableEntryList(listEntry = "Option Edited");
		}

		task ("When the user delete the option") {
			Testray.deleteItem(itemName = "Option Edited");

			Testray.checkSuccessAlertAppearsAndDisappears();
		}

		task ("Then can not see the option in the table") {
			Testray.viewTableEntryListNotPresent(listEntry = "Option Edited");
		}
	}

	@description = "Story ID: LPS-178263 | Test Summary: Verify that the User with the 'Testray User' role should not be able to create/edit/delete the Option"
	@priority = 2
	test UserRoleCanNotCreateEditAndDelete {
		task ("Given that the user login with the Testray User role") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "user@testray.com",
				userLoginFullName = "User User");

			Navigator.openSiteURL(siteName = "Testray 2");
		}

		task ("When go to the option page") {
			TestrayDropdown.selectOptionSidebar(
				buttonOption = "Manage",
				menuItem = "Options");

			Testray.changePagination(
				modal = "true",
				quantity = 150);

			Testray.pageNumberNavigationModal(pageNumber = 2);
		}

		task ("Then can see the option in the table") {
			Testray.viewTableEntryList(listEntry = ${optionsName});
		}

		task ("And can not see add button") {
			AssertElementNotPresent(locator1 = "Button#PLUS");
		}

		task ("When right click in option") {
			RightClick.rightClick(
				key_tableEntry = ${optionsName},
				locator1 = "Testray#TABLE_ENTRY");
		}

		task ("Then can not see the 'Edit, Delete' options in right click") {
			MenuItem.viewNotPresent(menuItem = "Edit");

			MenuItem.viewNotPresent(menuItem = "Delete");
		}
	}

}