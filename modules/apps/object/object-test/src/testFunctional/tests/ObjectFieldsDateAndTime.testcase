@component-name = "portal-object"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Object";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		ObjectAdmin.deleteAllCustomObjectsViaAPI();

		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-143068 - Verify a custom object entry with a date and time field can be created"
	@priority = 5
	test CanAddEntry {
		property portal.acceptance = "true";

		task ("Given a custom object with a date and time field and the time storage set to user input") {
			ObjectAdmin.addObjectViaAPI(
				labelName = "Custom Object 186246",
				objectName = "CustomObject186246",
				pluralLabelName = "Custom Objects 186246");

			ObjectAdmin.openObjectAdmin();

			ObjectPortlet.selectCustomObject(label = "Custom Object 186246");

			ObjectAdmin.goToFieldsTab();

			ObjectAdmin.addObjectFieldViaUI(
				fieldLabel = "Custom Date Time",
				fieldTimeStorage = "Use Input as Entered",
				fieldType = "Date and Time",
				sorting = "Convert to UTC");

			ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject186246");
		}

		task ("When the user adds an object entry") {
			ObjectAdmin.goToCustomObject(objectName = "CustomObject186246");

			ObjectPortlet.addSingleFieldEntryViaUI(entry = "06/01/2023 09:00 AM");

			Navigator.gotoBack();
		}

		task ("Then the date and time seen on the table") {
			AssertElementPresent(
				key_fieldLabel = "Jun 1, 2023, 9:00 AM",
				locator1 = "ObjectAdmin#VIEW_OBJECT_FIELD_LABEL");
		}
	}

	@description = "LPS-143068  - Verify the date and time are adjusted to the user's time zone"
	@priority = 5
	test CanSeeDifferentTimeZone {
		property portal.acceptance = "true";

		task ("Given a custom object with a date and time field as UTC and an object entry") {
			ObjectAdmin.addObjectViaAPI(
				labelName = "Custom Object 186248",
				objectName = "CustomObject186248",
				pluralLabelName = "Custom Objects 186248");

			ObjectAdmin.addObjectFieldViaAPI(
				fieldBusinessType = "DateTime",
				fieldLabelName = "Custom Date Time",
				fieldName = "customDateTime",
				fieldType = "DateTime",
				isRequired = "false",
				objectName = "CustomObject186248",
				timeStorageOption = "convertToUTC");

			ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject186248");

			ObjectAdmin.addObjectSingleFieldEntryViaAPI(
				fieldName = "customDateTime",
				objectName = "CustomObject186248",
				value = "2023-06-01T12:00:00.000Z");
		}

		task ("And given a user with a different time zone") {
			JSONUser.addUser(
				userEmailAddress = "userea@liferay.com",
				userFirstName = "userfn",
				userLastName = "userln",
				userScreenName = "usersn");

			JSONRole.assignRoleToUser(
				roleTitle = "Administrator",
				userEmailAddress = "userea@liferay.com");

			User.openUsersAdmin();

			UserNavigator.gotoUser(userScreenName = "usersn");

			UserNavigator.gotoDisplaySettings();

			Select(
				locator1 = "Select#TIME_ZONE",
				value1 = "(UTC -03:00) Brasilia Time");

			PortletEntry.save();

			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("When the user views the entry") {
			ObjectAdmin.goToCustomObject(objectName = "CustomObject186248");
		}

		task ("Then the time is adjusted to the user's time zone") {
			AssertElementPresent(
				key_fieldLabel = "Jun 1, 2023, 9:00 AM",
				locator1 = "ObjectAdmin#VIEW_OBJECT_FIELD_LABEL");
		}
	}

	@description = "LPS-143068 - Verify a custom object entry with a date and time field can be updated"
	@priority = 5
	test CanUpdateEntry {
		property portal.acceptance = "true";

		task ("Given a custom object with a date and time field and an object entry") {
			ObjectAdmin.addObjectViaAPI(
				labelName = "Custom Object 186247",
				objectName = "CustomObject186247",
				pluralLabelName = "Custom Objects 186247");

			ObjectAdmin.addObjectFieldViaAPI(
				fieldBusinessType = "DateTime",
				fieldLabelName = "Custom Date Time",
				fieldName = "customDateTime",
				fieldType = "DateTime",
				isRequired = "false",
				objectName = "CustomObject186247",
				timeStorageOption = "convertToUTC");

			ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject186247");

			ObjectAdmin.addObjectSingleFieldEntryViaAPI(
				fieldName = "customDateTime",
				objectName = "CustomObject186247",
				value = "2023-06-01T12:00:00.000Z");
		}

		task ("When the user updates the entry") {
			ObjectAdmin.goToCustomObject(objectName = "CustomObject186247");

			ObjectPortlet.viewEntryDetails(entry = "Jun 1, 2023, 12:00 PM");

			Type(
				locator1 = "ObjectPortlet#VIEW_EMPTY_LABEL_IN_DATE_TIME_ENTRY",
				value1 = "07/02/2024 10:00 PM");

			PortletEntry.save();

			Navigator.gotoBack();
		}

		task ("Then the date and time are updated on the table") {
			AssertElementPresent(
				key_fieldLabel = "Jul 2, 2024, 10:00 PM",
				locator1 = "ObjectAdmin#VIEW_OBJECT_FIELD_LABEL");
		}
	}

}