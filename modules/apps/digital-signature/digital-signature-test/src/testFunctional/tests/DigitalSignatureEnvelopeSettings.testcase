@component-name = "portal-solutions"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Digital Signature";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginUI();

		task ("Configure digital signature with credentials") {
			ApplicationsMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Instance Settings");

			SystemSettings.gotoConfiguration(
				configurationCategory = "Digital Signature",
				configurationName = "Digital Signature Configuration",
				configurationScope = "Virtual Instance Scope");

			FormFields.enableCheckbox(fieldName = "enabled");

			DigitalSignature.enableDigitalSignature(siteStrategy = "Always Inherit");
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "LPS-133105. Verify if its possible add more than 1 valid documents in a new Envelope"
	@priority = 5
	test CanAddMoreThan1Document {
		task ("When a digital envelope is created with more than 1 valid document") {
			DigitalSignature.createEnvelopeWithTwoDocuments(
				addEmail = "test@liferay.com",
				addFullName = "Recipient Full Name",
				addMessage = "Email Message",
				addName = "Poshi Test CanAddMoreThan1Document",
				addSubject = "Email Subject");

			Button.click(button = "Send");
		}

		task ("Then a message appears that the envelope was successfully created") {
			Alert.viewSuccessMessageText(successMessage = "Your envelope was created successfully.");

			DigitalSignature.deleteEnvelope(envelopeName = "Poshi Test CanAddMoreThan1Document");

			DigitalSignature.deleteCreatedDM();

			RecycleBin.openRecycleBinAdmin(siteURLKey = "guest");

			RecycleBin.emptyCP();
		}
	}

	@description = "LPS-131425. Verify if its possible only maximum of 10 recipients can be added"
	@priority = 4
	test CanAddOnly10Recipients {
		task ("Given the user goes to digital signature") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Digital Signature");

			LexiconEntry.gotoAdd();
		}

		task ("When user test Add 10 Recipients") {
			DigitalSignature.addRecipient(addList = "1,2,3,4,5,6,7,8,9");
		}

		task ("Then user test is unable to add more Recipient") {
			DigitalSignature.canNotViewAddRecipient();
		}
	}

	@description = "LPS-131425. Verify if its possible delete any additional recipients"
	@priority = 4
	test CanDeleteRecipients {
		task ("Given that user Test goes to digital signature") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Digital Signature");

			LexiconEntry.gotoAdd();
		}

		task ("When the user Add Recipient") {
			DigitalSignature.addRecipient();
		}

		task ("Then the user remove Recipient") {
			DigitalSignature.removeRecipient();
		}
	}

	@description = "LPS-133105. Verify if adding more than 1 valid and 1 invalid documents will prevent collecting the digital signature"
	@priority = 5
	test CannotCollectDSWithUnsupportedFileExtensions {
		task ("Given that Digital Signature is enabled with credentials and multiple files are added--one of which is unsupported by Digital Envelopes") {
			DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

			DMDocument.addMultipleCP(dmDocumentFileList = "Document_1.doc,Document_2.png,Document_3.odt");
		}

		task ("When all the files are selected for collecting Digital Signature for a Digital Envelope") {
			PortletEntry.selectAll();

			DigitalSignature.selectDMFolder(checkboxDM = "_com_liferay_document_library_web_portlet_DLAdminPortlet_rowIdsFolder");

			DigitalSignature.goToDigitalSignature();
		}

		task ("Then the admin is notified that a document has an invalid file extension and the invalid file is not included in the new envelope") {
			DigitalSignature.viewNotSupportedExtensionsError(
				documentTitle = "Document_3",
				modalLabel = "File Extensions Not Supported");

			DigitalSignature.canNotSeeUnsupportedFiles(fileName = "Document_3");
		}
	}

	@description = "LPS-131425. Verify if unsuportted files Error message appear"
	@priority = 5
	test CannotCreateEnvelopeWithUnsupportedFiles {
		property solutions.acceptance = "true";

		task ("When a Digital Envelope is created with an unsupported file type attached") {
			Navigator.openURL();

			DigitalSignature.createEnvelope(
				addEmail = "test@liferay.com",
				addFullName = "Recipient Full Name",
				addMessage = "Email Message",
				addName = "Poshi Test CannotCreateEnvelopeWithUnsupportedFiles",
				addSubject = "Email Subject",
				dmDocumentFile = "Document_2.mp4");
		}

		task ("Then the Envelope cannot be sent and an error should display indicating the file type is unsupported") {
			DigitalSignature.verifyUnsupportedFileError(disabledButton = "Send");

			DigitalSignature.deleteCreatedDM();

			RecycleBin.openRecycleBinAdmin(siteURLKey = "guest");

			RecycleBin.emptyCP();
		}
	}

	@description = "LPS-131425. verify if all required fields are been displayed"
	@priority = 4
	test CanSeeAllRequiredFields {
		task ("When a User Test Goes to Digital Signature") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Digital Signature");

			LexiconEntry.gotoAdd();
		}

		task ("Then All required fields are being displayed") {
			DigitalSignature.canViewRequiredFields(fieldList = "Email Subject,Envelope Name,Recipient Full Name,Recipient Email");
		}
	}

	@description = "LPS-131425. Verify if Success Message appear"
	@priority = 5
	test CanViewSuccessMessage {
		property solutions.acceptance = "true";

		task ("When a digital envelope is created") {
			DigitalSignature.createEnvelope(
				addEmail = "test@liferay.com",
				addFullName = "Recipient Full Name",
				addMessage = "Email Message",
				addName = "Poshi Test CanViewSuccessMessage",
				addSubject = "Email Subject",
				dmDocumentFile = "Alice's Adventures in Wonderland.pdf");

			Button.click(button = "Send");
		}

		task ("Then a message appears that the envelope was successfully created") {
			Alert.viewSuccessMessageText(successMessage = "Your envelope was created successfully.");

			Refresh();

			DigitalSignature.deleteEnvelope(envelopeName = "Poshi Test CanViewSuccessMessage");

			DigitalSignature.deleteCreatedDM();

			RecycleBin.openRecycleBinAdmin(siteURLKey = "guest");

			RecycleBin.emptyCP();
		}
	}

}