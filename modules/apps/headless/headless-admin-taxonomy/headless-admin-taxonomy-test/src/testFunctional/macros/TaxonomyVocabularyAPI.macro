definition {

	macro _curlTaxonomyKeywords {
		var portalURL = JSONCompany.getPortalURL();

		if (isSet(depotName)) {
			var assetLibraryId = JSONGroupAPI._getDepotIdByName(
				depotName = ${depotName},
				noSelenium = ${noSelenium});

			var api = "asset-libraries/${assetLibraryId}/keywords";

			if (isSet(exportBatch)) {
				var api = StringUtil.add(${api}, "/export-batch", "");
			}
		}
		else if (isSet(keywordId)) {
			var api = "keywords/${keywordId}";
		}
		else {
			var siteId = JSONGroupAPI._getGroupIdByName(
				groupName = ${groupName},
				site = "true");

			var api = "sites/${siteId}/keywords";
		}

		if (isSet(parameter)) {
			var api = StringUtil.add(${api}, "?${parameter}=${parameterValue}", "");
		}

		var curl = '''
			${portalURL}/o/headless-admin-taxonomy/v1.0/${api} \
				-u test@liferay.com:test \
				-H Content-Type: application/json \
		''';

		return ${curl};
	}

	macro _curlTaxonomyVocabulary {
		var portalURL = JSONCompany.getPortalURL();

		if (isSet(depotName)) {
			var assetLibraryId = JSONGroupAPI._getDepotIdByName(
				depotName = ${depotName},
				noSelenium = "true");

			var api = "asset-libraries/${assetLibraryId}/taxonomy-vocabularies";
		}
		else {
			var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
				groupName = ${groupName},
				site = "true");

			var api = "sites/${siteId}/taxonomy-vocabularies";
		}

		if (isSet(externalReferenceCode)) {
			var apiWithErc = "by-external-reference-code/${externalReferenceCode}";

			var api = StringUtil.add(${api}, ${apiWithErc}, "/");
		}

		if (isSet(filterValue)) {
			var api = StringUtil.add(${api}, "?filter=${filterValue}", "");
		}

		if (isSet(parameter)) {
			var api = StringUtil.add(${api}, "?${parameter}=${parameterValue}", "");
		}

		var curl = '''
			${portalURL}/o/headless-admin-taxonomy/v1.0/${api} \
				-u test@liferay.com:test \
				-H Content-Type: application/json \
		''';

		return ${curl};
	}

	macro createAssetLibraryWithKeyWords {
		Variables.assertDefined(parameterList = "${depotName},${name}");

		var curl = TaxonomyVocabularyAPI._curlTaxonomyKeywords(
			depotName = ${depotName},
			exportBatch = ${exportBatch},
			noSelenium = ${noSelenium});
		var body = '''-d {"name": "${name}"}''';

		var curl = StringUtil.add(${curl}, ${body}, " ");

		var response = JSONCurlUtil.post(${curl});

		return ${response};
	}

	macro createTaxonomyVocabulary {
		Variables.assertDefined(parameterList = ${name});

		if (!(isSet(externalReferenceCode))) {
			var externalReferenceCode = "";
		}

		var curl = TaxonomyVocabularyAPI._curlTaxonomyVocabulary(
			depotName = ${depotName},
			groupName = ${groupName});
		var body = '''-d {
				"name": "${name}",
				"externalReferenceCode": "${externalReferenceCode}"
			}''';

		var curl = StringUtil.add(${curl}, ${body}, " ");

		var response = JSONCurlUtil.post(${curl});

		return ${response};
	}

	macro deleteAllKeywords {
		Variables.assertDefined(parameterList = "${groupNameList},${tagNameList}");

		for (var groupName : list ${groupNameList}) {
			var groupIdList = JSONAssettagSetter.setGroupId(groupName = ${groupName});

			for (var tagName : list ${tagNameList}) {
				var keywordId = JSONAssettagAPI._getTagId(
					groupId = ${groupIdList},
					tagName = ${tagName});

				var curl = TaxonomyVocabularyAPI._curlTaxonomyKeywords(keywordId = ${keywordId});

				JSONCurlUtil.delete(${curl});
			}
		}
	}

	macro deleteAllTaxonomyVocabulary {
		Variables.assertDefined(parameterList = ${groupName});

		var response = TaxonomyVocabularyAPI.getTaxonomyVocabularyWithDifferentParameters(groupName = ${groupName});

		var taxonomyVocabularyErcList = JSONUtil.getWithJSONPath(${response}, "$..items[*].externalReferenceCode");

		for (var taxonomyVocabularyErc : list ${taxonomyVocabularyErcList}) {
			var curl = TaxonomyVocabularyAPI._curlTaxonomyVocabulary(
				depotName = ${depotName},
				externalReferenceCode = ${taxonomyVocabularyErc},
				groupName = ${groupName});

			JSONCurlUtil.delete(${curl});
		}
	}

	macro deleteTaxonomyVocabularyByErc {
		Variables.assertDefined(parameterList = ${externalReferenceCode});

		var curl = TaxonomyVocabularyAPI._curlTaxonomyVocabulary(
			depotName = ${depotName},
			externalReferenceCode = ${externalReferenceCode},
			groupName = ${groupName});

		JSONCurlUtil.delete(${curl});
	}

	macro getKeywordsByGroupName {
		var curl = TaxonomyVocabularyAPI._curlTaxonomyKeywords(groupName = ${groupName});

		var response = JSONCurlUtil.get(${curl});

		return ${response};
	}

	macro getTaxonomyVocabularyWithDifferentParameters {
		var curl = TaxonomyVocabularyAPI._curlTaxonomyVocabulary(
			depotName = ${depotName},
			groupName = ${groupName},
			parameter = ${parameter},
			parameterValue = ${parameterValue});

		var response = JSONCurlUtil.get(${curl});

		return ${response};
	}

}