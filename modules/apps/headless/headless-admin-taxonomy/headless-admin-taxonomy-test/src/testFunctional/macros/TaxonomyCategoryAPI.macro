definition {

	macro _createTaxonomyCategory {
		var portalURL = JSONCompany.getPortalURL();

		if (isSet(parentTaxonomyCategoryId)) {
			var api = "taxonomy-categories/${parentTaxonomyCategoryId}/taxonomy-categories";
		}
		else {
			var api = "taxonomy-vocabularies/${taxonomyVocabularyId}/taxonomy-categories";
		}

		var curl = '''
			${portalURL}/o/headless-admin-taxonomy/v1.0/${api} \
				-u test@liferay.com:test \
				-H Content-Type: application/json \
				-d {
					"externalReferenceCode": "${externalReferenceCode}",
					"name": "${name}"
				}
		''';

		var curl = JSONCurlUtil.post(${curl});

		return ${curl};
	}

	macro createTaxonomyCategory {
		Variables.assertDefined(parameterList = ${name});

		if (!(isSet(externalReferenceCode))) {
			var externalReferenceCode = "";
		}

		var response = TaxonomyCategoryAPI._createTaxonomyCategory(
			externalReferenceCode = ${externalReferenceCode},
			name = ${name},
			parentTaxonomyCategoryId = ${parentTaxonomyCategoryId},
			taxonomyVocabularyId = ${taxonomyVocabularyId});

		return ${response};
	}

	macro staticTaxonomyCategoryId {
		Variables.assertDefined(parameterList = ${name});

		var response = TaxonomyCategoryAPI.createTaxonomyCategory(
			externalReferenceCode = ${externalReferenceCode},
			name = ${name},
			parentTaxonomyCategoryId = ${parentTaxonomyCategoryId},
			taxonomyVocabularyId = ${taxonomyVocabularyId});

		var taxonomyCategoryId = JSONPathUtil.getIdValue(response = ${response});

		if (isSet(parentTaxonomyCategoryId)) {
			static var staticChildTaxonomyCategoryId = ${taxonomyCategoryId};

			return ${staticChildTaxonomyCategoryId};
		}
		else {
			static var staticTaxonomyCategoryId = ${taxonomyCategoryId};

			return ${staticTaxonomyCategoryId};
		}
	}

}