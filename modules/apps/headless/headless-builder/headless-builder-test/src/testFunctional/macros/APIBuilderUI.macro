definition {

	macro assertSortedStatusInOrder {
		Variables.assertDefined(parameterList = ${statusList});

		var key_index = 1;

		for (var statusValue : list ${statusList}) {
			AssertTextEquals(
				index = ${key_index},
				locator1 = "APIBuilder#STATUS_LIST",
				value1 = ${statusValue});

			var key_index = ${key_index} + 1;
		}
	}

	macro changePublicationStatus {
		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "API Builder");

		Click(
			key_title = ${key_title},
			locator1 = "APIBuilder#DROPDOWN_MENU");

		Click(locator1 = "APIBuilder#CHANGE_PUBLICATION_STATUS_BUTTON");

		if (isSet(unpublish)) {
			Click(locator1 = "Button#UNPUBLISH");
		}
	}

	macro createAPIApplication {
		Variables.assertDefined(parameterList = ${title});

		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "API Builder");

		if (isSet(addByPlus)) {
			Click(locator1 = "Button#PLUS");
		}
		else {
			Click(locator1 = "APIBuilder#ADD_NEW_API_APPLICATION");
		}

		Type(
			key_fieldLabel = "Title",
			locator1 = "Modal#INPUT_WITH_LABEL",
			value1 = ${title});

		if (isSet(baseURL)) {
			Type(
				key_fieldLabel = "URL",
				locator1 = "Modal#INPUT_WITH_LABEL",
				value1 = ${baseURL});
		}

		if (isSet(description)) {
			Type(
				locator1 = "APIBuilder#DESCRIPTION",
				value1 = ${description});
		}

		Click(locator1 = "APIBuilder#CREATE_BUTTON");
	}

	macro createAPIEndpoint {
		Variables.assertDefined(parameterList = "${name},${path}");

		Click(locator1 = "Button#PLUS");

		Type(
			locator1 = "TextInput#NAME",
			value1 = ${name});

		Type(
			key_fieldLabel = "Path",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = ${path});

		if (isSet(applicationId)) {
			Click.pauseClickAt(
				locator1 = "TextInput#ANY_WITH_NAME",
				name = "r_apiApplicationToAPIEndpoints_c_apiApplicationId");

			Click(
				applicationId = ${applicationId},
				locator1 = "APIBuilder#API_APPLICATION_TO_API_ENDPOINTS");
		}

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");
	}

	macro deleteAPIApplication {
		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "API Builder");

		Click(
			key_title = ${key_title},
			locator1 = "APIBuilder#DROPDOWN_MENU");

		Click(locator1 = "APIBuilder#DELETE_IN_DROPDOWN_MENU");
	}

	macro deleteAPIEndpoint {
		APIBuilderUI.switchToRelatedEntryInEditApplication(
			entity = "Endpoints",
			title = ${applicationTitle});

		Click(
			key_title = ${endpointPath},
			locator1 = "APIBuilder#DROPDOWN_MENU");

		Click(locator1 = "APIBuilder#DELETE_IN_DROPDOWN_MENU");

		if (isSet(confirmDeletion)) {
			Click(locator1 = "APIBuilder#MODAL_DELETE_BUTTON");
		}
	}

	macro deleteAPISchema {
		APIBuilderUI.switchToRelatedEntryInEditApplication(
			entity = "Schemas",
			title = ${applicationTitle});

		Click(
			key_title = ${schemaName},
			locator1 = "APIBuilder#DROPDOWN_MENU");

		Click(locator1 = "APIBuilder#DELETE_IN_DROPDOWN_MENU");

		if (isSet(confirmDeletion)) {
			Click(locator1 = "APIBuilder#MODAL_DELETE_BUTTON");
		}
	}

	macro filterByLastUpdated {
		Variables.assertDefined(parameterList = "${fromDate},${toDate}");

		Click.pauseClickAt(locator1 = "Dropdown#FILTER");

		Click.pauseClickAt(locator1 = "APIBuilder#LAST_UPDATED_IN_FILTER");

		Type.sendKeys(
			locator1 = "APIBuilder#FROM_DATE",
			value1 = ${fromDate});

		Type.sendKeys(
			locator1 = "APIBuilder#TO_DATE",
			value1 = ${toDate});

		Click(
			key_text = "Add Filter",
			locator1 = "Button#ANY");
	}

	macro filterByStatus {
		Variables.assertDefined(parameterList = ${labelName});

		Click.pauseClickAt(locator1 = "Dropdown#FILTER");

		Click.pauseClickAt(locator1 = "APIBuilder#STATUS_IN_FILTER");

		Check.checkNotVisible(
			locator1 = "Radio#ANY",
			radioLabel = ${labelName});

		if (isSet(exclude)) {
			Check.checkToggleSwitch(locator1 = "APIBuilder#EXCLUDE_TOGGLE");
		}

		Click(
			key_text = "Add Filter",
			locator1 = "Button#ANY");
	}

	macro goToEditAPIApplicationPage {
		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "API Builder");

		Click(
			key_title = ${key_title},
			locator1 = "APIBuilder#DROPDOWN_MENU");

		Click(locator1 = "APIBuilder#EDIT_BUTTON");
	}

	macro publishApplication {
		APIBuilderUI.goToEditAPIApplicationPage(key_title = ${key_title});

		Click.pauseClickAt(locator1 = "APIBuilder#PUBLISH_BUTTON");
	}

	macro searchItem {
		Variables.assertDefined(parameterList = ${value});

		Type(
			locator1 = "TextInput#SEARCH",
			value1 = ${value});

		KeyPress(
			locator1 = "TextInput#SEARCH",
			value1 = "\RETURN");
	}

	macro setPanelCategoryKeyToObject {
		Variables.assertDefined(parameterList = ${objectDefinition});

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = ${objectDefinition});

		CreateObject.selectPanelCategoryKey(panelCategoryKey = "Control Panel > Object");

		CreateObject.saveObject();
	}

	macro switchToRelatedEntryInEditApplication {
		Variables.assertDefined(parameterList = "${entity},${title}");

		APIBuilderUI.goToEditAPIApplicationPage(key_title = ${title});

		Click(
			locator1 = "Button#BUTTON_WITH_VALUE",
			value = ${entity});
	}

	macro viewItemsInOrder {
		Variables.assertDefined(parameterList = ${itemList});

		var key_index = 1;

		for (var itemValue : list ${itemList}) {
			AssertTextEquals(
				index = ${key_index},
				locator1 = "APIBuilder#TABLE_LIST",
				value1 = ${itemValue});

			var key_index = ${key_index} + 1;
		}
	}

}