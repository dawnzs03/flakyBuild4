<%--
/**
 * SPDX-FileCopyrightText: (c) 2000 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */
--%>

<c:choose>
	<c:when test='<%= MapUtil.getBoolean(parameterMap, "quickPublish") %>'>
		<div class="process-summary-section">
			<div>
				<label class="process-summary-label">
					<liferay-ui:message key="content" />
				</label>
			</div>

			<div>
				<liferay-ui:message key="no-application-data-simple-publish" />
			</div>
		</div>
	</c:when>
	<c:otherwise>

		<%
		List<String> portletIds = new ArrayList<>();

		for (String key : parameterMap.keySet()) {
			String changesetPortletName = StringBundler.concat(PortletDataHandlerKeys.PORTLET_DATA, StringPool.UNDERLINE, ChangesetPortletKeys.CHANGESET);

			if (key.startsWith(PortletDataHandlerKeys.PORTLET_DATA + "_com") && MapUtil.getBoolean(parameterMap, key) && !key.equals(changesetPortletName)) {
				portletIds.add(key.substring(PortletDataHandlerKeys.PORTLET_DATA.length() + 1));
			}
		}

		String type = MapUtil.getString(parameterMap, "cmd");

		Map<String, LongWrapper> modelAdditionCounters = (Map<String, LongWrapper>)taskContextMap.get(ExportImportBackgroundTaskContextMapConstants.MODEL_ADDITION_COUNTERS);

		Map<String, Map<String, Long>> additions = new HashMap<>();

		Map<String, Map<String, Long>> deletions = new HashMap<>();

		if (portletIds.isEmpty()) {
			for (Portlet dataSiteLevelPortlet : ExportImportHelperUtil.getDataSiteLevelPortlets(company.getCompanyId(), false)) {
				portletIds.add(dataSiteLevelPortlet.getPortletId());
			}
		}

		for (String portletId : portletIds) {
			Portlet portlet = PortletLocalServiceUtil.getPortletById(portletId);

			if (!type.equals(Constants.EXPORT) && (liveGroup != null) && !liveGroup.isStagedPortlet(portlet.getRootPortletId())) {
				continue;
			}

			PortletDataHandler portletDataHandler = portlet.getPortletDataHandlerInstance();

			PortletDataHandlerControl[] exportControls = portletDataHandler.getExportControls();

			PortletDataHandlerControl[] metadataControls = portletDataHandler.getExportMetadataControls();

			if (!type.equals(Constants.EXPORT) && liveGroup.isStagedPortlet(portlet.getRootPortletId())) {
				exportControls = portletDataHandler.getStagingControls();
			}

			if (ArrayUtil.isEmpty(exportControls) && ArrayUtil.isEmpty(metadataControls)) {
				continue;
			}

			Map<String, Long> currentAdditions = new HashMap<>();

			Map<String, Long> currentDeletions = new HashMap<>();

			Long totalAdditions = Long.valueOf(0);

			Long totalDeletions = Long.valueOf(0);

			for (PortletDataHandlerControl control : exportControls) {
				String controlLabel = LanguageUtil.get(request, resourceBundle, control.getControlLabel());

				String controlClass = control.getClassName();

				if (modelAdditionCounters == null) {
					continue;
				}

				if (modelAdditionCounters.containsKey(controlClass)) {
					LongWrapper modelAdditionCounter = modelAdditionCounters.get(controlClass);

					Long value = modelAdditionCounter.getValue();

					currentAdditions.put(controlLabel, value);

					totalAdditions += value;
				}

				if (modelDeletionCounters == null) {
					continue;
				}

				if (modelDeletionCounters.containsKey(controlClass)) {
					LongWrapper modelDeletionCounter = modelDeletionCounters.get(controlClass);

					Long value = modelDeletionCounter.getValue();

					currentDeletions.put(controlLabel, value);

					totalDeletions += value;
				}
			}

			if ((totalAdditions + totalDeletions) <= 0) {
				continue;
			}

			currentAdditions.put("total", totalAdditions);

			currentDeletions.put("total", totalDeletions);

			additions.put(PortalUtil.getPortletTitle(portlet, request.getLocale()), currentAdditions);

			deletions.put(PortalUtil.getPortletTitle(portlet, request.getLocale()), currentDeletions);
		}
		%>

		<c:if test="<%= !portletIds.isEmpty() %>">
			<div class="process-summary-section">
				<div>
					<label class="process-summary-label">
						<liferay-ui:message key="content" />
					</label>
				</div>

				<%
				for (String portletId : portletIds) {
					Portlet portlet = PortletLocalServiceUtil.getPortletById(portletId);

					String portletTitle = PortalUtil.getPortletTitle(portlet, request.getLocale());

					Map<String, Long> currentAdditions = additions.get(portletTitle);

					Map<String, Long> currentDeletions = deletions.get(portletTitle);

					if ((currentAdditions == null) || (currentDeletions == null)) {
						continue;
					}
				%>

					<div class="process-summary-subsection">
						<div>
							<label><%= portletTitle %></label>

							<i>(<%= LanguageUtil.format(resourceBundle, "x-items-exported", currentAdditions.get("total")) %>)</i>

							<c:if test='<%= currentDeletions.get("total") > 0 %>'>
								<i>(<%= LanguageUtil.format(resourceBundle, "x-items-deleted", currentDeletions.get("total")) %>)</i>
							</c:if>
						</div>

						<div>

							<%
							int i = 0;

							for (Map.Entry<String, Long> additionEntry : currentAdditions.entrySet()) {
								++i;

								String mainLabel = additionEntry.getKey();

								if (mainLabel.equals("total")) {
									continue;
								}

								Long addition = additionEntry.getValue();

								String additionsString = "(" + addition.toString() + ")";

								if (currentAdditions.size() != i) {
									additionsString += ", ";
								}
							%>

								<span><%= mainLabel + StringPool.SPACE + additionsString %></span>

							<%
							}
							%>

						</div>
					</div>

				<%
				}
				%>

			</div>
		</c:if>
	</c:otherwise>
</c:choose>