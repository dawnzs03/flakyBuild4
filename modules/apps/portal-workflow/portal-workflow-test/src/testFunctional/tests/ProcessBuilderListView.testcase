@component-name = "portal-workflow"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Workflow";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			BlogsEntry.tearDownCP();

			Workflow.tearDownPortalWorkflow();

			Workflow.tearDownWorkflowDefinitions();
		}
	}

	@description = "Verify that the user can select Duplicate option in the kebab menu for a Not Published process"
	@priority = 4
	test CanDuplicateNonPublishedProcess {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		Workflow.viewDefinitionUnpublished(workflowDefinitionTitle = "Single Approver");

		Workflow.duplicateNotPublishedWorkflow(
			workflowCopyName = "Copy of Single Approver",
			workflowName = "Single Approver");

		Navigator.gotoBack();

		Workflow.viewDefinitionUnpublished(workflowDefinitionTitle = "Single Approver");

		Workflow.viewDefinitionUnpublished(workflowDefinitionTitle = "Copy of Single Approver");
	}

	@description = "Verify that the user can select Duplicate option in the kebab menu for a particular row"
	@priority = 4
	test CanDuplicateProcess {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		Workflow.duplicateSingleApproverWorkflow(workflowName = "Copy of Single Approver");

		Navigator.gotoBack();

		AssertElementPresent(
			key_workflowInstanceName = "Copy of Single Approver",
			locator1 = "AssetWorkflow#DETAILS_WORKFLOW_TITLE");
	}

	@description = "Verify that, when duplicating a process, the user is able to edit its title"
	@priority = 4
	test CanEditTitleOfDuplicatedProcess {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		Workflow.duplicateSingleApproverWorkflow();

		Workflow.updateDefinition(workflowDefinitionTitle = "Single Approver 2");

		Navigator.gotoBack();

		AssertElementPresent(
			key_workflowInstanceName = "Single Approver 2",
			locator1 = "AssetWorkflow#DETAILS_WORKFLOW_TITLE");
	}

	@description = "Verify that the user is able to filter by Not Published processes"
	@priority = 3
	test CanFilterByNonPublishedProcesses {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.duplicateSingleApproverWorkflow(workflowName = "Duplicated Process");

		Navigator.gotoBack();

		Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "Duplicated Process");

		ProcessBuilderListView.filterAndOrder(filterOption = "Not Published");

		ProcessBuilderListView.viewWorkflowIsPresent(workflowDefinitionTitle = "Duplicated Process");

		ProcessBuilderListView.viewWorkflowIsNotPresent(workflowDefinitionTitle = "Single Approver");
	}

	@description = "Verify that the user is able to filter by Published processes"
	@priority = 3
	test CanFilterByPublishedProcesses {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.duplicateSingleApproverWorkflow(workflowName = "Copy of Single Approver");

		Navigator.gotoBack();

		Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "Copy of Single Approver");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Published");

		AssertElementPresent(
			key_workflowDefinitionTitle = "Single Approver",
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE_PUBLISHED");

		AssertElementNotPresent(
			key_workflowDefinitionTitle = "Copy of Single Approver",
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE_PUBLISHED");
	}

	@description = "Verify that the user can not delete a published process"
	@priority = 5
	test CanNotDeletePublishedProcess {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		AssertElementPresent(
			key_processName = "Single Approver",
			key_section = "Published",
			locator1 = "ProcessBuilderListView#PROCESS_NAME_IN_SECTION");

		Click(
			key_workflowDefinitionTitle = "Single Approver",
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS");

		AssertElementNotPresent(
			key_value = "Delete",
			locator1 = "ProcessBuilderListView#UNPUBLISHED_OPTION");
	}

	@description = "Verify that the user can not unpublish a Workflow is in use and system displays an error message"
	@priority = 5
	test CanNotUnpublishWorkflowInUse {
		Workflow.openWorkflowProcessBuilderConfiguration();

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Calendar Event");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Comment");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		Alert.viewErrorMessage(errorMessage = "Workflow is in use. Remove its assignment to these Assets:");

		Workflow.viewDefinitionPublished(workflowDefinitionTitle = "Single Approver");
	}

	@description = "Verify that the user is able to order by Last Modified"
	@priority = 2
	test CanOrderByLastModified {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		Workflow.duplicateSingleApproverWorkflow(workflowName = "Copy of Single Approver");

		Navigator.gotoBack();

		Workflow.processBuilderFilterAndOrder(optionOrder = "Last Modified");

		AssertElementPresent(
			key_order = 2,
			key_title = "Single Approver",
			locator1 = "AssetWorkflow#DETAILS_WORKFLOW_TITLE_ORDER");

		AssertElementPresent(
			key_order = 3,
			key_title = "Copy of Single Approver",
			locator1 = "AssetWorkflow#DETAILS_WORKFLOW_TITLE_ORDER");
	}

	@description = "Verify that the user is able to order by Title"
	@priority = 3
	test CanOrderByTitle {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.duplicateSingleApproverWorkflow(workflowName = "A Workflow");

		Workflow.duplicateSingleApproverWorkflow(workflowName = "Z Workflow");

		Navigator.gotoBack();

		Click(
			key_text = "Filter and Order",
			locator1 = "Button#ANY_WITH_SPAN");

		Click(
			key_value = "Title",
			locator1 = "ProcessBuilderListView#DROPDOWN_ITEM");

		WaitForElementPresent(
			key_index = 1,
			key_processName = "A Workflow",
			key_section = "Published",
			locator1 = "ProcessBuilderListView#PROCESS_NAME_IN_SECTION_BY_INDEX");

		AssertElementPresent(
			key_index = 1,
			key_processName = "A Workflow",
			key_section = "Published",
			locator1 = "ProcessBuilderListView#PROCESS_NAME_IN_SECTION_BY_INDEX");

		AssertElementPresent(
			key_index = 2,
			key_processName = "Single Approver",
			key_section = "Published",
			locator1 = "ProcessBuilderListView#PROCESS_NAME_IN_SECTION_BY_INDEX");

		AssertElementPresent(
			key_index = 3,
			key_processName = "Z Workflow",
			key_section = "Published",
			locator1 = "ProcessBuilderListView#PROCESS_NAME_IN_SECTION_BY_INDEX");
	}

	@description = "Verify that the user is able to reverse sort direction"
	@priority = 2
	test CanReverseSortDirection {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		Workflow.duplicateSingleApproverWorkflow(workflowName = "Copy of Single Approver");

		Navigator.gotoBack();

		Workflow.clickRevertSortDirection();

		AssertTextEquals(
			key_rowNumber = 2,
			locator1 = "ProcessBuilderListView#PROCESS_NAME_TABLE_ROW",
			value1 = "Copy of Single Approver");

		AssertTextEquals(
			key_rowNumber = 3,
			locator1 = "ProcessBuilderListView#PROCESS_NAME_TABLE_ROW",
			value1 = "Single Approver");
	}

	@description = "Verify that the user is not able to search by Workflow description"
	@priority = 3
	test CanSearchByDescription {
		Workflow.openWorkflowListView();

		task ("Search for existing Description") {
			ProcessBuilderListView.searchForWorkflow(workflowName = "workflow content");

			ProcessBuilderListView.validateIfSearchItem(
				numberResults = 1,
				singleResult = "true",
				workflowName = "\"workflow content\"");

			AssertElementPresent(
				key_workflowDefinitionTitle = "Single Approver",
				locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE_PUBLISHED");
		}

		task ("Search for non existing Description") {
			ProcessBuilderListView.searchForWorkflow(workflowName = "new process");

			ProcessBuilderListView.validateIfSearchItem(
				numberResults = 0,
				workflowName = "\"new process\"");

			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No workflow definitions are defined.");
		}
	}

	@description = "Verify that the user is able to search by Workflow title"
	@priority = 4
	test CanSearchByTitle {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		ProcessBuilderListView.searchForWorkflow(workflowName = "Approver");

		ProcessBuilderListView.validateIfSearchItem(
			numberResults = 1,
			singleResult = "true",
			workflowName = "\"Approver\"");

		Workflow.viewDefinitionPublished(workflowDefinitionTitle = "Single Approver");
	}

	@description = "Verify that search can be done using non-ASCII character"
	@priority = 4
	test CanSearchNonAsciiChar {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		Workflow.duplicateSingleApproverWorkflow(workflowName = "単一承認者");

		Navigator.gotoBack();

		ProcessBuilderListView.searchForWorkflow(workflowName = "単一");

		AssertTextEquals(
			key_rowNumber = 2,
			locator1 = "ProcessBuilderListView#PROCESS_NAME_TABLE_ROW",
			value1 = "単一承認者");
	}

	@description = "Verify that the user can select Edit option in the kebab menu for a particular row"
	@priority = 4
	test CanSelectEditOption {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		WaitForElementPresent(
			key_nodeLabel = "review",
			locator1 = "ProcessBuilderKaleoDesignerReact#DIAGRAM_NODE_LABEL");

		Workflow.updateDefinition(workflowDefinitionTitle = "New Process Title");

		Navigator.gotoBack();

		Workflow.viewDefinitionPublished(workflowDefinitionTitle = "New Process Title");
	}

	@description = "Verify that the user can select Edit option in the kebab menu for a Not Published process"
	@priority = 4
	test CanSelectEditOptionForNonPublishedProcess {
		property test.liferay.virtual.instance = "false";
		property test.run.environment = "EE";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		ProcessBuilderListView.viewDefinitionPublicationStatus(
			notPublished = "true",
			workflowDefinitionTitle = "Single Approver");

		Workflow.gotoEditWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		ProcessBuilderKaleoDesignerReact.viewDefinitionTitle(definitionTitle = "Single Approver");

		AssertEditable(locator1 = "TextInput#TITLE");

		ProcessBuilderKaleoDesignerReact.viewPublishButtonPresent();

		ProcessBuilderKaleoDesignerReact.viewSaveButtonPresent();
	}

	@description = "Verify that the user can select Permissions option in the kebab menu for a particular row"
	@priority = 4
	test CanSelectPermissionsOption {
		property test.liferay.virtual.instance = "false";
		property test.run.environment = "EE";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		ProcessBuilderListView.gotoPermissions(workflowDefinitionTitle = "Single Approver");
	}

	@description = "Verify that the user can select Permissions option in the kebab menu for a Not Published process"
	@priority = 4
	test CanSelectPermissionsOptionForNonPublishedProcess {
		property test.liferay.virtual.instance = "false";
		property test.run.environment = "EE";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		Workflow.permissionsWorkflowDefinition(workflowDefinitionTitle = "Single Approver");
	}

	@description = "Verify that the user can select View option in the kebab menu for a particular row"
	@priority = 4
	test CanSelectViewOption {
		property test.run.environment = "EE";

		Workflow.openWorkflowListView();

		Workflow.viewWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		ProcessBuilderKaleoDesignerReact.viewDefinitionTitle(definitionTitle = "Single Approver");

		AssertNotEditable(locator1 = "TextInput#TITLE");
	}

	@description = "Verify that a duplicated definition can be Unpublished"
	@priority = 3
	test CanUnpublishDuplicatedDefinition {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		Workflow.duplicateSingleApproverWorkflow(workflowName = "Copy of Single Approver");

		Navigator.gotoBack();

		Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "Copy of Single Approver");

		Workflow.viewDefinitionUnpublished(workflowDefinitionTitle = "Copy of Single Approver");
	}

	@description = "Verify that the user can select View option in the kebab menu for a Not Published process"
	@ignore = "true"
	@priority = 3
	test CanViewNonPublishedProcess {
		property test.run.environment = "EE";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		ProcessBuilderListView.viewDefinitionPublicationStatus(
			notPublished = "true",
			workflowDefinitionTitle = "Single Approver");

		Workflow.viewWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		AssertNotEditable(locator1 = "WorkflowDefinition#DEFINITION_TITLE");

		AssertElementPresent(locator1 = "WorkflowDefinition#DEFINITION_VIEW_EDIT_BUTTON");
	}

	@description = "Verify that the Clear option cleans the search results"
	@priority = 3
	test ClearSearchResults {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		ProcessBuilderListView.searchForWorkflow(workflowName = "Approver");

		ManagementBar.clearFilter();

		AssertElementNotPresent(locator1 = "ManagementBar#CLEAR_FILTER");

		Workflow.viewDefinitionPublished(workflowDefinitionTitle = "Single Approver");
	}

	@description = "Verify that the correct columns are displayed: Title, Description, Last Modified"
	@priority = 5
	test DisplaysColumnsTitleDescriptionLastModified {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		AssertElementPresent(
			key_columnName = "title",
			locator1 = "ProcessBuilderListView#PROCESS_BUILDER_COLUMN_NAME");

		AssertElementPresent(
			key_columnName = "description",
			locator1 = "ProcessBuilderListView#PROCESS_BUILDER_COLUMN_NAME");

		AssertElementPresent(
			key_columnName = "last-modified",
			locator1 = "ProcessBuilderListView#PROCESS_BUILDER_COLUMN_NAME");
	}

	@description = "Verify that Not Published processes are displayed on table"
	@priority = 4
	test DisplaysNonPublishedProcessesOnTable {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		AssertTextEquals(
			key_workflowDefinitionTitle = "Not Published",
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE",
			value1 = "Not Published");

		AssertElementPresent(
			key_workflowProcessName = "Single Approver",
			locator1 = "WorkflowMetrics#METRICS_WORKFLOW_PROCESS_NAME");
	}

	@description = "Verify that hovering the + button will display the text New Workflow"
	@priority = 2
	test DisplaysText {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		AssertElementPresent(
			key_tooltip = "New Workflow",
			locator1 = "ProcessBuilderListView#TOOLTIP_MESSAGE");
	}

	@description = "Verify that the pagination component is displayed when the table has 5 items or more"
	@priority = 3
	test PaginationComponentIsDisplayed {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		var count = 2;

		while (${count} != 6) {
			Workflow.duplicateSingleApproverWorkflow(workflowName = "Copy of Single Approver ${count}");

			Navigator.gotoBack();

			Type(
				locator1 = "TextInput#SEARCH",
				value1 = "Single Approver ${count}");

			Click(locator1 = "WorkflowMetricsProcessListView#SEARCH_BUTTON");

			var count = ${count} + 1;
		}

		AssertElementPresent(
			locator1 = "Pagination#ITEMS_PER_PAGE_SELECT",
			value1 = "20 Entries");

		Pagination.viewResults(results = "Showing 1 to 5 of 5 entries.");
	}

	@description = "Verify that the users are able to click on the + button and be directed to the New Workflow page"
	@priority = 5
	test RedirectToNewWorkflowPage {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Click(locator1 = "Button#PLUS");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "New Workflow");
	}

}