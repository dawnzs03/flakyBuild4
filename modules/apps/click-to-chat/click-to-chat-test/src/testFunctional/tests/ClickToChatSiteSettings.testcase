@component-name = "portal-solutions"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Click to Chat";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Click to Chat",
			configurationName = "Click to Chat Configuration",
			configurationScope = "Virtual Instance Scope");

		FormFields.enableCheckbox(fieldName = "enabled");
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "This is a test for LPS-132716. Verify if the data persists in Site Settings after choosing the strategy 'Always Inherit' in Instance Settings"
	@priority = 5
	test CheckStrategyAlwaysInheritPersistence {
		property solutions.acceptance = "true";

		task ("Given the user set 'Always Inherit' configuration") {
			ClickToChatUtils.fillGoalsChat(
				chatProviderId = "Zendesk Web Widget Classic",
				siteSettingsStrategy = "Always Inherit");

			var passwordZendesk = ClickToChatUtils.getPassword(chatProviderChoosen = "zendesk");
		}

		task ("And can see the Zendesk Web Widget Classic icon") {
			AssertElementPresent(locator1 = "Providers#CHAT_ZENDESK");
		}

		task ("When the user navigate to Click to Chat") {
			ClickToChatUtils.navigateToComponent(nameComponent = "Click to Chat");
		}

		task ("Then the user can see that the data is present after choosing the strategy 'Always Inherit' in Instance Settings") {
			ClickToChatUtils.viewTheFieldsPresent(
				chatProviderId = ${passwordZendesk},
				chatProviderOption = "Zendesk Web Widget Classic",
				siteSettingsStrategy = "Always Inherit");
		}
	}

	@description = "This is a test for LPS-132716. Verify if the data persists in Site Settings after choosing the strategy 'Always Override' in Instance Settings"
	@priority = 5
	test CheckStrategyAlwaysOverridePersistence {
		property solutions.acceptance = "true";

		task ("Given the user set 'Always Override' configuration") {
			ClickToChatUtils.fillGoalsChat(siteSettingsStrategy = "Always Override");

			SystemSettings.saveConfiguration();
		}

		task ("When the user navigate to Click to Chat") {
			ClickToChatUtils.navigateToComponent(nameComponent = "Click to Chat");
		}

		task ("And set Zendesk Web Widget Classic configuration and Key configuration") {
			ClickToChatUtils.fillGoalsChat(chatProviderId = "Zendesk Web Widget Classic");

			var passwordZendesk = ClickToChatUtils.getPassword(chatProviderChoosen = "zendesk");
		}

		task ("And can see the Zendesk Web Widget Classic icon") {
			AssertElementPresent(locator1 = "Providers#CHAT_ZENDESK");
		}

		task ("Then the user can see that the data is present after choosing the strategy 'Always Override' in Instance Settings") {
			ClickToChatUtils.viewTheFieldsPresent(
				chatProviderId = ${passwordZendesk},
				chatProviderOption = "Zendesk Web Widget Classic",
				siteSettingsStrategy = "Always Override");
		}
	}

	@description = "This is a test for LPS-132716. Verify if the data persists in Site Settings after choosing the strategy 'Inherit or Override' in Instance Settings"
	@priority = 5
	test CheckStrategyInheritOrOverridePersistence {
		property solutions.acceptance = "true";

		task ("Given the user set 'Inherit or Override' configuration") {
			ClickToChatUtils.fillGoalsChat(
				chatProviderId = "Zendesk Web Widget Classic",
				siteSettingsStrategy = "Inherit or Override");

			var passwordZendesk = ClickToChatUtils.getPassword(chatProviderChoosen = "zendesk");
		}

		task ("And can see the Zendesk Web Widget Classic icon") {
			AssertElementPresent(locator1 = "Providers#CHAT_ZENDESK");
		}

		task ("When the user navigate to Click to Chat") {
			ClickToChatUtils.navigateToComponent(nameComponent = "Click to Chat");
		}

		task ("Then the user can see that the data is present after choosing the strategy 'Inherit or Override' in Instance Settings") {
			ClickToChatUtils.viewTheFieldsPresent(
				chatProviderId = ${passwordZendesk},
				chatProviderOption = "Zendesk Web Widget Classic",
				siteSettingsStrategy = "Inherit or Override");
		}
	}

}