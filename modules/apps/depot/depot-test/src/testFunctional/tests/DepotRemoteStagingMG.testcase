@component-name = "portal-document-management"
definition {

	property app.server.bundles.size = "1";
	property custom.properties = "tunneling.servlet.shared.secret=1234567890123456${line.separator}auth.verifier.TunnelAuthVerifier.hosts.allowed=";
	property databases.size = "1";
	property minimum.slave.ram = "24";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Depot";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		Depot.remoteStagingSetUpViaJson(
			groupName = "Test Depot Name",
			remotePort = 9080,
			site = "false");

		HeadlessSite.addSite(siteName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page");

		Staging.remoteStagingSetUpViaJson(
			groupName = "Site Name",
			remotePort = 9080);

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONDepot.deleteDepot(depotName = "Test Depot Name");

			JSONDepot.deleteDepot(depotName = "Remote Depot");

			JSONGroup.deleteGroupByName(groupName = "Remote Site");

			JSONGroup.deleteGroupByName(groupName = "Site Name");

			User.logoutPG();
		}
	}

	@description = "This ensures that an image stored in an asset library can be deleted and republished in Media Gallery when remote staging is enabled."
	@priority = 4
	test CanPublishDeletedImage {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Test Depot Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page",
			widgetName = "Media Gallery");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			selectRootFolder = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		JSONDocument.moveToRecycleBin(
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Test Depot Name",
			site = "false");

		DepotNavigator.openDepotRecycleBinAdmin(depotName = "Test Depot Name");

		RecycleBin.deleteCP(
			assetName = "Document_2.jpg",
			assetType = "Document");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.viewDefault();

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Navigator.openSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Test Page",
			siteName = "Remote Site");

		MGPortlet.viewDefault();
	}

	@description = "This ensures that an image stored in a DM folder of asset library can be deleted and republished in Media Gallery when remote staging is enabled."
	@priority = 4
	test CanPublishDeletedImageFromFolder {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "Depot Folder Name",
			groupName = "Test Depot Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			folderName = "Depot Folder Name",
			groupName = "Test Depot Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page",
			widgetName = "Media Gallery");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			dmRootFolderName = "Depot Folder Name");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		JSONDocument.moveToRecycleBin(
			dmDocumentTitle = "Document_2.jpg",
			folderName = "Depot Folder Name",
			groupName = "Test Depot Name",
			site = "false");

		DepotNavigator.openDepotRecycleBinAdmin(depotName = "Test Depot Name");

		RecycleBin.deleteCP(
			assetName = "Document_2.jpg",
			assetType = "Document");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.viewDefault();

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Navigator.openSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Test Page",
			siteName = "Remote Site");

		MGPortlet.viewDefault();
	}

	@description = "This ensures that an image stored in an asset library can be edited and republished in Media Gallery when remote staging is enabled."
	@priority = 4
	test CanPublishEditedImage {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Test Depot Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page",
			widgetName = "Media Gallery");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			selectRootFolder = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMDocument.editCP(
			dmDocumentFileEdit = "Document_1.jpg",
			dmDocumentFileNameEdit = "Document_1.jpg",
			dmDocumentTitle = "Document_2.jpg",
			dmDocumentTitleEdit = "Document_1.jpg");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_1.jpg",
			staging = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Navigator.openSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Test Page",
			siteName = "Remote Site");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_1.jpg",
			staging = "true");
	}

	@description = "This ensures that an image stored in a DM folder of asset library can be edited and republished in Media Gallery when remote staging is enabled."
	@priority = 4
	test CanPublishEditedImageFromFolder {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "Depot Folder Name",
			groupName = "Test Depot Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			folderName = "Depot Folder Name",
			groupName = "Test Depot Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page",
			widgetName = "Media Gallery");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			dmRootFolderName = "Depot Folder Name");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		DepotNavigator.openToDMFolder(
			depotName = "Test Depot Name",
			folderName = "Depot Folder Name");

		DMDocument.editCP(
			dmDocumentFileEdit = "Document_1.jpg",
			dmDocumentFileNameEdit = "Document_1.jpg",
			dmDocumentTitle = "Document_2.jpg",
			dmDocumentTitleEdit = "Document_1.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_1.jpg",
			staging = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Navigator.openSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Test Page",
			siteName = "Remote Site");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_1.jpg",
			staging = "true");
	}

	@description = "This ensures that an image stored in an asset library can be published in Media Gallery when remote staging is enabled."
	@priority = 5
	test CanPublishImage {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Test Depot Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page",
			widgetName = "Media Gallery");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			selectRootFolder = "true");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_2.jpg",
			staging = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Navigator.openSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Test Page",
			siteName = "Remote Site");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_2.jpg",
			staging = "true");
	}

	@description = "This ensures that the folders stored in different asset libraries can be changed and republished in Media Gallery when remote staging is enabled."
	@priority = 4
	test CanPublishImageAfterChangingDepot {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name 2");

		Depot.remoteStagingSetUpViaJson(
			groupName = "Test Depot Name 2",
			remoteDepotName = "Remote Depot 2",
			remotePort = 9080,
			site = "false");

		JSONDepot.connectSite(
			depotName = "Test Depot Name 2",
			groupName = "Site Name");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Test Depot Name");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name 2",
			groupName = "Test Depot Name 2");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_1.jpg",
			folderName = "DM Folder Name",
			groupName = "Test Depot Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			folderName = "DM Folder Name 2",
			groupName = "Test Depot Name 2",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name 2");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page",
			widgetName = "Media Gallery");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			dmRootFolderName = "DM Folder Name");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name 2",
			dmRootFolderName = "DM Folder Name 2");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Navigator.openSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Test Page",
			siteName = "Remote Site");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_2.jpg",
			staging = "true");
	}

	@description = "This ensures that the folders stored in an asset library can be changed and republished in Media Gallery when remote staging is enabled."
	@priority = 4
	test CanPublishImageAfterChangingRootFolder {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Test Depot Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_1.jpg",
			folderName = "DM Folder Name",
			groupName = "Test Depot Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name 2",
			groupName = "Test Depot Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			folderName = "DM Folder Name 2",
			groupName = "Test Depot Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page",
			widgetName = "Media Gallery");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			dmRootFolderName = "DM Folder Name");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			breadcrumbName = "Test Depot Name",
			dmRootFolderName = "DM Folder Name 2",
			selectBreadcrumb = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Navigator.openSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Test Page",
			siteName = "Remote Site");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_2.jpg",
			staging = "true");
	}

	@description = "This ensures that an image stored in a DM Folder asset library can be published in Media Gallery when remote staging is enabled."
	@priority = 4
	test CanPublishImageFromFolder {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Test Depot Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_2.jpg",
			folderName = "DM Folder Name",
			groupName = "Test Depot Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page",
			widgetName = "Media Gallery");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			dmRootFolderName = "DM Folder Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_2.jpg",
			staging = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Navigator.openSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Test Page",
			siteName = "Remote Site");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_2.jpg",
			staging = "true");
	}

	@description = "This test covers LPS-154442. This ensures that an external video with a custom friendlyURL can be displayed properly in the Media Gallery Display widget after its friendlyURL is edited and published from an asset library."
	@priority = 4
	test CanViewExternalVideoAfterFriendlyURLIsUpdated {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		VideoShortcut.addCP(
			videoShortcutTitle = "Test YouTube Video",
			videoURL = "https://www.youtube.com/watch?v=HOdbzGCI5ME");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page",
			widgetName = "Media Gallery");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			selectRootFolder = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		DepotNavigator.openToEditDMEntryInDepot(
			depotName = "Test Depot Name",
			dmDocumentTitle = "Test YouTube Video");

		DMDocument.editFriendlyURL(friendlyURLEdit = "custom-url");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "hqdefault.jpg",
			staging = "true");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Test Page",
			siteName = "Remote Site");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "hqdefault.jpg",
			staging = "true");
	}

	@description = "This test covers LPS-154441. This ensures that an image with a custom friendlyURL can be displayed properly in the Media Gallery Display widget after its friendlyURL is edited and published from an asset library."
	@priority = 4
	test CanViewImageAfterFriendlyURLIsUpdated {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "Document_1.jpg",
			groupName = "Test Depot Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page",
			widgetName = "Media Gallery");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		MGPortlet.setRootFolder(
			depotName = "Test Depot Name",
			selectRootFolder = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		DepotNavigator.openToEditDMEntryInDepot(
			depotName = "Test Depot Name",
			dmDocumentTitle = "Document_1.jpg");

		DMDocument.editFriendlyURL(friendlyURLEdit = "custom-url");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_1.jpg",
			staging = "true");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Navigator.openSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Test Page",
			siteName = "Remote Site");

		DMDocument.viewPGViaMG(
			mgDocumentTitle = "Document_1.jpg",
			staging = "true");
	}

}