@component-name = "core-infrastructure"
definition {

	property ms.exchange.enabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Portal Configuration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}

		Gmail.gotoHtmlMode();

		if (IsElementNotPresent(locator1 = "Gmail#INBOX")) {
			Gmail.login(
				userEmailAddress = PropsUtil.get("email.address.3"),
				userPassword = PropsUtil.get("email.password.3"));

			WaitForElementPresent(locator1 = "Gmail#INBOX");

			Gmail.gotoHtmlMode();
		}

		Gmail.deleteSpecificMail(gmailMessageTitleList = "MB Thread Message Subject");

		Gmail.deleteSpecificMail(gmailMessageTitleList = "Your Password Has Been Changed");

		Gmail.deleteSpecificMail(gmailMessageTitleList = "Your New Account");
	}

	@description = "This is a use case for LPS-183419. Verify users can view and reply to message board threads via email with Microsoft Exchange Server."
	@ignore = "true"
	@priority = 5
	test MSExhangeViewMBThreadAndReply {
		property custom.properties = "admin.email.from.address=qa-exchange-pop-test@liferay.onmicrosoft.com${line.separator}jsonws.web.service.paths.excludes=${line.separator}mail.send.blacklist=noreply@liferay.com,test@liferay.com,noreply@domain.invalid,test@domain.invalid";
		property portal.acceptance = "true";
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		task ("Given a gmail user with permission to add and post on message boards") {
			JSONUser.addUserWithRole(
				roleTitle = "Administrator",
				userEmailAddress = PropsUtil.get("email.address.3"),
				userFirstName = "userfn",
				userLastName = "userln",
				userScreenName = "usersn");
		}

		task ("And given the user creates a message board") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = PropsUtil.get("email.address.3"),
				userLoginFullName = "userfn userln");

			MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "guest");

			MessageboardsThread.addCP(
				threadBody = "MB Thread Message Body",
				threadSubject = "MB Thread Message Subject");
		}

		task ("And given a user has replied to the message board") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");

			MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "guest");

			MessageboardsThread.gotoCP(threadSubject = "MB Thread Message Subject");

			MessageboardsThread.replyCP(
				threadReplyBody = "Message Boards Body Reply",
				threadSubject = "MB Thread Message Subject");

			Button.clickPublish();
		}

		task ("When the owner of the message board logs in to their email account") {
			Gmail.login(
				userEmailAddress = PropsUtil.get("email.address.3"),
				userPassword = PropsUtil.get("email.password.3"));

			WaitForElementPresent(locator1 = "Gmail#INBOX");
		}

		task ("Then they can view the reply in their inbox") {
			Gmail.gotoHtmlMode();

			Gmail.viewMail(
				emailFromUserName = "userfn userln",
				gmailAssetType = "userln (2)",
				gmailMessageBody = "Message Boards Body Reply",
				gmailMessageTitle = " MB Thread Message Subject",
				viewReply = "true");
		}

		task ("When the user submits a response via email") {
			Gmail.replyMail(gmailReplyMessage = "MB Thread Message Subject Reply");
		}

		task ("Then the response is also added on the message board") {

			// Pausing 60 seconds due to LRQA-80725

			Pause(locator1 = 60000);

			MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "guest");

			MessageboardsThread.gotoCP(threadSubject = "MB Thread Message Subject");

			MessageboardsThread.viewReplyCP(
				threadBody = "MB Thread Message Subject Reply",
				threadSubject = "MB Thread Message Subject",
				userName = "userfn userln");
		}

		Gmail.gotoHtmlMode();

		Gmail.deleteSpecificMail(gmailMessageTitleList = "MB Thread Message Subject");

		Navigator.openURL();
	}

}