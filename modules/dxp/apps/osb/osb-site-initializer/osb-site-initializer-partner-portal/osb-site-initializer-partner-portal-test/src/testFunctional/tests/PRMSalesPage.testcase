@component-name = "OSB Site Initializer Partner Portal"
definition {

	property custom.properties = "feature.flag.LPS-135430=true";
	property osgi.modules.includes = "osb-site-initializer-partner-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Partner Portal";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Partner Portal Site") {
			PRMUtils.addSite();
		}

		task ("Login as Partner Sales User and go to Partner Portal") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "psu@partner.com",
				userLoginFullName = "Partner Sales User");

			PRMUtils.gotoPRM();

			PRMNavigator.goToNavItem(navItem = "Sales");
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			PRMUtils.tearDown();
		}
	}

	@description = "Verify that a Register a Deal button is displayed on the sales page and the Deal Registration Form page will be opened when click on this button"
	@priority = 5
	test CanAccessDealFormViaSalesPage {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		// Temporarily skip portal instances to get tests running for pending release. LRQA-80052

		task ("Given I go to Deals page") {
			PRMHomePage.gotoQuickLinksOption(
				buttonLink = "deal-registrations",
				buttonText = "Register a Deal");
		}

		task ("When I click on Register a New Deal button") {
			Button.click(button = "Register New Deal");
		}

		task ("Then the Deal Registration Form page is opened") {
			AssertLocation.assertPartialLocation(value1 = "deal-registrations/new");
		}
	}

}