@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";
	var testAccount = "Test Account Portal";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = ${testSiteName});
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		User.firstLoginPG();

		CustomerPortal.customerPortalApisTearDown();
	}

	@description = "Story ID: LPS-152144 | Test Summary: Verify that the form can only be sent after filling out all required fields"
	@ignore = "true"
	@priority = 4
	test AssertTheUserCanSubmitTheForm {
		task ("Given the user logout from customer portal site") {
			User.logoutPG();
		}

		task ("And go to Form for guest users") {
			var portalURL = PropsUtil.get("portal.url");

			Navigator.openSpecificURL(url = "${portalURL}/web/customer-portal-site/replacement-activation-key-form");
		}

		task ("When fulfill the form") {
			CP2Utils.fulfillGuestForm(
				clustered = "Single instance",
				companyName = "Liferay",
				email = "test@liferay.com",
				explainField = "Test",
				submit = "true",
				supportRegion = "Asia Pacific",
				typeOfServer = "Backup");
		}

		task ("Then assert the success message") {
			AssertElementPresent(locator1 = "CP2Utils#GUEST_FORM_CONGRATS");
		}
	}

}