@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";
	var testAccount = "Test Account Analytics Cloud";
	var testProduct = "Analytics Cloud";
	var testUserFirstName = "Test";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = ${testSiteName});
		}

		task ("Add test user access to all Accounts") {
			CustomerPortal.assignUserToOrganization();

			CustomerPortal.addUserToOneOrMoreAccounts(accountsList = ${testAccount});
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		CP2Utils.tearDownForCloudEntries(
			entry = "test@liferay.com",
			entry1 = "test@liferay.com",
			portlet = "Analytics Cloud Workspaces",
			portlet1 = "Incident Report Contacts Analytics Cloud",
			status = "In-Progress");

		CustomerPortal.customerPortalTearDown();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = ${testSiteName});
		}
	}

	@description = "Automation ID: LPS-150650 | Test Summary: Verify if the user can add additional Incident Report Contacts using the 'Add Incident Report Contact' button"
	@priority = 3
	test AddingAdditionalIncidentReportContacts {
		task ("Given that I go to the card activation modal in onboarding") {
			Account.openAccountsAdmin();

			CustomerPortal.accountTableProject(title = ${testAccount});

			Account.addAssigneeToRoleViaUsersTab(
				accountRoleTitle = "Account Administrator",
				accountUserName = "Test Test");

			ApplicationsMenu.gotoSite(key_site = ${testSiteName});

			CustomerPortal.waitCP20PageToLoad(userFirstName = ${testUserFirstName});

			WaitForPageLoad();

			CustomerPortal.search(searchItem = ${testAccount});

			CustomerPortal.enterOnProject(title = ${testAccount});

			Button.click(button = "Start Project Setup");

			Button.click(button = "Skip for now");
		}

		task ("And I assert that one more 'Incident Report Contact' field has been added") {
			CustomerPortal.clickAtButton(text = "Add Incident Report Contact");

			CP2AnalyticsCloudSetup.assertFieldExtraIsVisible(
				field = "email",
				position = 2);
		}

		task ("Given that I click on the 'Remove Incident Report Contact' button") {
			CustomerPortal.clickAtButton(text = "Remove Incident Report Contact");
		}

		task ("Then I assert that the 'Incident Report Contact' field is no longer visible") {
			CP2AnalyticsCloudSetup.assertFieldExtraIsNotVisible(
				field = "email",
				position = 2);
		}
	}

	@description = "Automation ID: LPS-150654 | Test Summary: Verify if the user enters a wrong value in 'Owner Email' an error message is displayed"
	@priority = 3
	test CanSeeTheErrorMessageInTheOwnerEmailField {
		task ("Given that I go to the card activation modal in onboarding") {
			Account.openAccountsAdmin();

			CustomerPortal.accountTableProject(title = ${testAccount});

			Account.addAssigneeToRoleViaUsersTab(
				accountRoleTitle = "Account Administrator",
				accountUserName = "Test Test");

			ApplicationsMenu.gotoSite(key_site = ${testSiteName});

			CustomerPortal.waitCP20PageToLoad(userFirstName = ${testUserFirstName});

			WaitForPageLoad();

			CustomerPortal.search(searchItem = ${testAccount});

			CustomerPortal.enterOnProject(title = ${testAccount});

			Button.click(button = "Start Project Setup");

			Button.click(button = "Skip for now");
		}

		task ("Then I assert that the 'Owner Email' field is required") {
			CP2AnalyticsCloudSetup.typeSetupAnalyticsCloudInfoFields(
				label = "Address",
				value = "");

			CustomerPortal.clickOnModalPage(text = "Set up Analytics Cloud");

			CustomerPortal.assertErrorMessageIsVisible(errorMessage = "This field is required.");
		}
	}

	@description = "Automation ID: LPS-150649 | Test Summary: Verify if team member administrator can only submit the form after filling out all required fields"
	@priority = 5
	test CanViewTheAdministratorSubmitTheForm {
		task ("Given that I go to the permissions page and assert that the user has no role defined") {
			Account.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = ${testAccount});

			Navigator.gotoNavTab(navTab = "Users");

			AssertTextEquals(
				key_columnName = "lfr-account-roles-column",
				key_rowEntry = "Test Test",
				locator1 = "ContentRow#ENTRY_CONTENT_ROW_NUMBER_TD",
				value1 = "");
		}

		task ("And I go into the project and assert that the user has not gone through onboarding") {
			ApplicationsMenu.gotoSite(key_site = ${testSiteName});

			CustomerPortal.waitCP20PageToLoad(userFirstName = ${testUserFirstName});

			CustomerPortal.search(searchItem = ${testAccount});

			CustomerPortal.enterOnProject(title = ${testAccount});

			CP2HomePage.assertModalNotPresent();
		}

		task ("And I go back to the permissions page and declare the role Account Administrator for the user") {
			Account.openAccountsAdmin();

			CustomerPortal.accountTableProject(title = ${testAccount});

			Account.addAssigneeToRoleViaUsersTab(
				accountRoleTitle = "Account Administrator",
				accountUserName = "Test Test");
		}

		task ("When I go to the project again and go through onboarding") {
			ApplicationsMenu.gotoSite(key_site = ${testSiteName});

			CustomerPortal.waitCP20PageToLoad(userFirstName = ${testUserFirstName});

			CustomerPortal.search(searchItem = ${testAccount});

			CustomerPortal.enterOnProject(title = ${testAccount});

			Button.click(button = "Start Project Setup");

			Button.click(button = "Skip for now");
		}

		task ("And the user fills in all required fields and submits the form") {
			CP2AnalyticsCloudSetup.typeAllSetupAnalyticsCloudInfoFields();

			Button.click(button = "Submit");
		}

		task ("Then I should be able to assert that the form has been submitted") {
			CustomerPortal.viewConfirmationTextInTheModalPage(pageText = "Thank you for submitting this request! Your Analytics Cloud workspace will be provisioned in 1-2 business days. An email will be sent once your workspace is ready.");
		}
	}

	@description = "Automation ID: LPS-150659 | Test Summary: Verify if the user enters an invalid e-mail address for the owner and contacts in the incident report an error message is displayed"
	@priority = 3
	test CanViewTheErrorMessageInTheIncidentReportContactField {
		task ("Given that I go to the card activation modal in onboarding") {
			Account.openAccountsAdmin();

			CustomerPortal.accountTableProject(title = ${testAccount});

			Account.addAssigneeToRoleViaUsersTab(
				accountRoleTitle = "Account Administrator",
				accountUserName = "Test Test");

			ApplicationsMenu.gotoSite(key_site = ${testSiteName});

			CustomerPortal.waitCP20PageToLoad(userFirstName = ${testUserFirstName});

			WaitForPageLoad();

			CustomerPortal.search(searchItem = ${testAccount});

			CustomerPortal.enterOnProject(title = ${testAccount});

			Button.click(button = "Start Project Setup");

			Button.click(button = "Skip for now");
		}

		task ("Then I assert that the 'Incident Report Contact' field is required") {
			CP2AnalyticsCloudSetup.typeSetupAnalyticsCloudInfoFields(
				label = "email",
				value = "");

			CustomerPortal.clickOnModalPage(text = "Set up Analytics Cloud");

			CustomerPortal.assertErrorMessageIsVisible(errorMessage = "This field is required.");
		}
	}

	@description = "Automation ID: LPS-150657 | Test Summary: Verify if the user enters a wrong value in 'Workspace Name', an error message is displayed"
	@priority = 3
	test CanViewTheErrorMessageInTheWorkspaceNameField {
		task ("Given that I go to the card activation modal in onboardin") {
			Account.openAccountsAdmin();

			CustomerPortal.accountTableProject(title = ${testAccount});

			Account.addAssigneeToRoleViaUsersTab(
				accountRoleTitle = "Account Administrator",
				accountUserName = "Test Test");

			ApplicationsMenu.gotoSite(key_site = ${testSiteName});

			CustomerPortal.waitCP20PageToLoad(userFirstName = ${testUserFirstName});

			WaitForPageLoad();

			CustomerPortal.search(searchItem = ${testAccount});

			CustomerPortal.enterOnProject(title = ${testAccount});

			Button.click(button = "Start Project Setup");

			Button.click(button = "Skip for now");
		}

		task ("Then I assert that the 'Workspace Name' field is required") {
			CP2AnalyticsCloudSetup.typeSetupAnalyticsCloudInfoFields(
				label = "workspaceName",
				value = "");

			CustomerPortal.clickOnModalPage(text = "Set up Analytics Cloud");

			CustomerPortal.assertErrorMessageIsVisible(errorMessage = "This field is required.");
		}
	}

}