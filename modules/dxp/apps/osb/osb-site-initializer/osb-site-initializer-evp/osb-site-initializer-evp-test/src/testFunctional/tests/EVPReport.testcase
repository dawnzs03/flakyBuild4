@component-name = "OSB Site Initializer EVP"
definition {

	var baseURL = PropsUtil.get("portal.url");

	property custom.properties = "feature.flag.LPS-169981=true";
	property osgi.modules.includes = "osb-site-initializer-evp";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer EVP";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new EVP Site") {
			EVPUtils.addEVPSite();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ObjectAdmin.deleteAllCustomObjectsViaAPI();

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "EVP Portal");
		}
	}

	@description = "LPS-164731 - Reports bar Should not be visible on top menu for Employee users."
	@priority = 4
	test CanEmployeeNotSeeReportPage {
		task ("Given the employee user are logged") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "employee@liferay.com",
				userLoginFullName = "Employee User");
		}

		task ("When he goes to EVP Site") {
			EVPUtils.gotoEVP();
		}

		task ("Then he can not see Reports Page on top menu") {
			EVPNavigator.navItemNotPresent(navItem = "Reports");
		}
	}

	@description = "LPS-172931 - Finance user can generate a report with filters applied"
	@priority = 5
	test CanFinanceGenerateReportWithFilters {
		task ("Given the finance user are logged") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "finance@liferay.com",
				userLoginFullName = "Finance User");
		}

		task ("And he goes to Reports Page") {
			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Reports");
		}

		task ("When the finance user generate financial report") {
			EVPUtils.generateFinancialReport(
				cardTitle = "EVP Financial Report",
				dateRange = "-1",
				endDateLabel = "Final Payment Date",
				initialDateLabel = "Initial Payment Date");
		}

		task ("The he can generate the CSV file") {
			EVPUtils.downloadFileViaCurl(fileName = "payment-report.csv");
		}
	}

	@description = "LPS-172931 - Manager user can generate a report with filters applied"
	@priority = 5
	test CanManagerGenerateReportWithFilters {
		task ("Given the manager user are logged") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "manager@liferay.com",
				userLoginFullName = "Manager User");
		}

		task ("And he goes to Reports Page") {
			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Reports");
		}

		task ("When the manager user generate requests listing") {
			EVPUtils.generateRequestsListing(
				cardTitle = "EVP Requests Listing",
				companyName = "Test ID",
				dateRange = "-1",
				endDateLabel = "Final Request Date",
				finalCompanyId = 4,
				fullName = "Test Test",
				initialCompanyId = 2,
				initialDateLabel = "Initial Request Date",
				listCheckbox = "Awaiting Approval On EVP,Closed,Liferay US");
		}

		task ("The he can generate the CSV file") {
			EVPUtils.downloadFileViaCurl(fileName = "request-report.csv");
		}
	}

	@description = "LPS-164731 - Finance user should be able to see the Report card through 'Reports' Tab on top menu"
	@priority = 5
	test CanReportCardShouldBeVisibleForFinanceUsers {
		task ("Given the finance user are logged") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "finance@liferay.com",
				userLoginFullName = "Finance User");
		}

		task ("When he goes to Reports Page") {
			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Reports");
		}

		task ("Then he can see the cards present in the page") {
			EVPUtils.assertCardsTitle(listcardTitle = "EVP Requests Listing,EVP Financial Report");
		}
	}

	@description = "LPS-164731 - Manager user should be able to see the Report card through 'Reports' Tab on top menu"
	@priority = 5
	test ReportCardShouldBeVisibleForManagerUsers {
		task ("Given the manager user are logged") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "manager@liferay.com",
				userLoginFullName = "Manager User");
		}

		task ("When he goes to Reports Page") {
			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Reports");
		}

		task ("Then he can see the cards present in the page") {
			EVPUtils.assertCardsTitle(listcardTitle = "EVP Requests Listing,EVP Financial Report");
		}
	}

}