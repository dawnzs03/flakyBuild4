definition {

	macro configureEmbeddedSearchBarSuggestions {
		SearchPortlets.gotoEmbeddedOptions(portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		if (isSet(characterThresholdForDisplayingSuggestions)) {
			Type(
				locator1 = "SearchBarSuggestions#CHARACTER_THRESHOLD_FOR_DISPLAYING_SUGGESTIONS",
				value1 = ${characterThresholdForDisplayingSuggestions});
		}

		if (${addContributor} == "true") {
			Click.javaScriptClick(locator1 = "SearchBarSuggestions#ADD_SUGGESTIONS_BUTTON");
		}

		if (${deleteBasicContributor} == "true") {
			Click(locator1 = "SearchBarSuggestions#DELETE_SUGGESTION_CONTRIBUTOR");
		}

		if (!(isSet(suggestionContributorOrder))) {
			var suggestionContributorOrder = 1;
		}

		if (isSet(suggestionContributor)) {
			Click(
				key_suggestionContributor = ${suggestionContributor},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_SELECT");
		}

		if (isSet(suggestionContributorBlueprint)) {
			Click(
				key_suggestionContributorOrder = ${suggestionContributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_SELECT_BLUEPRINT");

			WaitForElementPresent(
				key_blueprintTitle = ${suggestionContributorBlueprint},
				locator1 = "Blueprints#BLUEPRINTS_OPTION_WIDGET_SELECT_BLUEPRINT");

			Click(
				key_blueprintTitle = ${suggestionContributorBlueprint},
				locator1 = "Blueprints#BLUEPRINTS_OPTION_WIDGET_SELECT_BLUEPRINT");

			SelectFrameTop();

			SelectFrame(locator1 = "IFrame#CONFIGURATION");
		}

		if (isSet(suggestionContributorActivity)) {
			Click(
				key_suggestionContributorOrder = ${suggestionContributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_ACTIVITY");

			Click(
				key_menuItem = ${suggestionContributorActivity},
				locator1 = "MenuItem#ANY_MENU_ITEM");
		}

		if (isSet(characterThreshold)) {
			Type(
				key_suggestionContributorOrder = ${suggestionContributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_THRESHOLD",
				value1 = ${characterThreshold});
		}

		if (isSet(suggestionContributorDisplayGroupName)) {
			Type(
				key_suggestionContributorOrder = ${suggestionContributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_DISPLAY_GROUP_NAME",
				value1 = ${suggestionContributorDisplayGroupName});
		}

		if (isSet(suggestionContributorMinimumSearches)) {
			Type(
				key_suggestionContributorOrder = ${suggestionContributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_MINIMUM_SEARCHES",
				value1 = ${suggestionContributorMinimumSearches});
		}

		if (isSet(suggestionContributorSize)) {
			Type(
				key_suggestionContributorOrder = ${suggestionContributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_SIZE",
				value1 = ${suggestionContributorSize});
		}

		SelectFrameTop();

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		PortletEntry.save();

		IFrame.closeFrame();
	}

	macro copyConfiguration {
		if (${suggestionContributor} == "Display Group Name") {
			Click.clickAt(
				key_suggestionContributorOrder = ${contributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_DISPLAY_GROUP_NAME");

			Type.sendKeys(
				key_suggestionContributorOrder = ${contributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_DISPLAY_GROUP_NAME",
				value1 = "keys=CONTROL,a");

			Type.sendKeys(
				key_suggestionContributorOrder = ${contributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_DISPLAY_GROUP_NAME",
				value1 = "keys=CONTROL,c");
		}
		else if (${suggestionContributor} == "Size") {
			Click.clickAt(
				key_suggestionContributorOrder = ${contributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_SIZE");

			Type.sendKeys(
				key_suggestionContributorOrder = ${contributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_SIZE",
				value1 = "keys=CONTROL,a");

			Type.sendKeys(
				key_suggestionContributorOrder = ${contributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_SIZE",
				value1 = "keys=CONTROL,c");
		}
	}

	macro gotoSuggestionResultDetails {
		if (!(isSet(suggestionContributorDisplayGroupName))) {
			var suggestionContributorDisplayGroupName = "Suggestions";
		}

		Click.mouseDownMouseUp(
			key_searchAssetTitle = ${searchAssetTitle},
			key_suggestionContributorDisplayGroupName = ${suggestionContributorDisplayGroupName},
			locator1 = "SearchBarSuggestions#RESULTS_LIST_ITEM_TITLE");
	}

	macro pasteConfiguration {
		if (${suggestionContributor} == "Display Group Name") {
			Click.clickAt(
				key_suggestionContributorOrder = ${contributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_DISPLAY_GROUP_NAME");

			Type.sendKeys(
				key_suggestionContributorOrder = ${contributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_DISPLAY_GROUP_NAME",
				value1 = "keys=CONTROL,v");
		}
		else if (${suggestionContributor} == "Size") {
			Click.clickAt(
				key_suggestionContributorOrder = ${contributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_SIZE");

			Type.sendKeys(
				key_suggestionContributorOrder = ${contributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_SIZE",
				value1 = "keys=CONTROL,a");

			Type.sendKeys(
				key_suggestionContributorOrder = ${contributorOrder},
				locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_SIZE",
				value1 = "keys=CONTROL,c");
		}
	}

	macro showMoreSuggestions {
		Click.mouseDownMouseUp(locator1 = "Button#SHOW_MORE");
	}

	macro viewNoResultAssetTitle {
		if (!(isSet(suggestionContributorDisplayGroupName))) {
			var suggestionContributorDisplayGroupName = "Suggestions";
		}

		AssertElementNotPresent(
			key_searchAssetTitle = ${searchAssetTitle},
			key_suggestionContributorDisplayGroupName = ${suggestionContributorDisplayGroupName},
			locator1 = "SearchBarSuggestions#RESULTS_LIST_ITEM_TITLE");
	}

	macro viewSuggestionResultDetails {
		AssertTextEquals(
			locator1 = "SearchResults#ASSET_DETAILS_TITLE",
			value1 = ${searchAssetTitle});
	}

	macro viewSuggestionResultDetailsURL {
		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = ${searchAssetTitle});

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "WC WebContent Description",
			searchAssetTitle = ${searchAssetTitle});

		SearchBarSuggestions.gotoSuggestionResultDetails(searchAssetTitle = ${searchAssetTitle});

		AssertTextEquals(
			locator1 = "SearchResults#ASSET_DETAILS_TITLE",
			value1 = ${searchAssetTitle});

		var currentURL = selenium.getCurrentUrl();

		if (!(contains(${currentURL}, ${expectedURL}))) {
			fail("The suggestion result details page must use the URL of the page the user came from");
		}
	}

	macro viewSuggestions {
		if (!(isSet(suggestionContributorDisplayGroupName))) {
			var suggestionContributorDisplayGroupName = "Suggestions";
		}

		AssertTextEquals.assertPartialText(
			key_searchAssetTitle = ${searchAssetTitle},
			key_suggestionContributorDisplayGroupName = ${suggestionContributorDisplayGroupName},
			locator1 = "SearchBarSuggestions#RESULTS_LIST_ITEM_TITLE",
			value1 = ${searchAssetTitle});

		if (isSet(searchAssetDescription)) {
			AssertTextEquals.assertPartialText(
				key_searchAssetDescription = ${searchAssetDescription},
				key_searchAssetTitle = ${searchAssetTitle},
				key_suggestionContributorDisplayGroupName = ${suggestionContributorDisplayGroupName},
				locator1 = "SearchBarSuggestions#RESULTS_LIST_ITEM_DESCRIPTION",
				value1 = ${searchAssetDescription});
		}
	}

}