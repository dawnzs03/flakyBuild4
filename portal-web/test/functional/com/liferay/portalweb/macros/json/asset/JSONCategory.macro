definition {

	macro addCategory {
		Variables.assertDefined(parameterList = ${vocabularyName});

		JSONUtil2._exclusiveOrCheck(
			a = ${title},
			b = ${titleMap},
			failMessage = "Please only set 'title' or only 'titleMap' but not both or none.");

		if (!(isSet(groupId))) {
			var groupId = JSONCategorySetter.setGroupId(
				groupName = ${groupName},
				site = ${site});
		}

		var parentCategoryId = JSONCategorySetter.setParentCategoryId();
		var titleMap = JSONCategorySetter.setTitleMap(
			title = ${title},
			titleMap = ${titleMap});
		var descriptionMap = JSONCategorySetter.setDescriptionMap(
			description = ${description},
			descriptionMap = ${descriptionMap});
		var serviceContext = JSONCategorySetter.setServiceContext(serviceContext = ${serviceContext});
		var vocabularyId = JSONCategorySetter.setVocabularyId(
			groupId = ${groupId},
			vocabularyName = ${vocabularyName});

		var categoryId = JSONCategoryAPI._addCategory(
			descriptionMap = ${descriptionMap},
			groupId = ${groupId},
			parentCategoryId = ${parentCategoryId},
			serviceContext = ${serviceContext},
			titleMap = ${titleMap},
			vocabularyId = ${vocabularyId});

		return ${categoryId};
	}

	macro addSubcategory {
		Variables.assertDefined(parameterList = "${parentCategoryName},${vocabularyName}");

		JSONUtil2._exclusiveOrCheck(
			a = ${title},
			b = ${titleMap},
			failMessage = "Please only set 'title' or only 'titleMap' but not both or none.");

		if (!(isSet(groupId))) {
			var groupId = JSONCategorySetter.setGroupId(
				groupName = ${groupName},
				site = ${site});
		}

		var vocabularyId = JSONCategorySetter.setVocabularyId(
			groupId = ${groupId},
			vocabularyName = ${vocabularyName});

		var parentCategoryId = JSONCategorySetter.setParentCategoryId(
			groupId = ${groupId},
			parentCategoryName = ${parentCategoryName},
			vocabularyId = ${vocabularyId});
		var serviceContext = JSONCategorySetter.setServiceContext(serviceContext = ${serviceContext});
		var titleMap = JSONCategorySetter.setTitleMap(
			title = ${title},
			titleMap = ${titleMap});
		var descriptionMap = JSONCategorySetter.setDescriptionMap(
			description = ${description},
			descriptionMap = ${descriptionMap});

		var categoryId = JSONCategoryAPI._addCategory(
			descriptionMap = ${descriptionMap},
			groupId = ${groupId},
			parentCategoryId = ${parentCategoryId},
			serviceContext = ${serviceContext},
			titleMap = ${titleMap},
			vocabularyId = ${vocabularyId});

		return ${categoryId};
	}

	macro addVocabulary {
		JSONUtil2._exclusiveOrCheck(
			a = ${title},
			b = ${titleMap},
			failMessage = "Please only set 'title' or only 'titleMap' but not both or none.");

		if (!(isSet(groupId))) {
			var groupId = JSONCategorySetter.setGroupId(
				groupName = ${groupName},
				site = ${site});
		}

		var serviceContext = JSONCategorySetter.setServiceContext(serviceContext = ${serviceContext});
		var titleMap = JSONCategorySetter.setTitleMap(
			title = ${title},
			titleMap = ${titleMap});
		var descriptionMap = JSONCategorySetter.setDescriptionMap(
			description = ${description},
			descriptionMap = ${descriptionMap});

		if (!(isSet(visibility))) {
			var visibility = "public";
		}

		var visibilityType = JSONCategorySetter.setVisibilityType(visibility = ${visibility});

		JSONCategoryAPI._addVocabulary(
			descriptionMap = ${descriptionMap},
			groupId = ${groupId},
			serviceContext = ${serviceContext},
			titleMap = ${titleMap},
			visibilityType = ${visibilityType});
	}

	macro deleteCategory {
		Variables.assertDefined(parameterList = "${groupName},${categoryName},${vocabularyName}");

		var categoryId = JSONCategory.getCategoryId(
			categoryName = ${categoryName},
			groupName = ${groupName},
			vocabularyName = ${vocabularyName});

		JSONCategoryAPI._deleteCategory(categoryId = ${categoryId});
	}

	macro deleteVocabulary {
		Variables.assertDefined(parameterList = "${groupName},${vocabularyName}");

		var groupId = JSONCategorySetter.setGroupId(groupName = ${groupName});

		var vocabularyId = JSONCategorySetter.setVocabularyId(
			groupId = ${groupId},
			vocabularyName = ${vocabularyName});

		JSONCategoryAPI._deleteVocabulary(vocabularyId = ${vocabularyId});
	}

	macro getCategoryId {
		Variables.assertDefined(parameterList = "${groupName},${categoryName},${vocabularyName}");

		var groupId = JSONCategorySetter.setGroupId(
			groupName = ${groupName},
			site = ${site});

		var vocabularyId = JSONCategorySetter.setVocabularyId(
			groupId = ${groupId},
			vocabularyName = ${vocabularyName});

		var categoryId = JSONCategoryAPI._getCategoryIdByName(
			categoryName = ${categoryName},
			groupId = ${groupId},
			vocabularyId = ${vocabularyId});

		return ${categoryId};
	}

	macro tearDownCategories {
		Variables.assertDefined(parameterList = "${groupName},${vocabularyName}");

		var groupId = JSONCategorySetter.setGroupId(groupName = ${groupName});

		var vocabularyId = JSONCategorySetter.setVocabularyId(
			groupId = ${groupId},
			vocabularyName = ${vocabularyName});

		var categoriesIds = JSONCategoryAPI._getVocabularyCategoriesIds(vocabularyId = ${vocabularyId});

		for (var categoryId : list ${categoriesIds}) {
			JSONCategoryAPI._deleteCategory(categoryId = ${categoryId});
		}
	}

	macro updateCategoryName {
		Variables.assertDefined(parameterList = "${groupName},${categoryName},${vocabularyName}");

		JSONUtil2._exclusiveOrCheck(
			a = ${title},
			b = ${titleMap},
			failMessage = "Please only set 'title' or only 'titleMap' but not both or none.");

		var groupId = JSONCategorySetter.setGroupId(groupName = ${groupName});

		var vocabularyId = JSONCategorySetter.setVocabularyId(
			groupId = ${groupId},
			vocabularyName = ${vocabularyName});

		var categoryId = JSONCategorySetter.setCategoryId(
			categoryName = ${categoryName},
			groupId = ${groupId},
			vocabularyId = ${vocabularyId});
		var descriptionMap = JSONCategorySetter.setDescriptionMap(
			description = ${description},
			descriptionMap = ${descriptionMap});
		var parentCategoryId = JSONCategorySetter.setParentCategoryId(
			groupId = ${groupId},
			vocabularyId = ${vocabularyId});
		var titleMap = JSONCategorySetter.setTitleMap(
			title = ${title},
			titleMap = ${titleMap});

		JSONCategoryAPI._updateCategory(
			categoryId = ${categoryId},
			descriptionMap = ${descriptionMap},
			parentCategoryId = ${parentCategoryId},
			titleMap = ${titleMap},
			vocabularyId = ${vocabularyId});
	}

}