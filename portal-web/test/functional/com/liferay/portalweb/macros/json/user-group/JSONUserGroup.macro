definition {

	macro addLayout {
		Variables.assertDefined(parameterList = "${userGroupName},${layoutName}");

		var friendlyURL = JSONLayoutSetter.setFriendlyURL(friendlyURL = ${friendlyURL});
		var privateLayout = JSONLayoutSetter.setPrivateLayout(privateLayout = ${privateLayout});
		var userGroupId = JSONUserGroupAPI._getUserGroupIdByName(userGroupName = ${userGroupName});
		var companyId = JSONCompany.getCompanyId();
		var portalURL = JSONCompany.getPortalURL();
		var userLoginInfo = JSONUtil2.formatJSONUser();

		var curl = '''
			${portalURL}/api/jsonws/group/get-groups/company-id/${companyId}/parent-group-id/0/site/false \
				-u ${userLoginInfo}
		''';

		var groupId = JSONCurlUtil.get(${curl}, "$.[?(@['groupKey'] == '${userGroupId}')]['groupId']");
		var serviceContext = JSONLayoutSetter.setServiceContext(
			assetCategoryIds = ${assetCategoryIds},
			assetTagNames = ${assetTagNames},
			serviceContext = ${serviceContext},
			workflowAction = ${workflowAction});
		var type = JSONLayoutSetter.setType(type = ${type});

		JSONLayoutAPI._addLayout(
			friendlyURL = ${friendlyURL},
			groupId = ${groupId},
			layoutName = ${layoutName},
			parentLayoutId = 0,
			privateLayout = ${privateLayout},
			serviceContext = ${serviceContext},
			type = ${type});
	}

	macro addUserGroup {
		Variables.assertDefined(parameterList = ${userGroupName});

		JSONUserGroupAPI._addUserGroup(
			userGroupDescription = ${userGroupDescription},
			userGroupName = ${userGroupName});
	}

	macro assignGroupRoleToUserGroup {
		Variables.assertDefined(parameterList = "${roleTitle},${userGroupName}");

		if (!(isSet(groupId))) {
			var groupId = JSONGroupSetter.setGroupId(groupName = ${groupName});
		}

		var roleId = JSONRoleAPI._getRoleIdByName(name = ${roleTitle});
		var userGroupId = JSONUserGroupAPI._getUserGroupIdByName(userGroupName = ${userGroupName});

		JSONUserGroupAPI._assignGroupRoleToUserGroup(
			groupId = ${groupId},
			roleId = ${roleId},
			userGroupId = ${userGroupId});
	}

}