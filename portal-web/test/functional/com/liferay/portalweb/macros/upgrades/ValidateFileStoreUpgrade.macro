definition {

	macro viewAFSStoreUpgrade {
		task ("Assert no errors are thrown during upgrade") {
			AssertConsoleTextNotPresent(value1 = "No errors thrown during upgrade");
		}

		task ("Assert document library is populated in file system") {
			var liferayHome = PropsUtil.get("liferay.home.dir.name");

			var dlFolderExists = FileUtil.exists("${liferayHome}/data/document_library1");

			if (${dlFolderExists} == "true") {
				var fileList = FileUtil.listFiles("${liferayHome}/data/document_library1");

				var listSize = ListUtil.size(${fileList});

				var dlCount = MathUtil.isGreaterThan(${listSize}, 1);

				if (${dlCount} == "false") {
					fail("data/document_library1 folder is not populated");
				}
			}
		}

		task ("Assert document is present on the test site") {
			Navigator.gotoSitePage(
				pageName = "Document",
				siteName = "Site Name");

			ValidateSmokeUpgrade.changeDisplayStyle(displayStyle = "list");

			DMDocument.viewPG(dmDocumentTitle = "Document1");

			DMDocument.expandInfo();

			AssertTextEquals(
				locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_UPLOADED_BY",
				value1 = "Test Test");

			AssertTextEquals(
				key_dmDocumentVersionNumber = "1.0",
				locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_VERSION",
				value1 = "VERSION 1.0");

			AssertTextEquals(
				locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_WORKFLOW_STATUS",
				value1 = "APPROVED");

			var key_text = "Download";

			AssertTextEquals(
				locator1 = "Button#ANY",
				value1 = "Download");
		}

		task ("Assert image is present on the test site") {
			Navigator.gotoSitePage(
				pageName = "Document",
				siteName = "Site Name");

			ValidateSmokeUpgrade.changeDisplayStyle(displayStyle = "list");

			DMDocument.viewPG(dmDocumentTitle = "Image1");

			DMDocument.expandInfo();

			AssertTextEquals(
				locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_UPLOADED_BY",
				value1 = "Test Test");

			AssertTextEquals(
				key_dmDocumentVersionNumber = "1.0",
				locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_VERSION",
				value1 = "VERSION 1.0");

			AssertTextEquals(
				locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_WORKFLOW_STATUS",
				value1 = "APPROVED");

			var key_text = "Download";

			AssertTextEquals(
				locator1 = "Button#ANY",
				value1 = "Download");
		}

		task ("Assert document and image can be deleted") {
			DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

			DMDocument.deleteCP(dmDocumentTitle = "Document1");

			DMDocument.deleteCP(dmDocumentTitle = "Image1");

			RecycleBin.openRecycleBinAdmin(siteURLKey = "site-name");

			RecycleBin.emptyCP();
		}
	}

	macro viewDBStoreUpgrade {
		task ("Assert no errors are thrown during upgrade") {
			AssertConsoleTextNotPresent(value1 = "No errors thrown during upgrade");
		}

		task ("Assert document library is not populated in file system") {
			var liferayHome = PropsUtil.get("liferay.home.dir.name");

			var dlFolderExists = FileUtil.exists("${liferayHome}/data/document_library");

			if (${dlFolderExists} == "true") {
				var fileList = FileUtil.listFiles("${liferayHome}/data/document_library");

				var listSize = ListUtil.size(${fileList});

				var dlCount = MathUtil.isGreaterThan(${listSize}, 1);

				if (${dlCount} == "true") {
					fail("data/document_library folder is populated");
				}
			}
		}

		task ("Assert document is present on the test site") {
			Navigator.gotoSitePage(
				pageName = "Document",
				siteName = "Site Name");

			ValidateSmokeUpgrade.changeDisplayStyle(displayStyle = "list");

			DMDocument.viewPG(dmDocumentTitle = "Document1");

			DMDocument.expandInfo();

			AssertTextEquals(
				locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_UPLOADED_BY",
				value1 = "Test Test");

			AssertTextEquals(
				key_dmDocumentVersionNumber = "1.0",
				locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_VERSION",
				value1 = "VERSION 1.0");

			AssertTextEquals(
				locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_WORKFLOW_STATUS",
				value1 = "APPROVED");

			var key_text = "Download";

			AssertTextEquals(
				locator1 = "Button#ANY",
				value1 = "Download");
		}

		task ("Assert image is present on the test site") {
			Navigator.gotoSitePage(
				pageName = "Document",
				siteName = "Site Name");

			ValidateSmokeUpgrade.changeDisplayStyle(displayStyle = "list");

			DMDocument.viewPG(dmDocumentTitle = "Image1");

			DMDocument.expandInfo();

			AssertTextEquals(
				locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_UPLOADED_BY",
				value1 = "Test Test");

			AssertTextEquals(
				key_dmDocumentVersionNumber = "1.0",
				locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_VERSION",
				value1 = "VERSION 1.0");

			AssertTextEquals(
				locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_WORKFLOW_STATUS",
				value1 = "APPROVED");

			var key_text = "Download";

			AssertTextEquals(
				locator1 = "Button#ANY",
				value1 = "Download");
		}

		task ("Assert document and image can be deleted") {
			DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

			DMDocument.deleteCP(dmDocumentTitle = "Document1");

			DMDocument.deleteCP(dmDocumentTitle = "Image1");

			RecycleBin.openRecycleBinAdmin(siteURLKey = "site-name");

			RecycleBin.emptyCP();
		}
	}

}