definition {

	var userEmailAddress = "test@liferay.com";
	var userPassword = "test";
	var userPasswordReminderAnswer = "test";

	macro _signIn {
		var appServerType = PropsUtil.get("app.server.type");

		if (${appServerType} == "weblogic") {

			// Pausing 2 seconds due to LPS-159595

			Pause(locator1 = 2000);
		}

		if (isSet(virtualHostsURL)) {
			Navigator.openSpecificURL(url = "${virtualHostsURL}/web/guest?SM_USER=${userEmailAddress}");
		}
		else {
			var baseURL = PropsUtil.get("portal.url");

			Navigator.openSpecificURL(url = "${baseURL}/web/guest?SM_USER=${userEmailAddress}");
		}

		if (isSet(licenseExpired)) {
			Navigator.openURL();
		}
		else {
			AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
		}

		WaitForLiferayEvent.initializeLiferayEventLog();
	}

	macro agreeToTermsOfUse {
		AssertClick(
			locator1 = "Button#I_AGREE",
			value1 = "I Agree");

		AssertElementNotPresent(locator1 = "Button#I_AGREE");
	}

	macro setPasswordReminder {
		Type(
			locator1 = "TextInput#ANSWER",
			value1 = ${userPasswordReminderAnswer});

		Button.clickSave();
	}

	macro signIn {
		SignIn._signIn(
			userEmailAddress = ${userEmailAddress},
			userPassword = ${userPassword});
	}

	macro signInPortalInstanceSetUp {
		var portalURL = JSONCompany.getPortalURL();

		var portalURL = Regex.removeHTTP(url = ${portalURL});

		var portalURL = Regex.removePortNumber(url = ${portalURL});
		var domain = JSONCompany.getDomain();

		HeadlessPortalInstanceAPI.addPortalInstance(
			authenticationMethod = ${authenticationMethod},
			domain = ${domain},
			portalInstanceId = ${portalURL},
			virtualHost = ${portalURL});

		var isLXC = JSONUtil2.getLXCEnvironment();

		if (${isLXC} == "true") {

			// Workaround for LXC server performance issues LRQA-81713

			Pause(locator1 = 90000);
		}
	}

	macro signInSpecificURL {
		SignIn._signIn(
			userEmailAddress = ${userEmailAddress},
			userPassword = ${userPassword},
			virtualHostsURL = ${url});
	}

	macro signInTestSetup {
		var userEmailAddress = JSONUtil2.getDefaultUserEmail();

		JSONUser.agreeToTermsAndAnswerReminderQuery(userEmailAddress = ${userEmailAddress});

		SignIn._signIn(
			licenseExpired = ${licenseExpired},
			userEmailAddress = ${userEmailAddress},
			userPassword = ${userPassword});
	}

}