definition {

	macro _getPortalInstances {
		var portalURL = JSONCompany.getDefaultPortalURL();

		if (${authenticationMethod} == "By Screen Name") {
			var userLoginInfo = "test:test";
		}
		else {
			var userLoginInfo = JSONUtil2.formatJSONSuperAdminUser();
		}

		var curl = '''
			${portalURL}/o/headless-portal-instances/v1.0/portal-instances \
				-u ${userLoginInfo} \
				-H Content-Type: application/json
		''';

		var json = JSONCurlUtil.get(${curl});

		return ${json};
	}

	macro addPortalInstance {
		Variables.assertDefined(parameterList = "${domain},${virtualHost},${portalInstanceId}");

		var portalURL = JSONCompany.getDefaultPortalURL();
		var parameters = JSONUtil2._addJSONObject(
			json = "{}",
			key = "domain",
			value = "\"${domain}\"");

		var parameters = JSONUtil2._addJSONObject(
			json = ${parameters},
			key = "virtualHost",
			value = "\"${virtualHost}\"");

		var parameters = JSONUtil2._addJSONObject(
			json = ${parameters},
			key = "portalInstanceId",
			value = "\"${portalInstanceId}\"");

		if (${authenticationMethod} == "By Screen Name") {
			var userLoginInfo = "test:test";
		}
		else {
			var userLoginInfo = JSONUtil2.formatJSONSuperAdminUser();
		}

		var curl = '''
			${portalURL}/o/headless-portal-instances/v1.0/portal-instances \
				-u ${userLoginInfo} \
				-d ${parameters} \
				-H Content-Type: application/json
		''';

		if (isSet(token)) {
			var curl = StringUtil.add(${curl}, " -H 'Authorization: Bearer ${token}'", "");
		}

		JSONCurlUtil.post(${curl});
	}

	macro addPortalInstanceWithVirtualInstanceInitializer {
		Variables.assertDefined(parameterList = "${domain},${virtualHost},${portalInstanceId},${siteInitializerKey}");

		var portalURL = JSONCompany.getPortalURL();
		var parameters = JSONUtil2._addJSONObject(
			json = "{}",
			key = "domain",
			value = "\"${domain}\"");

		var parameters = JSONUtil2._addJSONObject(
			json = ${parameters},
			key = "virtualHost",
			value = "\"${virtualHost}\"");

		var parameters = JSONUtil2._addJSONObject(
			json = ${parameters},
			key = "portalInstanceId",
			value = "\"${portalInstanceId}\"");

		var parameters = JSONUtil2._addJSONObject(
			json = ${parameters},
			key = "siteInitializerKey",
			value = "\"${siteInitializerKey}\"");

		if (${authenticationMethod} == "By Screen Name") {
			var userLoginInfo = "test:test";
		}
		else {
			var userLoginInfo = JSONUtil2.formatJSONSuperAdminUser();
		}

		var curl = '''
			${portalURL}/o/headless-portal-instances/v1.0/portal-instances \
				-u ${userLoginInfo} \
				-d ${parameters} \
				-H Content-Type: application/json
		''';

		JSONCurlUtil.post(${curl});
	}

	macro cleanAllPortalInstances {
		var portalInstanceJson = HeadlessPortalInstanceAPI._getPortalInstances(authenticationMethod = ${authenticationMethod});

		var portalInstanceIds = JSONUtil.getWithJSONPath(${portalInstanceJson}, "$.items..portalInstanceId");
		var lxcEnvironment = JSONUtil2.getLXCEnvironment();

		if (${lxcEnvironment} != "true") {
			for (var portalInstanceId : list ${portalInstanceIds}) {
				if (${portalInstanceId} != "liferay.com") {
					HeadlessPortalInstanceAPI.deletePortalInstance(
						authenticationMethod = ${authenticationMethod},
						portalInstanceId = ${portalInstanceId});
				}
			}
		}
		else {

			// If LXC Environment, only delete the one we are using beforehand

			var portalURL = JSONCompany.getPortalURL();

			var portalInstance = Regex.removeHTTP(url = ${portalURL});

			var portalInstance = Regex.removePortNumber(url = ${portalInstance});

			for (var portalInstanceId : list ${portalInstanceIds}) {
				if (${portalInstanceId} == ${portalInstance}) {
					HeadlessPortalInstanceAPI.deletePortalInstance(
						authenticationMethod = ${authenticationMethod},
						portalInstanceId = ${portalInstanceId});
				}
			}
		}
	}

	macro deletePortalInstance {
		Variables.assertDefined(parameterList = ${portalInstanceId});

		var portalURL = JSONCompany.getDefaultPortalURL();
		var portalInstanceId = StringUtil.replace(${portalInstanceId}, " ", "%20");

		if (${authenticationMethod} == "By Screen Name") {
			var userLoginInfo = "test:test";
		}
		else {
			var userLoginInfo = JSONUtil2.formatJSONSuperAdminUser();
		}

		var curl = '''
			${portalURL}/o/headless-portal-instances/v1.0/portal-instances/${portalInstanceId} \
				-u ${userLoginInfo} \
				-H Content-Type: application/json
		''';

		JSONCurlUtil.delete(${curl});
	}

}