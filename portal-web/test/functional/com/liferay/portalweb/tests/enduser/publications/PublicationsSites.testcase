@component-name = "portal-publications"
definition {

	property osgi.module.configuration.file.names = "com.liferay.change.tracking.configuration.CTSettingsConfiguration.config";
	property osgi.module.configurations = "enabled=B\"true\"";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Sites Administration";
	property testray.main.component.name = "Publications";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Publications.disablePublications();
		}
	}

	@priority = 4
	test PublishPrivateChildSite {
		JSONPublications.addPublication(publicationName = "Publication Name");

		JSONPublications.selectPublication(publicationName = "Publication Name");

		HeadlessSite.addSite(siteName = "Site Name");

		Site.openSitesAdmin();

		Site.addBlankCP(
			membershipType = "Private",
			parentSiteName = "Site Name",
			siteName = "Child Site Name");

		Site.openSitesAdmin();

		LexiconTable.clickEllipsisItem(
			item = "View Child Sites",
			tableEntry = "Site Name");

		Site.viewCP(
			siteName = "Child Site Name",
			siteType = "Private");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages",
			site = "Child Site Name");

		PagesAdmin.addPage(pageName = "Child Site Page");

		PublicationsNavigator.gotoReviewChanges();

		PublicationsChanges.viewChanges(
			changeCategory = "Site",
			changeSite = "Site Name",
			changeTitle = "Child Site Name",
			changeType = "Added",
			changeUser = "Test Test");

		Publications.publishPublication(publicationName = "Publication Name");

		Navigator.openSitePage(
			pageName = "Child Site Page",
			siteName = "Child Site Name");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");
	}

	@priority = 4
	test PublishSiteCreatedInPublication {
		JSONPublications.addPublication(publicationName = "Publication Name");

		JSONPublications.selectPublication(publicationName = "Publication Name");

		HeadlessSite.addSite(siteName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Site Page");

		Site.openSitesAdmin();

		Site.viewCP(siteName = "Site Name");

		PublicationsNavigator.gotoReviewChanges();

		PublicationsChanges.viewChanges(
			changeCategory = "Site",
			changeSite = "Global",
			changeTitle = "Site Name",
			changeType = "Added",
			changeUser = "Test Test");

		Publications.publishPublication(publicationName = "Publication Name");

		Navigator.openSitePage(
			pageName = "Site Page",
			siteName = "Site Name");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");
	}

}