@component-name = "portal-questions"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Questions";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Questions Page");

		JSONLayout.addWidgetToPublicLayout(
			column = 2,
			groupName = "Guest",
			layoutName = "Questions Page",
			widgetName = "Questions");
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Message Boards");

			if (IsElementPresent(locator1 = "Questions#QUESTIONS_LIST")) {
				Questions.tearDown();
			}

			PagesAdmin.tearDownCP();
		}
	}

	@description = "Story ID: LPS-153187 | Test Summary: Verify if the user can access all questions by dropdown."
	@priority = 5
	test CanAccessAllQuestionsOnDropdown {
		task ("Given that the user adds two categories and questions") {
			JSONMBMessage.addCategory(
				categoryDescription = "Description",
				categoryName = "Questions Test Topic",
				userEmailAddress = "test@liferay.com");

			JSONMBMessage.addCategory(
				categoryDescription = "Description",
				categoryName = "Questions Category",
				userEmailAddress = "test@liferay.com");

			JSONQuestions.addQuestion(
				bodyField = "Content AddQuestion",
				categoryName = "Questions Test Topic",
				groupName = "Guest",
				titleField = "Question1");

			JSONQuestions.addQuestion(
				bodyField = "AddQuestion2",
				categoryName = "Questions Category",
				groupName = "Guest",
				titleField = "Question2");
		}

		task ("And goes to Questions Test Topic") {
			Navigator.gotoPage(pageName = "Questions Page");

			LexiconCard.clickCard(card = "Questions Test Topic");
		}

		task ("When the user select all questions on dropdown") {
			Click(
				key_topicName = "Questions Test Topic",
				locator1 = "Questions#QUESTIONS_BREADCRUMB_PARENT_TOPIC_BUTTON");

			Click(
				key_topicName = "All Questions",
				locator1 = "Questions#QUESTIONS_BREADCRUMB_TOPIC_DROPDOWN_OPTION");
		}

		task ("Then he can see all questions on a list") {
			for (var questionsList : list "Question1,Question2") {
				AssertElementPresent(
					key_questionTitle = ${questionsList},
					locator1 = "Questions#QUESTIONS_TITLE");
			}
		}
	}

	@description = "Story ID: LPS-153187 | Test Summary: Verify if the user can create a new Topic."
	@priority = 5
	test CanCreateATopic {
		task ("Given that the user goes to Questions Page") {
			Navigator.openURL();

			Navigator.gotoPage(pageName = "Questions Page");
		}

		task ("When he adds a new topic") {
			Questions.addRootTopic(
				rootTopicDescription = "Topic Description",
				rootTopicName = "Topic Name2");
		}

		task ("Then he can see the topic created card on the question page") {
			LexiconCard.viewCardPresent(card = "Topic Name2");
		}
	}

}