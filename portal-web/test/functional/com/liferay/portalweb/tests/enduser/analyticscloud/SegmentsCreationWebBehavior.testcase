@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();

		ACUtils.addSiteAndPage();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		// It is not possible to delete properties and data source after LRAC-13389. This functionality should return after LRAC-8040

		//ACUtils.tearDownAC();

		ACUtils.tearDownDXP();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9220 | Test Summary: Create a segment with behavior of commenting on a blog"
	@priority = 4
	test CanCreateWebBehaviorSegmentCommentingBlog {
		ACUtils.createBlogsAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			actionType = "Comment Blog",
			commentText = "Blogs Entry Comment",
			documentTitleList = "Blogs AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Commented on Blog");

		ACSegments.editWebBehaviorCriterion(
			indexField = 1,
			occurenceNumber = 4,
			searchTerm = "Blogs AC Title");

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			actionType = "Comment Blog",
			commentText = "Blogs Entry Comment 1",
			documentTitleList = "Blogs AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		for (var n : list "2,3") {
			Comments.addPG(entryComment = "Blogs Entry Comment ${n}");
		}

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9221 | Test Summary: Create a Web Behavior criteria at least/at most times"
	@priority = 4
	test CanCreateWebBehaviorSegmentCriteriaLeastMostTimes {
		property portal.upstream = "quarantine";

		// AC Quarantine Reason: The membership list takes a long time to update
		// AC Refactor ticket: LRAC-10769

		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.editWebBehaviorCriterion(
			atLeastMost = "at least",
			indexField = 1,
			occurenceNumber = 4,
			searchTerm = "Web Content AC Title");

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");

		ACNavigation.goToSegments();

		ACSegments.editSegment(segmentName = "Dynamic Segment Test");

		ACSegments.editWebBehaviorCriterion(
			atLeastMost = "at most",
			indexField = 1,
			occurenceNumber = 3,
			searchTerm = "Web Content AC Title");

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");
	}

	@description = "Create a segment with behavior of downloading a document"
	@priority = 5
	test CanCreateWebBehaviorSegmentDownloadingDocument {
		property test.run.type = "single";

		ACUtils.createDMAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			actionType = "Download DM",
			documentTitleList = "DM AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Downloaded Document & Media");

		ACSegments.selectDocument(
			documentTitle = "DM AC Title",
			indexField = 1);

		ACSegments.setOccurence(occurenceNumber = 4);

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			actionType = "Download DM",
			documentTitleList = "DM AC Title,DM AC Title,DM AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9222 | Test Summary: Create a Web Behavior since X days"
	@priority = 4
	test CanCreateWebBehaviorSegmentSinceXdays {
		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.editWebBehaviorCriterion(
			indexField = 1,
			occurenceNumber = 4,
			searchTerm = "Web Content AC Title",
			timeOption = "since",
			timePeriod = "Last 7 days");

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Create a Web Behavior Segment Submitting a Form"
	@priority = 5
	test CanCreateWebBehaviorSegmentSubmittingForm {
		property portal.upstream = "quarantine";

		// AC Quarantine Reason: The membership list takes a long time to update
		// AC Refactor ticket: LRAC-10769

		property test.run.type = "single";

		ACUtils.createFormAndAddToPage();

		Navigator.openURL();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			actionType = "Submit Form",
			pageName = "AC Page",
			siteName = "Site Name",
			submitText = "Test Segments");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Submitted Form");

		ACSegments.selectDocument(
			documentTitle = "Created Form Name",
			indexField = 1);

		ACSegments.setOccurence(occurenceNumber = 4);

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			actionType = "Submit Form",
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name",
			submitText = "Test Segments");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9216 | Test Summary: Add segment using a web behavior 'after' some time"
	@priority = 4
	test CanCreateWebBehaviorSegmentUsingAfter {
		property portal.upstream = "quarantine";

		// AC Quarantine Reason: The membership list takes a long time to update
		// AC Refactor ticket: LRAC-10769

		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.generateDayMonthAndYearValues(dateDifferenceFromCurrentDate = "-1");

		ACSegments.editWebBehaviorCriterion(
			day = ${staticDay},
			indexField = 1,
			month = ${staticMonth},
			occurenceNumber = 4,
			searchTerm = "Web Content AC Title",
			timeOption = "after",
			year = ${staticYear});

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9217 | Test Summary: Add segment using a web behavior 'before' some time"
	@priority = 4
	test CanCreateWebBehaviorSegmentUsingBefore {
		property portal.upstream = "quarantine";

		// AC Quarantine Reason: The membership list takes a long time to update
		// AC Refactor ticket: LRAC-10769

		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.generateDayMonthAndYearValues(dateDifferenceFromCurrentDate = 1);

		ACSegments.editWebBehaviorCriterion(
			day = ${staticDay},
			indexField = 1,
			month = ${staticMonth},
			occurenceNumber = 4,
			searchTerm = "Web Content AC Title",
			timeOption = "before",
			year = ${staticYear});

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9218 | Test Summary: Add segment using a web behavior 'between' some time"
	@ignore = "true"
	@priority = 4
	test CanCreateWebBehaviorSegmentUsingBetween {

		// AC Refactor: Data doesn't appear on time
		// AC Refactor ticket: LRAC-14011

		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.generateDayMonthAndYearValues(dateDifferenceFromCurrentDate = "-1");

		ACSegments.generateSecondDayMonthAndYearValues(dateDifferenceFromCurrentDate = 1);

		ACSegments.editWebBehaviorCriterion(
			day = ${staticDay},
			day2 = ${staticDay2},
			indexField = 1,
			month = ${staticMonth},
			month2 = ${staticMonth2},
			occurenceNumber = 4,
			searchTerm = "Web Content AC Title",
			timeOption = "between",
			year = ${staticYear},
			year2 = ${staticYear2});

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Add segment using a web behavior 'ever' done"
	@ignore = "true"
	@priority = 5
	test CanCreateWebBehaviorSegmentUsingEver {

		// AC Refactor: Data doesn't appear on time
		// AC Refactor ticket: LRAC-14011

		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.editWebBehaviorCriterion(
			indexField = 1,
			occurenceNumber = 4,
			searchTerm = "Web Content AC Title",
			timeOption = "ever");

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Create a Web Behavior using 'has not' segment"
	@priority = 5
	test CanCreateWebBehaviorSegmentUsingHasNot {
		property portal.upstream = "quarantine";
		property test.run.type = "single";

		// AC Quarantine Reason: Segment membership takes too long to update membership list

		ACUtils.createBlogsAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			actionType = "View Blog",
			documentTitleList = "Blogs AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Blog");

		ACSegments.editWebBehaviorCriterion(
			activitiesOption = "has not",
			indexField = 1,
			occurenceNumber = 4,
			searchTerm = "Blogs AC Title");

		ACSegments.saveSegment();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			actionType = "View Blog",
			documentTitleList = "Blogs AC Title,Blogs AC Title,Blogs AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9219 | Test Summary: Add segment using a web behavior 'on' some time"
	@ignore = "true"
	@priority = 4
	test CanCreateWebBehaviorSegmentUsingOn {

		// AC Refactor: Data doesn't appear on time
		// AC Refactor ticket: LRAC-14011

		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			actionType = "View WC",
			documentTitleList = "1,2,3",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${assignedPropertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.generateDayMonthAndYearValues(dateDifferenceFromCurrentDate = 0);

		ACSegments.editWebBehaviorCriterion(
			day = ${staticDay},
			indexField = 1,
			month = ${staticMonth},
			occurenceNumber = 4,
			searchTerm = "Web Content AC Title",
			timeOption = "on",
			year = ${staticYear});

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Add segment using a web behavior 'since' some time"
	@ignore = "true"
	@priority = 5
	test CanCreateWebBehaviorSegmentUsingSince {

		// AC Refactor: Data doesn't appear on time
		// AC Refactor ticket: LRAC-14011

		property test.run.type = "single";

		ACUtils.createBlogsAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			actionType = "View Blog",
			documentTitleList = "Blogs AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Blog");

		ACSegments.editWebBehaviorCriterion(
			indexField = 1,
			occurenceNumber = 4,
			searchTerm = "Blogs AC Title",
			timeOption = "since",
			timePeriod = "Yesterday");

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			actionType = "View Blog",
			documentTitleList = "Blogs AC Title,Blogs AC Title,Blogs AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACSegments.viewSegmentCriteriaWebBehavior(
			occurenceNumber = 4,
			searchTerm = "'Blogs AC Title'",
			timeOption = "since",
			timePeriod = "Yesterday");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9223 | Test Summary: Create a Web Behavior Segment of Viewing a Blog"
	@ignore = "true"
	@priority = 4
	test CanCreateWebBehaviorSegmentViewingBlog {

		// AC Refactor: Data doesn't appear on time
		// AC Refactor ticket: LRAC-14011

		property test.run.type = "single";

		ACUtils.createBlogsAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			actionType = "View Blog",
			documentTitleList = "Blogs AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Blog");

		ACSegments.editWebBehaviorCriterion(
			indexField = 1,
			occurenceNumber = 4,
			searchTerm = "Blogs AC Title");

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		ACUtils.navigateToSitePage(
			actionType = "View Blog",
			documentTitleList = "Blogs AC Title,Blogs AC Title,Blogs AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9224 | Test Summary: Create a Web Behavior Segment of Viewing Document & Media in a Topic"
	@ignore = "true"
	@priority = 4
	test CanCreateWebBehaviorSegmentViewingDM {

		// AC Refactor: Data doesn't appear on time
		// AC Refactor ticket: LRAC-14011

		property test.run.type = "single";

		var username = "ac";

		ACUtils.createDMAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "${username}@liferay.com",
			userFirstName = ${username},
			userLastName = ${username},
			userScreenName = ${username});

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "${username}@liferay.com",
			userLoginFullName = "${username} ${username}");

		ACUtils.navigateToSitePage(
			actionType = "View DM",
			documentTitleList = "DM AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Document & Media");

		ACSegments.selectDocument(
			documentTitle = "DM AC Title",
			indexField = 1);

		ACSegments.setOccurence(occurenceNumber = 4);

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "${username}@liferay.com");

		ACUtils.navigateToSitePage(
			actionType = "View DM",
			documentTitleList = "DM AC Title,DM AC Title,DM AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "${username} ${username}");
	}

	@description = "Create a segment with behavior of viewing a form"
	@ignore = "true"
	@priority = 5
	test CanCreateWebBehaviorSegmentViewingForm {

		// AC Refactor: Data doesn't appear on time
		// AC Refactor ticket: LRAC-14011

		property test.run.type = "single";

		var username = "ac";

		ACUtils.createFormAndAddToPage();

		Navigator.openURL();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "${username}@liferay.com",
			userFirstName = ${username},
			userLastName = ${username},
			userScreenName = ${username});

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "${username}@liferay.com",
			userLoginFullName = "${username} ${username}");

		ACUtils.navigateToSitePage(
			actionType = "View Form",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Form");

		ACSegments.selectDocument(
			documentTitle = "Created Form Name",
			indexField = 1);

		ACSegments.setOccurence(occurenceNumber = 4);

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "${username}@liferay.com");

		for (var n : list "1,2,3") {
			ACUtils.navigateToSitePage(
				actionType = "View Form",
				pageName = "AC Page",
				siteName = "Site Name");
		}

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "${username} ${username}");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9225 | Test Summary: Create a Web Behavior Segment of Viewing a Page"
	@ignore = "true"
	@priority = 4
	test CanCreateWebBehaviorSegmentViewingPage {

		// AC Refactor: Data doesn't appear on time
		// AC Refactor ticket: LRAC-14011

		property test.run.type = "single";

		var username = "ac";

		ACUtils.createBlogsAndAddToPage();

		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "${username}@liferay.com",
			userFirstName = ${username},
			userLastName = ${username},
			userScreenName = ${username});

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "${username}@liferay.com",
			userLoginFullName = "${username} ${username}");

		ACUtils.navigateToSitePage(
			actionType = "View Blog",
			documentTitleList = "Blogs AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${assignedPropertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Page");

		ACSegments.editWebBehaviorCriterion(
			indexField = 1,
			occurenceNumber = 4,
			searchTerm = "Blogs AC Title - Site Name - Liferay DXP");

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "${username}@liferay.com");

		ACUtils.navigateToSitePage(
			actionType = "View Blog",
			documentTitleList = "Blogs AC Title,Blogs AC Title,Blogs AC Title",
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "${username} ${username}");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9226 | Test Summary: Create a Web Behavior Segment of Viewing a Web Content"
	@ignore = "true"
	@priority = 4
	test CanCreateWebBehaviorSegmentViewingWC {

		// AC Refactor: Data doesn't appear on time
		// AC Refactor ticket: LRAC-14011

		property test.run.type = "single";

		ACUtils.createWCAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		ACUtils.navigateToSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = ${propertyName});

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACUtils.setItemName(itemName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Web Content");

		ACSegments.editWebBehaviorCriterion(
			indexField = 1,
			occurenceNumber = 4,
			searchTerm = "Web Content AC Title");

		ACSegments.saveSegment();

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewGenericText(textValueList = "There are no members found on the selected time period.,Check back later to verify if data has been received from your data sources.,Learn more about individuals.");

		ACUtils.launchDXP(userEmailAddress = "ac@liferay.com");

		for (var n : list "1,2,3") {
			ACUtils.navigateToSitePage(
				pageName = "AC Page",
				siteName = "Site Name");
		}

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACNavigation.goToSegments();

		ACSegments.accessSegment(segmentName = "Dynamic Segment Test");

		ACNavigation.switchTab(tabName = "Membership");

		ACUtils.viewNameList(nameList = "ac ac");
	}

	@description = "Bug: LRAC-8233 | Automation ID: LRAC-11537 | Test Summary: Check web behavior shows which data source data came from"
	@priority = 3
	test CheckWebBehaviorSegmentShowsWhichDataSourceDataCameFrom {
		task ("Create a blog page and view page") {
			ACUtils.createBlogsAndAddToPage();

			ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

			JSONUser.addUser(
				userEmailAddress = "ac@liferay.com",
				userFirstName = "ac",
				userLastName = "ac",
				userScreenName = "ac");

			ACDXPSettings.syncNewContactData();

			User.logoutAndLoginPG(
				userLoginEmailAddress = "ac@liferay.com",
				userLoginFullName = "ac ac");

			ACUtils.navigateToSitePage(
				actionType = "View Blog",
				documentTitleList = "Blogs AC Title",
				pageName = "AC Page",
				siteName = "Site Name");

			ACUtils.closeAllSessionsAndWait();
		}

		task ("Go to AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = ${assignedPropertyName});
		}

		task ("Create new Dynamic Segment") {
			ACNavigation.goToSegments();

			ACSegments.createDynamicSegment();

			ACUtils.setItemName(itemName = "Dynamic Segment Test");

			ACSegments.addSegmentField(segmentField = "Viewed Page");
		}

		task ("Check for data source origin") {
			var key_indexField = 1;

			Click(locator1 = "ACSegments#SELECT_BUTTON");

			ACSegments.searchSegment(findSegment = "Blogs AC Title - Site Name");

			ACUtils.viewGenericText(textValueList = ${assignedPropertyName});
		}
	}

}