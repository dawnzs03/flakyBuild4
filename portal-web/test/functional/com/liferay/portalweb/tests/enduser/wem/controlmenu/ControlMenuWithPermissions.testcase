@component-name = "portal-wcm"
definition {

	property ci.retries.disabled = "true";
	property custom.properties = "jsonws.web.service.paths.excludes=";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Control Menu";

	static var randomSiteName = StringUtil.randomString(8);

	var siteURLKey = StringUtil.toLowerCase(${randomSiteName});
	static var randomUserEmailAddress = StringUtil.randomString(8);
	var userFirstName = StringUtil.randomString(8);
	var userLastName = StringUtil.randomString(8);
	var userScreenName = StringUtil.randomString(8);

	setUp {
		task ("Set up virtual instance") {
			TestCase.setUpPortalInstance();
		}

		task ("Sign in") {
			User.firstLoginPG();
		}

		task ("Add a site based on Welcome") {
			HeadlessSite.addSite(
				siteName = ${randomSiteName},
				templateName = "Welcome",
				templateType = "Site Initializer");
		}

		task ("Add a new user") {
			JSONUser.addUser(
				userEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"),
				userFirstName = ${userFirstName},
				userLastName = ${userLastName},
				userScreenName = StringUtil.toLowerCase(${userScreenName}));

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));
		}
	}

	@description = "This is for LPS-176136. Verify when a new role is created, new users will be able to see the Control Menu through it."
	@priority = 4
	test ShowControlMenuByNewRole {
		var randomRoleKey = StringUtil.randomString(8);

		task ("Given the site administrator enables the Show Control Menu by Role") {
			JSONRole.addRegularRole(roleTitle = ${randomRoleKey});

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW_SITE_ADMINISTRATION",
				resourceName = "com.liferay.portal.kernel.model.Group",
				roleTitle = ${randomRoleKey});

			JSONRole.assignRoleToUser(
				roleTitle = ${randomRoleKey},
				userEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));

			JSONUser.addUserToSite(
				groupName = ${randomSiteName},
				userEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));

			Site.openSiteSettingsAdmin(siteURLKey = ${randomSiteName});

			Click(
				key_itemName = "Site Configuration",
				locator1 = "ListGroupItem#ITEM_TEXT");

			MenuBar.click(menuBar = "Menu Access");

			Check.checkToggleSwitch(
				checkboxName = "Show Control Menu by Role",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}

		task ("When the site administrator selects new role to see control menu") {
			Site.selectRoleToSeeControlMenu(roleTitle = ${randomRoleKey});
		}

		task ("Then the new user could see the control menu") {
			User.logoutAndLoginPG(userLoginEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));

			Navigator.gotoSitePage(
				pageName = "Home",
				siteName = ${randomSiteName});

			ControlMenu.viewHeaderTitle(headerTitle = "Home");
		}

		task ("When the site administrator removes the new role from roles that can see control menu") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");

			Site.openSiteSettingsAdmin(siteURLKey = ${randomSiteName});

			Click(
				key_itemName = "Site Configuration",
				locator1 = "ListGroupItem#ITEM_TEXT");

			MenuBar.click(menuBar = "Menu Access");

			Click(
				key_tableEntry = ${randomRoleKey},
				key_text = "times-circle",
				locator1 = "LexiconTable#TABLE_ENTRY_ICON");

			PortletEntry.save();
		}

		task ("Then the user will be not able to see the control menu") {
			User.logoutAndLoginPG(userLoginEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));

			Navigator.gotoSitePage(
				pageName = "Home",
				siteName = ${randomSiteName});

			AssertElementNotPresent(locator1 = "ControlMenu#HEADING");
		}
	}

	@description = "This is for LPS-176136. Verify is possible to hide or show Control Menu of a Role and that Administrator and Site Administrator cannot be deleted."
	@priority = 4
	test ShowControlMenuByOOTBRoles {
		task ("Given the site administrator accesses to the Site Configuration") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW_SITE_ADMINISTRATION",
				resourceName = "com.liferay.portal.kernel.model.Group",
				roleTitle = "Power User");

			JSONRole.assignRoleToUser(
				roleTitle = "Power User",
				userEmailAddress = "${randomUserEmailAddress}@liferay.com");

			JSONUser.addUserToSite(
				groupName = ${randomSiteName},
				userEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));

			Site.openSiteSettingsAdmin(siteURLKey = ${randomSiteName});

			Click(
				key_itemName = "Site Configuration",
				locator1 = "ListGroupItem#ITEM_TEXT");
		}

		task ("When the site administrator enables Show Control Menu by Role") {
			MenuBar.click(menuBar = "Menu Access");

			Check.checkToggleSwitch(
				checkboxName = "Show Control Menu by Role",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}

		task ("Then the site administrator cannot remove Administrator and Site Administrator from Roles that can see the control menu") {
			for (var accountUsers : list "Administrator,Site Administrator") {
				AssertElementNotPresent(
					key_tableEntry = ${accountUsers},
					key_text = "times-circle",
					locator1 = "LexiconTable#TABLE_ENTRY_ICON");
			}
		}

		task ("When the site administrator select the Power User to see control menu") {
			Site.selectRoleToSeeControlMenu(roleTitle = "Power User");

			AssertElementPresent(
				key_tableEntry = "Power User",
				key_text = "times-circle",
				locator1 = "LexiconTable#TABLE_ENTRY_ICON");
		}

		task ("Then the user will be able to see the control menu") {
			User.logoutAndLoginPG(userLoginEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));

			Navigator.gotoSitePage(
				pageName = "Home",
				siteName = ${randomSiteName});

			ControlMenu.viewHeaderTitle(headerTitle = "Home");
		}

		task ("When the site administrator remove the Power User from Roles that can see control menu") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");

			Site.openSiteSettingsAdmin(siteURLKey = ${randomSiteName});

			Click(
				key_itemName = "Site Configuration",
				locator1 = "ListGroupItem#ITEM_TEXT");

			MenuBar.click(menuBar = "Menu Access");

			Click(
				key_tableEntry = "Power User",
				key_text = "times-circle",
				locator1 = "LexiconTable#TABLE_ENTRY_ICON");

			PortletEntry.save();
		}

		task ("Then the user will be not able to see the control menu") {
			User.logoutAndLoginPG(userLoginEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));

			Navigator.gotoSitePage(
				pageName = "Home",
				siteName = ${randomSiteName});

			AssertElementNotPresent(locator1 = "ControlMenu#HEADING");
		}
	}

	@description = "This is for LPS-176136. Verify that users accessing the admin Page directly will see the Control Menu."
	@priority = 4
	test ViewControlMenuInWebContentAdminAsUserWithRoleOutsideRolesThatCanSeeTheControlMenu {
		var randomRoleKey = StringUtil.randomString(8);

		task ("Given the site administrator enables the Show Control Menu by Role") {
			JSONRole.addRegularRole(roleTitle = ${randomRoleKey});

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "ACCESS_IN_CONTROL_PANEL",
				resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
				roleTitle = ${randomRoleKey});

			JSONRole.assignRoleToUser(
				roleTitle = ${randomRoleKey},
				userEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));
		}

		task ("When a user with role outside roles that can see the control menu accesses to the Web Content Admin") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Home",
				siteName = ${randomSiteName});

			PageEditorEditableLink.gotoEditableFieldLink(
				fragmentName = "Heading",
				id = "element-text");

			var baseURL = PropsUtil.get("portal.url");

			PageEditorEditableLink.updateURL(url = "${baseURL}/group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_journal_web_portlet_JournalPortlet");

			PageEditor.publish();

			User.logoutAndLoginPG(userLoginEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));

			Navigator.gotoSitePage(
				pageName = "Home",
				siteName = ${randomSiteName});

			WaitForPageLoad();

			AssertElementNotPresent(locator1 = "ControlMenu#HEADING");

			Click(
				key_text = "Welcome to Liferay",
				locator1 = "Link#ANY");
		}

		task ("Then the user could see the control menu") {
			ControlMenu.viewHeaderTitle(headerTitle = "Web Content");
		}
	}

}