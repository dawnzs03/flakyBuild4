@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();

		ACUtils.addSiteAndPage();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		// It is not possible to delete properties and data source after LRAC-13389. This functionality should return after LRAC-8040

		//ACUtils.tearDownAC();

		ACUtils.tearDownDXP();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8283 | Test Summary: Change time filter in Interest card"
	@priority = 3
	test ChangeInterestTimeFilter {
		task ("Connect DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Switch to new property in AC") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = ${propertyName});
		}

		task ("Assert Interests card is set to Last 30 days by default and there are no results") {
			ACNavigation.goToSites();

			ACCards.viewCards(cardTitle = "Interests");

			ACTimeFilter.assertCurrentTimeFilterRange(
				cardName = "Interests",
				timeFilterRange = "Last 30 Days");

			ACInterests.assertNoCurrentInterests();
		}

		task ("Assert Interests card change time filter") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Interests");

			ACTimeFilter.setYesterday();

			ACTimeFilter.assertCurrentTimeFilterRange(
				cardName = "Interests",
				timeFilterRange = "Yesterday");

			ACInterests.assertNoCurrentInterests();
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8283 | Test Summary: Site overview interests card shows what the top interests are"
	@ignore = "true"
	@priority = 5
	test ShowsSitesTopInterests {
		var pageNameList = "sports,technology,science";

		task ("Connect DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Add specific pages and web contents to Site as interest topics") {
			for (var layoutName : list ${pageNameList}) {
				ACUtils.addPage(layoutName = ${layoutName});

				ACUtils.createWCAndAddToPage(
					layoutName = ${layoutName},
					webContentTitle = "Web Content AC Title ${layoutName}");
			}
		}

		task ("Add a new user and sync the Contact Data") {
			JSONUser.addUser(
				userEmailAddress = "ac@liferay.com",
				userFirstName = "ac",
				userLastName = "ac",
				userScreenName = "ac");

			ACDXPSettings.syncNewContactData();
		}

		task ("View new pages in site as new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "ac@liferay.com",
				userLoginFullName = "ac ac");

			for (var pageName : list ${pageNameList}) {
				ACUtils.navigateToSitePage(
					pageName = ${pageName},
					siteName = "Site Name");
			}
		}

		task ("Switch to new property in AC") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = ${propertyName});
		}

		task ("Assert Interests card is set to Last 30 days by default and there are no results") {
			ACNavigation.goToSites();

			ACCards.viewCards(cardTitle = "Interests");

			ACTimeFilter.assertCurrentTimeFilterRange(
				cardName = "Interests",
				timeFilterRange = "Last 30 Days");

			ACInterests.assertNoCurrentInterests();
		}

		task ("View Interests card with top interests") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Interests");

			ACTimeFilter.setYesterday();

			for (var interests : list "site name,sports,technology") {
				ACInterests.viewInterests(interestName = ${interests});
			}
		}
	}

}