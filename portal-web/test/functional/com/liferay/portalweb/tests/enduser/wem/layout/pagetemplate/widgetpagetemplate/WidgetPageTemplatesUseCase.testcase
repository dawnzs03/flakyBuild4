@component-name = "portal-wcm"
definition {

	property ci.retries.disabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Widget Page Templates";
	property testray.main.component.name = "Widget Page Templates";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		HeadlessSite.addSite(siteName = "Test Site Name");
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			PageTemplatesAdminGlobalSite.tearDownCP();

			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-143456. The site designer could reset failure count and reenable propagation when merge fail count reaches the configured threshold."
	@priority = 4
	test ResetFailureCountAndReenablePropagation {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		task ("Given a site designer has a widget page template") {
			JSONLayoutpagetemplate.addLayoutPageTemplateCollection(
				groupName = "Test Site Name",
				layoutPageTemplateCollectionName = "Page Template Set");

			JSONLayoutpagetemplate.addLayoutPageTemplateEntry(
				groupName = "Test Site Name",
				layoutPageTemplateCollectionName = "Page Template Set",
				layoutPageTemplateEntryName = "Page Template Name",
				layoutPageTemplateStatus = "Approved",
				layoutPageTemplateType = "Widget Page Template");
		}

		task ("When the site desiger increases the merge fail count to reach the configured threshold") {
			var layoutPrototypeId = JSONLayoutpagetemplate.getLayoutPrototypeId(
				groupName = "Test Site Name",
				layoutPageTemplateEntryName = "Page Template Name",
				layoutPageTemplateType = "Widget Page Template");

			var script = '''import com.liferay.portal.kernel.model.LayoutPrototype;
import com.liferay.layout.set.prototype.helper.LayoutSetPrototypeHelper;
import com.liferay.portal.kernel.module.util.SystemBundleUtil;
import com.liferay.portal.kernel.service.LayoutPrototypeLocalServiceUtil;

import org.osgi.framework.BundleContext;
import org.osgi.util.tracker.ServiceTracker;

ServiceTracker<LayoutSetPrototypeHelper, LayoutSetPrototypeHelper> serviceTracker = new ServiceTracker<>(SystemBundleUtil.getBundleContext(), LayoutSetPrototypeHelper.class, null);

serviceTracker.open();

Object layoutSetPrototypeHelper = serviceTracker.getService();

layoutSetPrototypeHelper.setMergeFailCount(LayoutPrototypeLocalServiceUtil.getLayoutPrototype(${layoutPrototypeId}), 4);

serviceTracker.close();''';

			ServerAdministration.openServerAdmin();

			ServerAdministration.executeScript(
				language = "Groovy",
				script = ${script});
		}

		task ("Then the site designer could reset the failure count and reenable propagation") {
			PageTemplatesAdmin.openPageTemplatesAdmin(siteURLKey = "test-site-name");

			Navigator.gotoNavNested(navNested = "Page Template Set");

			PageTemplatesAdmin.gotoPageTemplateEllipsisItem(
				item = "Configure",
				pageTemplateName = "Page Template Name");

			AssertTextPresent(value1 = "The propagation of changes from the Page Template has been disabled temporarily after 4 errors. Click Reset to reset the failure count and re-enable propagation.");

			Button.click(button = "Reset");

			Alert.viewSuccessMessage();

			AssertConsoleTextNotPresent(value1 = "javax.portlet.PortletException: processAction method not implemented");
		}
	}

	@description = "Assert could not add page via page template action."
	@priority = 3
	test ViewNoAddPageTabViaPageTemplatesCP {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		task ("Get site name and go to page template in global site") {
			var siteName = TestCase.getSiteName(siteName = ${siteName});

			PageTemplatesAdminGlobalSite.openGlobalPageTemplatesAdmin();
		}

		task ("Assert could not add page via Search page template") {
			PageTemplatesAdminGlobalSite.gotoPageTemplateViaEdit(pageTemplateName = "Search");

			SelectWindow(locator1 = "title=Search - ${siteName}");

			Dockbar.viewAddTabsWithNoAddPagePermission();
		}
	}

}