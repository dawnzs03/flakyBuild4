@component-name = "portal-frontend-infrastructure"
definition {

	property custom.properties = "feature.flag.LPS-164563=true${line.separator}feature.flag.LPS-167253=true";
	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Frontend Data Set";
	property testray.main.component.name = "Frontend Data Set";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		task ("Given creating a Data Set via API") {
			DataSetAdmin.goToDataSetAdminPage();

			DataSetAdmin.createDataSetEntryViaAPI(
				dataSetName = "Data Set Fields Test",
				restApplication = "/headless-admin-taxonomy/v1.0",
				restEndpoint = "/",
				restSchema = "TaxonomyCategory");
		}

		task ("And a data set view created via api") {
			DataSetAdmin.createFDSViewViaAPI(
				dataSetName = "Data Set Fields Test",
				dataSetViewDescription = "FDSViewDescription",
				key_dataSetViewNameList = "View Fields Test");
		}

		task ("When go to the View page of the data set created.") {
			DataSetAdmin.goToSpecificViewPage(
				dataSetName = "Data Set Fields Test",
				key_viewName = "View Fields Test");
		}

		task ("When goes to Fields Tab.") {
			DataSetAdmin.goToTab(tabName = "Fields");
		}
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		DataSetAdmin.deleteAllDataSetEntries();

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-185233. Confirm that composed fields (refrencing another schema) are not available for selection."
	@priority = 4
	test AssertComposedFieldsNotAvailableForSelection {
		task ("And clicks on plus button") {
			LexiconEntry.gotoAdd();
		}

		task ("Then Composed fields (refrencing another schema), are not available for selection") {
			AssertElementNotPresent(
				key_name = "parentTaxonomyCategory",
				locator1 = "DataSet#FIELDS_ITEM");

			AssertElementNotPresent(
				key_name = "parentTaxonomyVocabulary",
				locator1 = "DataSet#FIELDS_ITEM");
		}
	}

}