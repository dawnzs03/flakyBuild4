@component-name = "portal-publications"
definition {

	property osgi.module.configuration.file.names = "com.liferay.change.tracking.configuration.CTSettingsConfiguration.config";
	property osgi.module.configurations = "enabled=B\"true\"";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Roles";
	property testray.main.component.name = "Publications";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Publications.disablePublications();
		}
	}

	@priority = 4
	test CanPublishDeletedRoleWithDefinedPermissions {
		JSONRole.addRegularRole(
			roleKey = "Regrole Name",
			roleTitle = "Regrole Name");

		for (var resourceActionIndex : list "ADD_PUBLICATION,PERMISSIONS") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = ${resourceActionIndex},
				resourceName = "com.liferay.change.tracking",
				roleTitle = "Regrole Name");
		}

		JSONPublications.addPublication(publicationName = "Publication Name");

		JSONPublications.selectPublication(publicationName = "Publication Name");

		JSONRole.deleteRole(roleTitle = "Regrole Name");

		PublicationsNavigator.gotoReviewChanges(
			gotoPublicationsAdmin = "true",
			publicationName = "Publication Name");

		PublicationsChanges.viewChanges(
			changeCategory = "Role",
			changeSite = "Global",
			changeTitle = "Regrole Name",
			changeType = "Deleted",
			changeUser = "Test Test");

		PublicationsChanges.viewChanges(
			changeCategory = "Permissions",
			changeOrder = 2,
			changeSite = "Global",
			changeTitle = "Regrole Name Permissions for Publications All Sites and Asset Libraries",
			changeType = "Deleted",
			changeUser = "Test Test",
			showAllItems = "true");

		Publications.publishPublication(publicationName = "Publication Name");
	}

	@priority = 4
	test CanPublishEditedRoleWithDefinedPermissions {
		JSONRole.addRegularRole(
			roleKey = "Regrole Name",
			roleTitle = "Regrole Name");

		for (var resourceActionIndex : list "ADD_PUBLICATION,PERMISSIONS") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = ${resourceActionIndex},
				resourceName = "com.liferay.change.tracking",
				roleTitle = "Regrole Name");
		}

		JSONPublications.addPublication(publicationName = "Publication Name");

		JSONPublications.selectPublication(publicationName = "Publication Name");

		Permissions.removePermissionViaAPI(
			resourceAction = "ADD_PUBLICATION",
			resourceName = "com.liferay.change.tracking",
			roleTitle = "Regrole Name");

		PublicationsNavigator.gotoReviewChanges(
			gotoPublicationsAdmin = "true",
			publicationName = "Publication Name");

		PublicationsChanges.viewChanges(
			changeCategory = "Permissions",
			changeSite = "Global",
			changeTitle = "Regrole Name Permissions for Publications All Sites and Asset Libraries",
			changeType = "Modified",
			changeUser = "Test Test",
			showAllItems = "true");

		Publications.publishPublication(publicationName = "Publication Name");
	}

	@priority = 4
	test CanPublishNewRoleWithDefinedPermissions {
		JSONPublications.addPublication(publicationName = "Publication Name");

		JSONPublications.selectPublication(publicationName = "Publication Name");

		JSONRole.addRegularRole(
			roleKey = "Regrole Name",
			roleTitle = "Regrole Name");

		for (var resourceActionIndex : list "VIEW,VIEW_CONTROL_PANEL") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = ${resourceActionIndex},
				resourceName = 90,
				roleTitle = "Regrole Name");
		}

		PublicationsNavigator.gotoReviewChanges(
			gotoPublicationsAdmin = "true",
			publicationName = "Publication Name");

		PublicationsChanges.viewChanges(
			changeCategory = "Role",
			changeSite = "Global",
			changeTitle = "Regrole Name",
			changeType = "Added",
			changeUser = "Test Test");

		PublicationsChanges.viewChanges(
			changeCategory = "Permissions",
			changeOrder = 2,
			changeSite = "Global",
			changeTitle = "Regrole Name Permissions for Portal",
			changeType = "Added",
			changeUser = "Test Test",
			showAllItems = "true");

		Publications.publishPublication(publicationName = "Publication Name");
	}

}