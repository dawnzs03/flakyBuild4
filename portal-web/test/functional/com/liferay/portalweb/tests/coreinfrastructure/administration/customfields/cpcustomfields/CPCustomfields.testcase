@component-name = "portal-portal-configuration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Custom Fields";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			CustomFields.tearDownCP();

			JSONUser.tearDownNonAdminUsers();
		}
	}

	@priority = 4
	test AddCustomFieldsSmoke {
		property osgi.app.includes = "bookmarks";
		property portal.release = "false";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Custom Fields");

		CustomFields.addCP(
			customFieldName = "Text Area",
			customFieldType = "Text Area",
			resourceName = "Blogs Entry");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Date",
			customFieldType = "Date",
			resourceName = "Bookmarks Entry");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Number",
			customFieldType = "Input Field",
			customInputDataType = "Integer",
			resourceName = "Bookmarks Folder");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Dropdown",
			customFieldType = "Dropdown",
			resourceName = "Calendar Event");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Checkbox",
			customFieldType = "Checkbox",
			resourceName = "Document");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Geolocation",
			customFieldType = "Geolocation",
			resourceName = "Documents Folder");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Text Field",
			customFieldType = "Input Field",
			customInputDataType = "Text",
			resourceName = "Knowledge Base Article");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Text Area",
			customFieldType = "Text Area",
			resourceName = "Knowledge Base Folder");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Text Field",
			customFieldType = "Input Field",
			customInputDataType = "Text",
			resourceName = "Message Boards Category");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Number",
			customFieldType = "Input Field",
			customInputDataType = "Integer",
			resourceName = "Message Boards Message");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Dropdown",
			customFieldType = "Dropdown",
			resourceName = "Organization");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Checkbox",
			customFieldType = "Checkbox",
			resourceName = "Page");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Radio",
			customFieldType = "Radio",
			resourceName = "Role");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Geolocation",
			customFieldType = "Geolocation",
			resourceName = "Site");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Geolocation",
			customFieldType = "Geolocation",
			resourceName = "User");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Date",
			customFieldType = "Date",
			resourceName = "User Group");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Text Field",
			customFieldType = "Input Field",
			customInputDataType = "Text",
			localization = "true",
			resourceName = "Web Content Article");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Text Area",
			customFieldType = "Text Area",
			localization = "true",
			resourceName = "Web Content Folder");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Number",
			customFieldType = "Input Field",
			customInputDataType = "Decimal",
			resourceName = "Wiki Page");
	}

	@priority = 5
	test AddCustomFieldUserTextField {
		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Nickname",
			customFieldType = "Input Field",
			customInputDataType = "Text",
			resourceName = "User",
			startingValue = "Nickname");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		User.openUsersAdmin();

		UserNavigator.gotoUser(userScreenName = "usersn");

		User.viewUserCustomFieldsCP(
			customFieldName = "Nickname",
			customFieldType = "Input Field",
			startingValue = "Nickname");
	}

	@description = "This is a use case for LPS-146795. The user admin could add new user with space character in geolocation custom field name."
	@priority = 4
	test AddNewUserWithGeolocationCustomFields {
		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Test Field",
			customFieldType = "Geolocation",
			resourceName = "User");

		User.openUsersAdmin();

		User.addCP(
			lat = "39.88446750779911",
			lng = "116.37856166209812",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Alert.viewSuccessMessage();

		User.openUsersAdmin();

		User.viewCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");
	}

	@priority = 5
	test EditCustomFieldUserTextField {
		property app.server.types = "jboss,tcserver,tomcat,weblogic,websphere,wildfly";
		property database.types = "db2,hypersonic,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property environment.acceptance = "true";
		property operating.system.types = "alpine,amazonlinux,centos,debian,fedora,orcllinux,osx,redhat,rockylinux,solaris,suse,ubuntu,windows";
		property portal.acceptance = "true";

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Text Field",
			customFieldType = "Input Field",
			customInputDataType = "Text",
			resourceName = "User");

		CustomFields.openCustomFieldAdmin();

		CustomFields.editCP(
			customFieldName = "Text Field",
			customFieldType = "Input Field",
			resourceName = "User",
			startingValue = "Text Field");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		User.openUsersAdmin();

		UserNavigator.gotoUser(userScreenName = "usersn");

		User.viewUserCustomFieldsCP(
			customFieldName = "Text Field",
			customFieldValue = "Text Field",
			startingValue = "Nickname");
	}

	@priority = 4
	test EditRevertCustomFieldWikiPage {
		var siteName = TestCase.getSiteName(siteName = ${siteName});

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Text Field",
			customFieldType = "Input Field",
			customInputDataType = "Text",
			resourceName = "Wiki Page");

		PagesAdmin.openPagesAdmin(siteURLKey = "guest");

		PagesAdmin.addPage(pageName = "Wiki Test Page");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		Portlet.addPG(portletName = "Wiki");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.addPG(
			customFieldText = "Wiki Text Custom Field",
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");

		WikiPage.editPagePG(
			customFieldTextEdit = "Wiki Text Custom Field Edit",
			wikiPageContentEdit = "Wiki Page Content Edit",
			wikiPageTitle = "Wiki Page Title");

		WikiPage.viewPagePG(
			customFieldText = "Wiki Text Custom Field Edit",
			wikiPageContent = "Wiki Page Content Edit",
			wikiPageTitle = "Wiki Page Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page Title");

		WikiPage.revertEditPG(
			wikiPageRevisionNew = "1.2",
			wikiPageRevisionOld = "1.0",
			wikiPageTitle = "Wiki Page Title",
			wikiVersionSummary = "Reverted to 1.0");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page Title");

		WikiPage.viewPagePG(
			customFieldText = "Wiki Text Custom Field",
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");
	}

	@description = "This is a use case for LPS-57830."
	@priority = 4
	test UpdateDocumentWithCustomField {
		HeadlessSite.addSite(siteName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Documents and Media Page");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Documents and Media Page",
			widgetName = "Documents and Media");

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		DMDocument.enableActionsMenuOnPortlet();

		JSONRole.addRegularRole(
			roleKey = "Update DM Role",
			roleTitle = "Update DM Role");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.expando.kernel.model.ExpandoColumn",
			roleTitle = "Update DM Role");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "UPDATE",
			resourceName = "com.liferay.document.library.kernel.model.DLFileEntry",
			roleTitle = "Update DM Role");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONRole.assignRoleToUser(
			roleTitle = "Update DM Role",
			userEmailAddress = "userea@liferay.com");

		User.openUsersAdmin();

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		CustomFields.openCustomFieldAdmin();

		CustomFields.addCP(
			customFieldName = "Note",
			customFieldType = "Input Field",
			customInputDataType = "Text",
			resourceName = "Document");

		Navigator.openSiteURL(siteName = "Site Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.addCP(
			customFieldText = "This is my favorate Document",
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMDocument.editPG(dmDocumentTitle = "DM Document Title");

		AssertConsoleTextNotPresent(value1 = "PrincipalException$MustHavePermission");

		AssertConsoleTextNotPresent(value1 = "must have UPDATE permission for com.liferay.portlet.expando.model.ExpandoColumn");
	}

}