@component-name = "portal-database-upgrade-framework"
definition {

	property app.server.types = "tomcat";
	property ci.retries.disabled = "true";
	property database.types = "mysql";
	property portal.release = "true";
	property portal.upstream = "true";
	property test.liferay.virtual.instance = "false";
	property test.run.type = "single";
	property testray.main.component.name = "Database Upgrade Framework";

	@priority = 4
	test CompareLatest7413PartitionedUpgradedAndFreshDBSchemas {
		property database.bare.enabled = "true";
		property database.partition.enabled = "true";
		property skip.start.app.server = "true";
		property testcase.url = "file:///opt/dev/projects/github/liferay-portal/";

		var releaseBundleVersion = PropsUtil.get("test.released.release.bundle.version");
		var releaseBundleZipURL = PropsUtil.get("test.released.test.portal.bundle.zip.url");

		task ("Given the user is using the latest 7413 portal version") {
			AntCommands.runCommand("build-test.xml", "prepare-upgrade-released-bundle-test-environment -Dtest.released.release.bundle.version=${releaseBundleVersion} -Dtest.released.test.portal.bundle.zip.url=${releaseBundleZipURL}");

			Portlet.startServer(keepOsGiState = "true");

			AntCommands.runCommand("build-test.xml", "wait-for-license-activation");

			Navigator.openSpecificURL(url = "http://localhost:8080");
		}

		task ("And a partitioned is present") {
			HeadlessPortalInstanceAPI.addPortalInstance(
				domain = "www.able.com",
				portalInstanceId = "www.able.com",
				virtualHost = "www.able.com");

			var upgradedCompanyId = JSONCompany.getCompanyId(portalInstanceName = "www.able.com");
		}

		task ("And the server is upgraded to a new version") {
			Portlet.shutdownServer();

			AntCommands.runCommand("build-test.xml", "prepare-upgrade-original-bundle-test-environment");

			Portlet.startServer(deleteLiferayHome = "false");

			User.firstLoginPG(
				password = "test",
				userEmailAddress = "test@www.able.com",
				virtualHostsURL = "http://www.able.com:8080");

			Portlet.shutdownServer();
		}

		task ("And the database is captured") {
			AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=upgraded -Ddatabase.schema.name=lportal");

			AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=upgraded -Ddatabase.schema.name=lpartition_${upgradedCompanyId}");
		}

		task ("When the server is started again with a fresh database") {
			AntCommands.runCommand("build-test.xml", "rebuild-database -Ddatabase.type=mysql -Dsql.dir=sql/create-bare/ -Dsql.file=create-bare-mysql.sql");

			TestCase.updatePortalProperties(
				newProperty = "upgrade.database.auto.run=false",
				oldProperty = "upgrade.database.auto.run=true");

			SQL.executeMySQLStatement(mysqlStatement = "DROP DATABASE lpartition_${upgradedCompanyId};");

			Portlet.startServer();

			User.firstLoginPG(
				password = "test",
				userEmailAddress = "test@liferay.com",
				virtualHostsURL = "http://localhost:8080");
		}

		task ("And a new partition is created to emulate the same enviroment as before") {
			HeadlessPortalInstanceAPI.addPortalInstance(
				domain = "www.baker.com",
				portalInstanceId = "www.baker.com",
				virtualHost = "www.baker.com");

			User.firstLoginPG(
				password = "test",
				userEmailAddress = "test@www.baker.com",
				virtualHostsURL = "http://www.baker.com:8080");
		}

		task ("And the database is captured again") {
			var freshCompanyId = JSONCompany.getCompanyId(portalInstanceName = "www.baker.com");

			Portlet.shutdownServer();

			AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=fresh -Ddatabase.schema.name=lportal");

			AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=fresh -Ddatabase.schema.name=lpartition_${freshCompanyId}");
		}

		task ("Then the schemas structure is the same between upgraded and fresh databases") {
			UpgradeSchema.validateSchemas(
				freshDBSchemaName = "lpartition_${freshCompanyId}",
				upgradedDBSchemaName = "lpartition_${upgradedCompanyId}");

			UpgradeSchema.validateSchemas(
				freshDBSchemaName = "lportal",
				upgradedDBSchemaName = "lportal");
		}
	}

	@ignore = "true"
	@priority = 4
	test ComparePartitionedUpgradedAndFreshDBSchemas7413 {
		property data.archive.type = "data-archive-portal-partition";
		property database.partition.enabled = "true";
		property liferay.online.properties = "true";
		property portal.version = "7.4.13.u33";

		task ("Given the user have a partitioned upgraded base And export the schemas") {
			Portlet.shutdownServer();

			AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=upgraded -Ddatabase.schema.name=lportal");

			AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=upgraded -Ddatabase.schema.name=lpartition_44913");

			AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=upgraded -Ddatabase.schema.name=lpartition_42638");
		}

		task ("When the user rebuild the database And clean the missing partitions") {
			AntCommands.runCommand("build-test.xml", "rebuild-database -Ddatabase.type=mysql -Dsql.dir=sql/create-bare/ -Dsql.file=create-bare-mysql.sql");

			SQL.executeMySQLStatement(mysqlStatement = "DROP DATABASE lpartition_42638;");

			SQL.executeMySQLStatement(mysqlStatement = "DROP DATABASE lpartition_44913;");
		}

		task ("And the user start the server again to have a fresh and clean base") {
			Portlet.startServer();

			User.firstLoginPG(
				password = "test",
				userEmailAddress = "test@liferay.com",
				virtualHostsURL = "http://localhost:8080");
		}

		task ("And the user add two new partitions to emulate the same enviroment as before") {
			HeadlessPortalInstanceAPI.addPortalInstance(
				domain = "www.able.com",
				portalInstanceId = "www.able.com",
				virtualHost = "www.able.com");

			HeadlessPortalInstanceAPI.addPortalInstance(
				domain = "www.baker.com",
				portalInstanceId = "www.baker.com",
				virtualHost = "www.baker.com");

			User.firstLoginPG(
				password = "test",
				userEmailAddress = "test@www.able.com",
				virtualHostsURL = "http://www.able.com:8080");
		}

		task ("Then he export the fresh schemas") {
			var companyId1 = JSONCompany.getCompanyId(portalInstanceName = "www.able.com");
			var companyId2 = JSONCompany.getCompanyId(portalInstanceName = "www.baker.com");

			Portlet.shutdownServer();

			AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=fresh -Ddatabase.schema.name=lportal");

			AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=fresh -Ddatabase.schema.name=lpartition_${companyId1}");

			AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=fresh -Ddatabase.schema.name=lpartition_${companyId2}");
		}

		task ("And validate that the schemas structure is the same between upgraded and fresh bases") {
			UpgradeSchema.validateSchemas(
				freshDBSchemaName = "lpartition_${companyId1}",
				upgradedDBSchemaName = "lpartition_44913");

			UpgradeSchema.validateSchemas(
				freshDBSchemaName = "lpartition_${companyId2}",
				upgradedDBSchemaName = "lpartition_42638");

			UpgradeSchema.validateSchemas(
				freshDBSchemaName = "lportal",
				upgradedDBSchemaName = "lportal");
		}
	}

	@priority = 4
	test CompareUpgradedAndFreshDatabaseSchemas6130 {
		property custom.properties = "feature.flag.LPS-157670=true";
		property data.archive.type = "data-archive-portal";
		property portal.version = "6.1.30";

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=upgraded -Ddatabase.schema.name=lportal");

		AntCommands.runCommand("build-test.xml", "rebuild-database -Ddatabase.type=mysql -Dsql.dir=sql/create-bare/ -Dsql.file=create-bare-mysql.sql");

		Portlet.startServer();

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=fresh -Ddatabase.schema.name=lportal");

		UpgradeSchema.validateSchemas(
			freshDBSchemaName = "lportal",
			upgradedDBSchemaName = "lportal");
	}

	@priority = 4
	test CompareUpgradedAndFreshDatabaseSchemas7210 {
		property data.archive.type = "data-archive-portal";
		property portal.version = "7.2.10";

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=upgraded -Ddatabase.schema.name=lportal");

		AntCommands.runCommand("build-test.xml", "rebuild-database -Ddatabase.type=mysql -Dsql.dir=sql/create-bare/ -Dsql.file=create-bare-mysql.sql");

		Portlet.startServer();

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=fresh -Ddatabase.schema.name=lportal");

		UpgradeSchema.validateSchemas(
			freshDBSchemaName = "lportal",
			upgradedDBSchemaName = "lportal");
	}

	@priority = 4
	test CompareUpgradedAndFreshDatabaseSchemas7310 {
		property data.archive.type = "data-archive-portal";
		property portal.version = "7.3.10";

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=upgraded -Ddatabase.schema.name=lportal");

		AntCommands.runCommand("build-test.xml", "rebuild-database -Ddatabase.type=mysql -Dsql.dir=sql/create-bare/ -Dsql.file=create-bare-mysql.sql");

		Portlet.startServer();

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=fresh -Ddatabase.schema.name=lportal");

		UpgradeSchema.validateSchemas(
			freshDBSchemaName = "lportal",
			upgradedDBSchemaName = "lportal");
	}

	@priority = 4
	test CompareUpgradedAndFreshDatabaseSchemas7413 {
		property data.archive.type = "data-archive-portal";
		property portal.version = "7.4.13";

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=upgraded -Ddatabase.schema.name=lportal");

		AntCommands.runCommand("build-test.xml", "rebuild-database -Ddatabase.type=mysql -Dsql.dir=sql/create-bare/ -Dsql.file=create-bare-mysql.sql");

		Portlet.startServer();

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=fresh -Ddatabase.schema.name=lportal");

		UpgradeSchema.validateSchemas(
			freshDBSchemaName = "lportal",
			upgradedDBSchemaName = "lportal");
	}

	@priority = 4
	test CompareUpgradedAndFreshDatabaseSchemas70106 {
		property data.archive.type = "data-archive-portal";
		property portal.version = "7.0.10.6";

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=upgraded -Ddatabase.schema.name=lportal");

		AntCommands.runCommand("build-test.xml", "rebuild-database -Ddatabase.type=mysql -Dsql.dir=sql/create-bare/ -Dsql.file=create-bare-mysql.sql");

		Portlet.startServer();

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=fresh -Ddatabase.schema.name=lportal");

		UpgradeSchema.validateSchemas(
			freshDBSchemaName = "lportal",
			upgradedDBSchemaName = "lportal");
	}

	@priority = 4
	test CompareUpgradedAndFreshDatabaseSchemas71103 {
		property data.archive.type = "data-archive-portal";
		property portal.version = "7.1.10.3";

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=upgraded -Ddatabase.schema.name=lportal");

		AntCommands.runCommand("build-test.xml", "rebuild-database -Ddatabase.type=mysql -Dsql.dir=sql/create-bare/ -Dsql.file=create-bare-mysql.sql");

		Portlet.startServer();

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=fresh -Ddatabase.schema.name=lportal");

		UpgradeSchema.validateSchemas(
			freshDBSchemaName = "lportal",
			upgradedDBSchemaName = "lportal");
	}

	@priority = 4
	test CompareUpgradedAndFreshDatabaseSchemas621021 {
		property data.archive.type = "data-archive-portal";
		property portal.version = "6.2.10.21";

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=upgraded -Ddatabase.schema.name=lportal");

		AntCommands.runCommand("build-test.xml", "rebuild-database -Ddatabase.type=mysql -Dsql.dir=sql/create-bare/ -Dsql.file=create-bare-mysql.sql");

		Portlet.startServer();

		Portlet.shutdownServer();

		AntCommands.runCommand("build-test.xml", "export-database-schema -Ddatabase.file.prefix=fresh -Ddatabase.schema.name=lportal");

		UpgradeSchema.validateSchemas(
			freshDBSchemaName = "lportal",
			upgradedDBSchemaName = "lportal");
	}

}