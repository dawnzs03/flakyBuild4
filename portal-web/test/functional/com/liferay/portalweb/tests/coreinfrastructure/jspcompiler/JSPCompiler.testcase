@component-name = "portal-jsp-compiler"
definition {

	property ci.retries.disabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "JSP Compiler";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Verify custom code in a deployed OSGI fragments is executed"
	@priority = 3
	test OSGIFragmentsAreDetectedAsOutdated {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		task ("Given an OSGI fragment with custom code is deployed") {
			var customCode = '''<p style="color: red">changed</p>''';
			var liferayHome = PropsUtil.get("liferay.home.dir.name");
			var moduleBaseDir = "modules/apps/adaptive-media/adaptive-media-blogs-web-fragment";
			var projectDir = PropsUtil.get("project.dir");

			FileUtil.write("${projectDir}/${moduleBaseDir}/src/main/resources/META-INF/resources/init-ext.jsp", ${customCode});

			AntCommands.runCommand("build-test.xml", "deploy-osgi-module-to-specific-bundle -DliferayHome=${liferayHome} -Dmodule.base.dir=${moduleBaseDir}");

			WaitForConsoleTextPresent(value1 = "STOPPED com.liferay.blogs.web_");
		}

		task ("Then the custom code is executed") {
			BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

			Refresh();

			AssertElementPresent(locator1 = "//p[contains(@style,'color: red')][text()='changed']");
		}
	}

}