@component-name = "portal-clustering"
definition {

	property app.server.bundles.size = "1";
	property cluster.enabled = "true";
	property minimum.slave.ram = "24";
	property portal.release = "true";
	property portal.upstream = "true";
	property remote.elasticsearch.enabled = "true";
	property test.assert.warning.exceptions = "true";
	property testray.main.component.name = "Clustering";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@priority = 4
	test PersistentAndMemoryJobs {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		Groovy.runScriptViaGogoShell(
			expectedOutput = "Persistent job 1 is added",
			scriptFile = "groovy-script-portal-scheduler-persistent-1.groovy");

		Groovy.runScriptViaGogoShell(
			expectedOutput = "Persistent job 2 is added",
			nodePort = 9080,
			scriptFile = "groovy-script-portal-scheduler-persistent-2.groovy");

		Groovy.runScriptViaGogoShell(
			expectedOutput = "Memory job 1 is added",
			scriptFile = "groovy-script-portal-scheduler-memory-1.groovy");

		Groovy.runScriptViaGogoShell(
			expectedOutput = "Memory job 2 is added",
			nodePort = 9080,
			scriptFile = "groovy-script-portal-scheduler-memory-2.groovy");

		Groovy.runScriptViaGogoShell(
			expectedOutput = "Memory clustered job 1 is added",
			scriptFile = "groovy-script-portal-scheduler-memory-clustered-1.groovy");

		Groovy.runScriptViaGogoShell(
			expectedOutput = "Memory clustered job 2 is added",
			nodePort = 9080,
			scriptFile = "groovy-script-portal-scheduler-memory-clustered-2.groovy");
	}

}