@component-name = "portal-clustering"
definition {

	property cluster.enabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property remote.elasticsearch.enabled = "true";
	property test.assert.warning.exceptions = "true";
	property testray.main.component.name = "Clustering";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testLiferayVirtualInstance = PropsUtil.get("test.liferay.virtual.instance");

		if (${testLiferayVirtualInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@priority = 5
	test AutodetectClusteringAddress {
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		AssertConsoleTextPresent(value1 = "bind_addr=127.0.0.1");

		AssertConsoleTextNotPresent(value1 = "Autodetecting JGroups outgoing IP address and interface for www.google.com:80");
	}

	@priority = 5
	test CustomClusteringAddress {
		property cluster.node.ip = "true";
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		var ipAddress = PropsUtil.get("ip.address");

		AssertConsoleTextPresent(value1 = "bind_addr=${ipAddress}");
	}

	@priority = 5
	test CustomControlChannelPropertiesFile {
		property custom.properties = "cluster.link.channel.properties.control=tcp.xml";
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		AssertConsoleTextPresent(value1 = "Create a new JGroups channel");

		AssertConsoleTextPresent(value1 = "properties: TCP");
	}

	@priority = 5
	test CustomizeChannelNames {
		property custom.properties = "cluster.link.channel.name.control=test-control-channel${line.separator}cluster.link.channel.name.transport.0=test-transport-channel";
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		AssertConsoleTextPresent(value1 = "channelName: test-control-channel");

		AssertConsoleTextPresent(value1 = "channelName: test-transport-channel");
	}

	@priority = 5
	test CustomTransportChannelPropertiesFile {
		property cluster.enabled = "false";
		property custom.properties = "cluster.link.enabled=true${line.separator}cluster.link.channel.properties.transport.0=tcp.xml";
		property test.liferay.virtual.instance = "false";
		property test.run.type = "single";

		AssertConsoleTextPresent(value1 = "Create a new JGroups channel");

		AssertConsoleTextPresent(value1 = "properties: TCP");

		AssertConsoleTextPresent(value1 = "Autodetecting JGroups outgoing IP address and interface for www.google.com:80");
	}

}